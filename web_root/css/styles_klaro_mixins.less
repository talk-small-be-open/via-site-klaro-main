// =======================================================================
// Mixins
// =======================================================================


// Prevent that the user can select text
.noUserSelect() {
		user-select: none;
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		cursor: default;
}

// Prevent touch actions
.noTouch() {
		touch-action: none;
}

.draggable() {
		.noUserSelect();
		.noTouch();
		cursor: move;
}

.dropHover() {
		&.dropHover {
				background-color: @dropTargetHoverColor;
		}
}

.hiddenSectionButWithDefinedDimension() {
		// Nicht display:none, weil das Berechnungen der enthaltenen Elemente mit Breite etc. nicht m√∂glich macht				
		position: absolute !important;
		top: -9999px !important;
		left: -9999px !important;
		width: 100%; // TODO: Smarter, aber ich fand nicht heraus, wo die Breite drin steht. Wir brauchen aber eine feste Breite, damit die Berechnung per JS OK ist
		visibility: hidden;
}


@keyframes pulse { 
		0% {
				opacity: 100%;
		} 
		50% {
				opacity: 50%;
		} 
}
.pulseAnimation() {
		animation-name: pulse;
		animation-duration: 1s;
		animation-timing-function: linear;
		animation-iteration-count: infinite;
		animation-direction: alternate;
}

// See https://animista.net/play/entrances/slide-in/slide-in-right

@keyframes slide-in-right {
  0% {
    transform: translateX(300px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

.slide-in-right() {
		animation: slide-in-right 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
}




// Local Variables:
// less-css-compile-at-save: t
// End:
