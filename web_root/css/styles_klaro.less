//
// Styles for hep Klaro
//
// Namespace: "l-" = short for local App

// =======================================================================
// Fonts
// =======================================================================


@font-face {
		font-family: 'DCH';
		font-weight: 700;
		font-style: normal;
		src: url('fonts/dchbasisschrift.woff') format('woff');
}


@font-face {
    font-family: 'FF Unit Rounded Pro Regular';
    font-style: normal;
    font-weight: normal;
    src: local('FF Unit Rounded Pro Regular'), url('fonts/FF Unit Rounded Pro Regular.woff') format('woff');
}


@font-face {
    font-family: 'FF Unit Rounded Pro Light';
    font-style: normal;
    font-weight: normal;
    src: local('FF Unit Rounded Pro Light'), url('fonts/FF Unit Rounded Pro Light.woff') format('woff');
}


@font-face {
    font-family: 'FF Unit Rounded Pro Medium';
    font-style: normal;
    font-weight: normal;
    src: local('FF Unit Rounded Pro Medium'), url('fonts/FF Unit Rounded Pro Medium.woff') format('woff');
}


@font-face {
    font-family: 'FF Unit Rounded Pro Bold';
    font-style: normal;
    font-weight: normal;
    src: local('FF Unit Rounded Pro Bold'), url('fonts/FF Unit Rounded Pro Bold.woff') format('woff');
}

@font-face {
    font-family: 'FF Unit Rounded Pro Black';
    font-style: normal;
    font-weight: normal;
    src: local('FF Unit Rounded Pro Black'), url('fonts/FF Unit Rounded Pro Black.woff') format('woff');
}


@font-face {
    font-family: 'FF Unit Rounded Pro Ultra';
    font-style: normal;
    font-weight: normal;
    src: local('FF Unit Rounded Pro Ultra'), url('fonts/FF Unit Rounded Pro Ultra.woff') format('woff');
}




// =======================================================================
// Importing
// =======================================================================

// Full CSS reset
@import "reset.css";

// Import main styles
// DONT, since we have a very specialized UI, not depending on uikit etc.
// @import "../../base/web_root/css/styles.less";
@import "../../base/web_root/css/development.less";

// Our SITE own uikit theme (overrides to the via base uikit theme)
// @import "uikit_theme/_import.less";

@import "testdrive.less";

// =======================================================================
// Variables
// =======================================================================


// prefix @l = "local"

@l-color-lightgreen: #F6F7E5;
@l-color-green: #B7C18D;
@l-color-mediumgreen: #E5EED8;

@l-color-blue-d: #40627A;
@l-color-blue: #5883A5;
@l-color-blue-l: #89B3C3;
@l-color-blue-ll: #ADCCD8;
@l-color-blue-lll: #D6E5EB;
@l-color-blue-llll: #EAF2F5;
@l-color-blue-lllll: #FAFCFC;

@l-color-blue-gray: #70899B;

@l-header-background: white;

@l-color-background: #EAE7E3;
@l-color-text: @l-color-blue; //  #575754;
@l-color-main: @l-color-blue;

@l-color-pink: #F2B2B4;

// Redefine basics for this via sub-website
@via-basic-color: @l-color-text;
@via-basic-background-color: @l-color-background;


// Breakpoints
// ========================================================================

// Phone Portrait:   Galaxy (360x640), iPhone 6 (375x667), iPhone 6+ (414x736)
// Phone Landscape:  Galaxy (640x360), iPhone 6 (667x375), iPhone 6+ (736x414)
// Tablet Portrait:  iPad (768x1024), Galaxy Tab (800x1280),
// Tablet Landscape: iPad (1024x768), iPad Pro (1024x1366),
// Desktop:          Galaxy Tab (1280x800), iPad Pro (1366x1024)

@breakpoint-small:                             640px;  // Phone landscape
@breakpoint-medium:                            960px;  // Tablet Landscape
@breakpoint-large:                             1200px; // Desktop
@breakpoint-xlarge:                            1600px; // Large Screens

@breakpoint-xsmall-max:                        (@breakpoint-small - 1);
@breakpoint-small-max:                         (@breakpoint-medium - 1);
@breakpoint-medium-max:                        (@breakpoint-large - 1);
@breakpoint-large-max:                         (@breakpoint-xlarge - 1);



// =======================================================================
// Mixins
// =======================================================================

@import "styles_klaro_mixins.less";


// =======================================================================
// General Styles
// =======================================================================

// html {

// }


body {
		font-family: 'FF Unit Rounded Pro Regular';
		font-size: 15px;
		color: @l-color-text;

		.preventStupidTouchStuff();
										 
		// div.footer {
		// }

		// Styles for the non-logged in public UI
		// &.public {
		// }
}



a {
		// Dadurch sind Links von Text nicht unterscheidbar nach Farbe. Wir arbeiten aber mit Symbolen.
		color: @l-color-text;
		cursor: pointer;
		
		.active() {
				color: @l-color-blue-d;
				text-decoration: none;
		}
		
		@media (hover: hover) {
				&:hover {
						.active();
				}
		}

		&:active {
				.active();
		}
		
}

h1 {
		font-size: 2rem;
}
h2 {
		font-size: 1.5rem;
}
h3 {
		font-size: 1.2rem;
}

h1, h2, h3 {
		margin-bottom: 0.5em;
}

strong {
		font-weight: bold;
}

em {
		font-style: italic;
}

u {
		text-decoration: underline;
}

form {
		label {
				display: block;
				margin: 0.5em 0;
		}

		button[type=submit] {
				border: 1px solid @l-color-blue;
				padding: 10px;
				cursor: pointer;
				background-color: @l-color-blue-l;
				color: white;

				&:hover {
						background-color: @l-color-blue;
						color: white;
				}
		}

		input[type=checkbox] {
				appearance: checkbox;
		}
}


.topBuffer {
		margin-top: 20px;
}

.bottomBuffer {
		margin-bottom: 20px;
}

.anchorButton, button.clickButton {
		cursor: pointer;
		display: inline-block;
		padding: 0.5em;
		border: 1px solid black;
		border-radius: 0.5em;

		&:active {
				background-color: #eee;
		}
}

// Basics for our inline svg
svg, img.svgImage {
		vertical-align: middle;
		
		&.svg-icon {
				stroke: currentcolor;
				fill: currentcolor;
				width: 2rem; // meaningful default
		}

		&.sign {
				stroke-width: 0px;
				fill: @l-color-blue-ll;
		}

		// Same styles for colors inside svg icon and bigger signs
		&.sign, &.svg-icon {
				
				.transparent {
						fill: none;
				}
				.blank {
						stroke-width: 0px;
						fill: #fff;
				}
				.white {
						fill: #fff;
				}
				// .filled {
				// 		stroke-width: 0px;
				// 		fill: @l-color-blue-ll;
				// }
				.dark {
						stroke-width: 0px;
						fill: @l-color-blue-l;
				}
				.light {
						stroke-width: 0px;
						fill: @l-color-blue-llll;
				}

				// .stroked {
				// 		stroke: @l-color-blue-l;
				// 		stroke-linecap: round;
				// 		stroke-linejoin: round;
				// 		stroke-width: 2.5px;
				// }

				
				// @media (hover: hover) {
				// 		&:hover {
				// 				.activeButton();
				// 		}
				// }
		}
}

span.pillarDocument {


		div.pillarParagraph {

				+ div.pillarParagraph {
						margin-top: 1em;
				}

				&.border {
						padding: 0.5em;
						margin: 0.5em;
						border: 1px solid black;
				}
				
				.noWrap {
						white-space: nowrap;
				}

				// Custom styles, used with pillar syntax ((style blablabl))
				.red {
						color: red;
				}

				.green {
						color: green;
				}

				
				// Custom paragraph styles, used with pillar syntax @@style blablabl
				&.red {
						.red();
				}

				&.green {
						.green();
				}
				
		}
}


span.betatestArea {
		display: block;
		margin: 1em 0;
		border: 1px dotted black;
		font-size: 66%;

		a {
				color: inherit;
		}
}

.clickAction {
		cursor: pointer;
}

span.klaroLogo {
		img {
				width: 100%;
		}
}


// =======================================================================
// UI components
// =======================================================================

div.VIAMainComponent {
//		min-height: 99vh;
		position: relative;
		box-sizing: border-box;		
}

div.backButton {
		padding: 0.5em;
		img.menu_zurueck {
				width: 1.3em;
				margin-right: 1em;
		}
}

div.VIADeviceDetectorComponent {
		background-color: @l-color-main;
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;

		.spinner {
				color: black;
				font-size: 3rem;
		}
		
		a.spinnerMessage {
				color: #666;
				font-size: 80%;
		}
}


div.inputDialog {
		input[type=text], textarea {
				width: 100%;
				font-size: 120%;
				margin: 1em 0;
		}
}

div.VIAConfirmationComponent {
		button {
				min-width: 5em;
				margin-right: 1em;
		}
}

div.VIAPublicHomeComponent {

		padding: 1em 0;
		font-size: 120%;
		line-height: 150%;

		div.klaroLogo {
				margin: 0 auto;
				display: flex;
				justify-content: center;
		}
		
		div.klaroBanner {
				display: flex;
				justify-content: center;
		}
		
		div.info {
				margin: 1em 0;
				padding: 0 1em;
		}

		div.loginSection {
				div.error {
						background-color: maroon;
						color: white;
						padding: 2em;
				}
				margin: 1em 0;
				padding: 0 1em;
		}

		form.codeInput {
				margin: 1em 0;
				
				input[type=text] {
						border: 1px solid black;						
						width: 100%;
						padding: 0.2em;
						margin: 1em 0;
				}
		}

}


div.VIAKlaModuleExerciser {


		margin: 0 @pageSidePad;

		div.titlePanel {
				@circleWidth: 2em;
				@sidePad: @pageSidePad;
				@borderRadius: @sidePad + @circleWidth/2;
				@height: 2 * @borderRadius;

				// margin-top: 1em;
				padding: @sidePad;
				height: @height;
				background-color: @l-color-blue-llll;
				border-radius: @borderRadius;

				display: flex;
				align-items: center;
				justify-content: space-between;
				overflow: visible;

				// img.svgImage {
				// 		width: 3em;
				// }

				div.moduleStatusIndicator {
						svg.stationNumber {
								width: @circleWidth;
						}
						
						span.moduleScore {
								@space: 0.2em;
								margin-left: @space;
								// img.svgImage {
								// 		width: @circleWidth*2/3;
								// 		margin: 0 @space;
								// }

								svg.iconProgress {
										width: @circleWidth*2/3;
										margin: 0 @space;

										path.top, path.bottom {
												fill: white;
												stroke: @l-color-blue-l;
												// stroke-miterlimit: 10;
												stroke-width: 1px;
										}

										&.active {
												path.top {
														stroke: @l-color-blue;
														stroke-width: 1.61px;
												}
										}

										&.progress50 {
												path.top {
														stroke: @l-color-blue;
														fill: @l-color-blue;
														stroke-width: 1.61px;
												}
												&.active {
														path.bottom {
																stroke: @l-color-blue;
																stroke-width: 1.61px;
														}
												}
										}

										&.progress100 {
												path.top, path.bottom {
														stroke: @l-color-blue;
														fill: @l-color-blue;
														stroke-width: 1.61px;
												}
										}
										
								}
						}
				}

				div.exerciserStatusIndicator {
						overflow: visible;
						position: relative;
						margin-right: 0.5em;

						@iconSize: 1.7em;
						
						span.modeIndicator {
								display: inline-block;
								min-width: 1.5 * @iconSize;
								text-align: center;
								img.svgImage {
										height: @iconSize;
								}
						}

						span.modeControls {
								display: inline-block;
								position: absolute;
								right: 0;
								top: 2em;
								width: 4 * @iconSize;
								z-index: 999; // must overlap on top of next flex item
								text-align: right;
								img.svgImage {
										height: 1.5 * @iconSize; // Etwas grösser weil ein Kreis darum ist
										margin-left: 0.6em;
								}

						}
				}
		}

		div.moduleBody {
				margin: 0;
				padding-bottom: 1em;
		}


		div.VIAKlaTaskExerciser {
				padding-left: 0.2em;
				padding-right: 0.2em;
				margin-bottom: 4em;

				div.VIAKlaSpeedReaderExerciser {

						// "Gameboard"
						div.speedReader {
								div.automaticStarter {
										position: absolute;
										top: 0;
										left: 0;
										right: 0;
										bottom: 0;
										z-index: 99;
										background-color: white;
										text-align: center;
										font-size: 200%;
										padding-top: 4em;
								}

								div.mainPlayArea {
										position: relative;
										display: flex;
										flex-direction: column;
										height: 100%; //???
										justify-content: space-between;
										align-items: stretch;
//										align-items: center;
//										gap: 0.5em;
										
										div.speedTextArea {
												// height: 50vh;
												// min-height: 30vh;
												flex-basis: 50%;
												display: flex;
												justify-content: center;
												align-items: center;
												overflow: hidden;

												div.speedTextAreaContent {
														display: flex;
														justify-content: center;
														align-items: center;
														overflow: hidden;
														
														div.speedText {
																font-family: DCH;
																color: @l-color-blue;
																font-size: 6rem;
																text-align: center;

																&.long {
																		font-size: 4rem;
																}
														}

														svg.sign.sound, svg.sign.ellipsis {
																width: 6em;
														}
												}

										}

										
										div.navigationArea {
												display: flex;
												justify-content: center;
												align-items: flex-start;

												> span {
														flex-shrink: 0;
												}
												> span:first-child {
														// Heads-Asymmetrie zentrieren
														margin-left: 40px;
												}

												span.mainButton {
														//@size: 110px;
														//@size: 15vmin;
														//@size: 4cm;
														@width: 7rem;
														@height: @width * 0.7;
														display: inline-block;
														width: @width;
														height: @height;
														position: relative;
														// geht nicht wegen rechtem icon verschiedene breite text-align: center;
														//margin: @size * 0.2;

														
														img.svgImage {
																position: relative;
														}

														@topGapForHead: @height * 0.24;
														
														&.read {

																img.svgImage {
																		height: 95%;
																		top: @topGapForHead;
																}
														}

														&.speak {
																img.svgImage {
																		height: 100%;
																}
														}

														&.listen {
																img.svgImage {
																		height: 75%;
																		top: @topGapForHead;
																}
														}

														&.active {
																.activeButton();
														}

												}
										}

										div.subNavigationArea {
												display: flex;
												justify-content: center;
												align-items: center;

												span.nextButton, span.playPauseButton {
														display: inline-block;
														width: 9em;

														img.svgImage {
																width: 100%;
														}
												}

												// span.playPauseButton {
												// }

												span.redoButton, span.doneButton {
														display: inline-block;
														width: 4em;
														margin: 0.1em;

														img.svgImage {
																width: 100%;
														}
												}
										}


										.activeButton() {

												.activeDark {
														fill: @l-color-blue-l;
												}
												.activeLight {
														fill: @l-color-blue-llll;
												}
												.activeWhite {
														fill: white;
												}

										}
										

										div.speedChooser {

												display: flex;
												justify-content: space-between;
												align-items: center;
												margin: 1em 0;

												div.line {
														background-color: @l-color-blue-llll;
														height: 0.5em;
														flex-grow: 2;
												}

												
												div.speed {
														white-space: nowrap;
														cursor: pointer;

														svg.radioButton {
																width: 20px;
														}
														
												}
										}

										svg.sign {
												&.active, &:active {
														.activeButton();
												}

												&.sound, &.ellipsis {
														fill: currentcolor;
												}
										}
										
										div.progressbar {
												@height: 0.5em;
												@radius: @height/2;
												
												width: 100%;
												height: @height;
												border-radius: @radius;
												background-color: @l-color-blue-llll;
												margin: 1em 0;

												div.filledBar {
														height: @height;
														border-radius: @radius;
														background-color: @l-color-blue-l;
												}
										}

								}
								// &.read { div.navigationArea span.mainButton.read { .activeButton() }}
								// &.speak { div.navigationArea span.mainButton.speak { .activeButton() }}
								// &.listen { div.navigationArea svg.sign.listen { .activeButton() }}

								// Automatic timer is playing
								&.playing {
										div.subNavigationArea {
												span.playPauseButton {
														.play {
																display: none;
														}
														.pause {
																display: unset;
														}
												}
										}
								}
								// Automatic timer is pausing
								&.pausing {
										div.subNavigationArea {
												span.playPauseButton {
														.play {
																display: unset;
														}
														.pause {
																display: none;
														}
												}
										}
								}
								// Is on step listen
								&.listen {
										div.navigationArea {
												div.listenButtons {
														span.mainButton.listen.replay {
																display: none;
														}
												}
										}

										div.subNavigationArea {
												div.redoDoneButtons {
														visibility: hidden;
												}
										}

										
										&.hasPlayedSpeech {
												div.navigationArea {
														div.listenButtons {
																span.mainButton.listen.normalPlay {
																		display: none;
																}
																span.mainButton.listen.replay {
																		display: inline-block;
																		cursor: pointer;
																}
														}
												}
												div.subNavigationArea {
														div.redoDoneButtons {
																visibility: visible;
														}
												}
										}
								}

								&.read {
										// Zauberspruch
										div.speedTextArea.magic-spell {
												div.speedTextAreaContent {
														background-color: @l-color-blue-lllll;
														border-radius: 50%;
														overflow: visible;

														div.speedText {
																padding: 0.5em;
																font-size: 3rem;
														}
												}
										}

								}
						}
				}
		}
}



// Not inside the VIAKlaModuleExerciser, because it could be stand alone (e.g. in the backend testdrive)
// Styles inside the content of tasks
div.exercise {
		
		@dropTargetHoverColor: yellow;
		
		// General wrapping styles for backend usage
		// Not in use so far
		// .spaced {
		// 		letter-spacing: 0.1em;
		// 		line-height: 1.6em;
		// }
		// .framed {
		// 		padding: 10px;
		// 		margin: 15px 0;
		// 		border: 1px solid #aaa;
		// }
		// .smaller {
		// 		font-size: 88%;
		// }
		// .indented {
		// 		margin-left: 10%;
		// 		margin-right: 10%;
		// }

		table {
				border-collapse: collapse;

				tr {
						border-bottom: 1px solid #999;								
				}

				td, th {
						padding-top: 5px;
						padding-bottom: 5px;
						padding-right: 2px;
				}

				td + td, th + th {
						border-left: 1px solid #999;
						padding-left: 2px;
				}
		}

		
		input[type=text] {
				font-family: inherit;
				font-size: inherit;
				padding: 0 2px;
				margin: -2px 0;
		}

		p {
				margin-top: 3px;
				margin-bottom: 3px;
		}

		hr.divider {
				border-color: #999;
				margin: 2em 0;
		}		
} // div.exercise


div.VIAKlaMyProfileComponent {

		padding-top: 1em;

		h1 {
				color: @l-color-main;
		}
		
		h1, h2, h3, h4 {
				text-align: left;
		}
		
}

// div.lightboxModal {
// 		div.invitationCode {
// 				font-size: 300%;
// 				text-align: center;
// 				font-family: monospace;
// 		}
// }


div.VIAInformationComponent {
		div.message {
				margin-bottom: 1em;
		}
}

div.VIAStaticTextDisplayerComponent {
		padding: 1em;
}

// div.VIACaptchaComponent {
// 		pre.captcha {
// 				line-height: 1.1em;
// 		}
// 		input.captcha {
// 				font-size: 200%;
// 				font-family: monospace;
// 				border: 2px solid green;
// 				padding: 0.2em;
// 				margin: 0.2em 0 0.2em 0;
// 				max-width: 100%;
// 				box-sizing: border-box;
// 		}
// }


// ===========================================
// Demo
// ===========================================

// @demoColor: #fffd37;

// span.uk-label.demoLabel {
// 		background-color: @demoColor;
// 		color: #000000;
// 		border: 1px solid #ccc;
// 		transform: rotate(-10deg);
// 		font-size: 0.7rem;
// 		font-weight: normal;
// 		padding-left: 0.3em;
// 		padding-right: 0.3em;
// 		position: relative;
// 		left: -0.5em;
// }

// // div.VIADemoUnitComponent {
// // 		span.uk-label.demoLabel {
// // 				margin-left: 0.2em;
// // 		}
// // }

// div.demoRibbon {
// 		@dim: 20em;
		
// 		position: fixed;
// 		width: @dim;
// 		height: @dim;
// 		bottom: -(@dim/1.8);
// 		right: -(@dim/1.9);
// 		padding-top: 1em;
// 		transform-origin: center;
// 		transform: rotate(-45deg);
// 		z-index: 999999; 

// 		div.ribbonText {
// 				width: 100%;
// 				text-align: center;
// 				border-top: 1px solid black;
// 				padding: 0.3em 1em 10em 1em;
// 				background: @demoColor;
// 				color: black;
// 		}
// }

// Cookiebar redefinitions
// #cookie-bar-button {
// 		background-color:  !important;
// }

// ============================================
// Misc
// ============================================



div.moduleBody {
		clear: both;
		position: relative; // Wichtig, damit eingebettete versteckte absolute-Elemente die Breite korrekt berechnen können
}

.testdriveTools {
		font-size: 80%;
		color: #999;

		a {
				color: #666;
		}
}


// ==============================================
// Klaro App Hauptkomponenten
// ==============================================

@pageSidePad: 1em;


div.VIAKlaPagerComponent {


		div.VIAKlaPageComponent {

				
				display: contents;

				div.klaroPage {
						padding: 0;

						
					//	display: none; // default hidden and parked away
						position: relative; // ?

						// Always Fill the whole screen with the page
						min-height: 100vh;  // Fallback to where svh is not supported
						min-height: 100svh; // smallest view height, for mobile browsers, which dynamically optimise screen height

						scroll-behavior: smooth;
						overflow-x: hidden;
						overscroll-behavior-y: contain;

//						height: 100vh;
//						overflow-y: auto;

						&.noScroll {
								height: 100vh;
								height: 100svh;
//								scroll-behavior: smooth;
								overflow-y: hidden;
								overflow-x: hidden;

								display: flex;
								flex-direction: column;
								justify-content: space-between;
								gap: 0.5em;

								div.VIAKlaModuleExerciser,
								div.moduleBody,
								div.VIAKlaTaskExerciser,
								div.exercise,
								div.taskGroup,
								div.taskGroupItem,
								div.VIAKlaSpeedReaderExerciser {
										display: contents;
								}

								div.speedReader {
										flex-grow: 2;
								}
								
						}

						// A page is ready, when it has been setup and sits in the background now, ready for display later
						// We explicitely set this class via JavaScript, so that the setup phase has a full displayed page.
						// A hidden page would fail with dimension calculation stuff, since it has dimension 0.
						&.ready {
								display: none;
						}
						
						&.current {

								&.withScroll {
										display: block;
								}
								&.noScroll {
										display: flex;
								}

								&.appear {
										.pageAppear();
								}
								&.appearBack {
										.pageAppearBack();
								}
						}

						// &.transientVisibleForLoading {
						// 		display: block;
						// 		visibility: hidden;
						// }


						.topbar {

								// div.menubarCenter {
								// 		.uk-navbar-center();
								// }

								background-color: white;
								display: flex;
								justify-content: space-between;
								padding: 0.5em @pageSidePad;

								div.topbarLeft {
										display: flex;
										align-items: center;
										font-size: 0.8rem;
										img.svgImage.menu_zurueck {
												width: 1.5em;
												margin-right: 0.5em;
										}
								}
								div.topbarCenter {
										display: flex;
										align-items: center;
										
										// &.activeHome {
										// 		border-color: @a-color-main;
										// 		a svg {
										// 				stroke: @a-color-main;
										// 				fill: @a-color-main;
										// 		}
										// }

								}
								div.topbarRight {
										display: flex;
										align-items: center;
										img.svgImage.menu {
												width: 2em;
										}
								}

						}

						div.offcanvasMenu {
								@iconWidth: 1.5rem;

								position: fixed;
								top: 0;
								left: 0;
								right: 0;
								bottom: 0;
								z-index: 999999;
								background-color: @l-color-green;
								padding: 5em 1em 1em 1em;

								// Not small phones
								@media (min-width: @breakpoint-small) {
								// Only large screens
								//@media (min-width: @breakpoint-large) {
										left: 66vw;
								}

								
								.slide-inout();
								
								// &.in {
								// 		display: block;
								// 		.slide-in-right();
								// }
								// &.out {
								// 		display: block;
								// 		.slide-out-right();
								// }



								span.offcanvasClose {
										position: absolute;
										top: 5px;
										right: 5px;
										span.svg-icon {
												display: inline-block;
												width: 2rem;
										}
								}

								div.pageMenuContainer {
										// position: absolute;
										// bottom: 0;
										// top: 0;
										height: 100%;
										display: flex;
										flex-direction: column;
										justify-content: space-between unsafe;
										align-items: stretch;
										overflow-y: auto;


										div.pageMenuItems {
												flex-grow: 1;
												flex-shrink: 1;

												ul {
														padding-left: 0;

														li {
																font-size: 1.1rem;
																font-weight: bold;
																margin: 1em 0;

																ul.subMenu {
																		padding-left: @iconWidth;
																		li {
																				font-size: 1.1rem;
																				font-weight: normal;
																		}
																}

																a {
																		//												color: white;
																		white-space: nowrap;

																		span.svg-icon {
																				//																text-align: center;
																				display: inline-block;
																				width: @iconWidth;
																				//height: 1rem;
																		}

																		span.menuEntryText {
//																				.uk-text-truncate();
																		}
																}

																// &.logout {
																// 		padding-top: 1em;
																// }

																span.menuDivider {
																		display: block;
																		height: 0.5em;
																}

																&.small {
																		font-size: 0.9rem;
																}

														}
												}

										}
										
										div.pageMenuFooter {
												// position: absolute;
												// bottom: 0;
												padding-top: 2em;
												flex-grow: 0;
												flex-shrink: 0;

												img.hepLogo {
														height: 5vh;
														//										width: @offcanvas-bar-width
												}
										}

								}
								
						}
		
						div.footer {
								position: absolute;
								width: 100%;
								bottom: 0;
								padding: 1em;
								text-align: center;
						}
				}

				div.infoPanel {
						position: fixed;
						display: flow-root;
						top: 0;
						bottom: 0;
						left: 0;
						right: 0;
						background-color: @l-color-lightgreen;
						padding: @pageSidePad;
						z-index: 1;
						
						div.infoPanelContent {
								background-color: white;
								padding: 1em;
								border-radius: 0.5em;

								div.teacherNotes {
										margin: 1em 0;
								}
						}
				}

				&.VIAKlaNavigatorPage div.klaroPage {

						.preventStupidTouchStuff();
														 
						.topbar {
								div.topbarLeft {
										span.klaroLogo {
												display: inline-block;
												width: 60px;
										}
								}
						}

						svg.navigatorStage {
								width: 100%;
								// Does not work, disables scrolling on iPhone?
								height: auto;
								
								g[id^="Station_"] {

										@highlighted: #e72f72ff;
										
										&.enabled {
												cursor: pointer;

												&.isNewExercise {
														.pulseAnimation();
												}
												
												g[id^="Kreis_gross"] {
														path {
																fill: @highlighted;
														}
												}

												g.taskScore {
														&.done {
																path {
																		fill: @highlighted;
																}
														}
												}

										}
								}


								g#Hexenhaus {
										> g {
												visibility: hidden;
//												opacity: 0.1;
										}

										g#Haus_00 {
//												opacity: 1;
												visibility: visible;
										}
										
										> g.moduleFinished {
//												opacity: 1;
												visibility: visible;												
										}
								}


								
								@keyframes witchflying {
										0% {
												translate: 1px 3px;
										}
										20% {
												translate: 1px -1px;
										}
										50% {
												translate: -3px 2px;
										}
										80% {
												translate: -1px -2px;
										}
										100% {
												translate: 1px 3px;
										}
								}				
								
								g#Hexe_Klara {
										animation-name: witchflying;
										animation-duration: 8s;
										animation-direction: normal;
										animation-iteration-count: infinite;
										animation-timing-function: ease-in-out;
										
								}

						}
				}


				
				&.VIAKlaExercisePage div.klaroPage {

						.preventStupidTouchStuff();

						padding: 0 @pageSidePad;
						
						// Not small phones
						@media (min-width: @breakpoint-medium) {
								padding: 0 10%;
						}
						
						.topbar {
								margin-top: 1em;
						}

								
						div.lottieAnimation {
								// width: 100vw;
								// height: 100vh;
								flex-grow: 2;

								&.manualToAutomatic, &.startManual, &.finish {
										// width: 100%;
										margin-left: -@pageSidePad;
										margin-right: -@pageSidePad;
										// box-sizing: border-box;
//										height: 80vh;
										background-color: @l-color-mediumgreen;
								}
						}

						
				}

				&.VIAKlaStationPage div.klaroPage {
						background-color: @l-color-lightgreen;

						div.moduleTitle {
								display: flex;
								justify-content: center;
								margin: 1em 0;

								svg.stationNumber {
										width: 3em;
								}
						}

						div.exercisePanels {
								padding-left: @pageSidePad;
								padding-right: @pageSidePad;
								
								div.exercisePanel {
										background-color: white;
										padding: 1em;
										border-radius: 0.5em;
										margin: 1em 0;
										position: relative;
										// display: flex;
										// justify-content: space-between;
										// align-items: flex-start;

										&.disabled {
												div.rowOne, div.rowTwo {
														opacity: 0.5;
												}
										}
										
										div.rowOne {
												display: flex;
												justify-content: space-between;
												align-items: center;
										
												div.exerciseTitle {
														font-size: 2.3rem;
														// display: flex;
														// justify-content: space-between;
												}

												span.infoButton {
														display: inline-block;
														background-color: white;
														border: 1px solid @l-color-blue;
														padding: 5px 15px;
														margin-top: 10px;
												}

												// span.progress {
												// 		position: absolute;
												// 		top: 10px;
												// 		right: 10px;
												// }

												span.actionSymbol {
														// position: absolute;
														// right: 10px;
														// top: 10px;
														//												top: 45%;

														&.nextTask {
																display: inline-block;
//																margin-top: 0.5em;
																.pulseAnimation();
														}

														img.svgImage {
																margin-left: 0.5em;
																width: 3em;
														}
												}
										}
										
										div.rowTwo {
												// display: flex;
												// justify-content: space-between;
												// align-items: flex-start;

										}
								}								
						}
				}

				&.VIAKlaTransientAnimationPage div.klaroPage {

						.preventStupidTouchStuff();

						dotlottie-player.transientAnimation {
								width: 100vw;
								height: 100vh;
						}
				}

				span.pagerAnchor {
						cursor: pointer;
				}
				
		}
		
}

div.VIAKlaIntroductionComponent {
		@videoBackground: #F7F7EB; // nicht ganz @l-color-lightgreen
		
		background-color: @videoBackground;
		min-height: 100dvh;
//		padding-top: 1em;
		box-sizing: border-box;

		div.videoContainer {
				width: 100vw;
				max-width: 720px;
				position: relative;
				margin: 0 auto;

				// retina
				@media only screen and (min-resolution: 2dppx) {
						max-width: 360px;
				}

				
				video {
						background-color: @l-color-lightgreen;
						display: block;
						width: 100%;
						height: auto;
				}

				div.videoControlOverlay {
						// visibility: hidden;
						position: absolute;
						top: 0;
//						bottom: 0;
						right: 0;
						left: 0;
						z-index: 1;
						padding: 2em 0.5em;
//						background: rgba(50%,50%,50%,0.3);
//						background-color: fade(@l-color-lightgreen, 70%);

						.anchorButton, button.clickButton {
								display: block;
								background-color: white;
								width: 100%;
								margin: 1em 0;
								font-size: 1.5rem;
						}
						button.continueButton {
								visibility: hidden;
						}

						span.klaroLogo {
								display: block;
								margin-bottom: 1em;
								filter: drop-shadow(0px 0px 5px black);
						}
				}
	
				&.playing {
						div.videoControlOverlay {
								display: none;
						}
				}

				&.pausing {
						div.videoControlOverlay {
								button.continueButton {
										visibility: visible;
								}
						}

						video {
								filter: opacity(50%);
						}
				}
				&.ended {
						div.videoControlOverlay {
								button.playButton {
										background-color: transparent;
								}
								button.continueButton {
										visibility: hidden;
								}
						}
				}
		}

		
		
}


svg.stationNumber {
		.circle {
				fill: #fff;
				stroke: @l-color-blue;
//				stroke-miterlimit: 10;
				stroke-width: 2.5px;
		}
		.text {
				fill: @l-color-blue;
//				font-family: UnitRoundedPro-Medium, ''Unit Rounded Pro'';
				font-size: 16.96px;
//				font-weight: 500;
		}
}

div.VIAKlaMyProfileComponent {
		padding: 1em;
}



div.developmentTools {
		margin-bottom: 10em;
}

// =======================================================================
// UI Breakpoints (leave at end of file, for CSS precedence)
// =======================================================================

@import "styles_klaro_responsive.less";


// Keep this for Emacs editor!
//
// Local Variables:
// less-css-compile-at-save: t
// End:
