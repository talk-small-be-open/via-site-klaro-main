//
// Styles for hep Klaro
//
// Namespace: "l-" = short for local App

// =======================================================================
// Fonts
// =======================================================================


@font-face {
		font-family: 'DCH';
		font-weight: 700;
		font-style: normal;
		src: url('fonts/DCH-Basisschrift.woff2') format('woff2'),
				 url('fonts/DCH-Basisschrift.otf') format('otf')
//				 url('fonts/dchbasisschrift.woff') format('woff');
}


@font-face {
    font-family: 'FF Unit Rounded Pro Regular';
    font-style: normal;
    font-weight: normal;
    src: local('FF Unit Rounded Pro Regular'), url('fonts/FF Unit Rounded Pro Regular.woff') format('woff');
}


// @font-face {
//     font-family: 'FF Unit Rounded Pro Light';
//     font-style: normal;
//     font-weight: normal;
//     src: local('FF Unit Rounded Pro Light'), url('fonts/FF Unit Rounded Pro Light.woff') format('woff');
// }


// @font-face {
//     font-family: 'FF Unit Rounded Pro Medium';
//     font-style: normal;
//     font-weight: normal;
//     src: local('FF Unit Rounded Pro Medium'), url('fonts/FF Unit Rounded Pro Medium.woff') format('woff');
// }


// @font-face {
//     font-family: 'FF Unit Rounded Pro Bold';
//     font-style: normal;
//     font-weight: normal;
//     src: local('FF Unit Rounded Pro Bold'), url('fonts/FF Unit Rounded Pro Bold.woff') format('woff');
// }

// @font-face {
//     font-family: 'FF Unit Rounded Pro Black';
//     font-style: normal;
//     font-weight: normal;
//     src: local('FF Unit Rounded Pro Black'), url('fonts/FF Unit Rounded Pro Black.woff') format('woff');
// }


// @font-face {
//     font-family: 'FF Unit Rounded Pro Ultra';
//     font-style: normal;
//     font-weight: normal;
//     src: local('FF Unit Rounded Pro Ultra'), url('fonts/FF Unit Rounded Pro Ultra.woff') format('woff');
// }




// =======================================================================
// Importing
// =======================================================================

// Full CSS reset
@import "reset.css";

// Import main styles
// DONT, since we have a very specialized UI, not depending on uikit etc.
// @import "../../base/web_root/css/styles.less";
@import "../../base/web_root/css/development.less";

// Our SITE own uikit theme (overrides to the via base uikit theme)
// @import "uikit_theme/_import.less";

@import "testdrive.less";

// =======================================================================
// Variables
// =======================================================================


// prefix @l = "local"

@l-color-lightgreen: #F6F7E5;
@l-color-green: #B7C18D;
@l-color-mediumgreen: #F4F6E7; // #E5EED8;



@l-color-blue-d: #40627A;
@l-color-blue: #5883A5;
@l-color-blue-l: #89B3C3;
@l-color-blue-ll: #ADCCD8;
@l-color-blue-lll: #D6E5EB;
@l-color-blue-llll: #EAF2F5;
@l-color-blue-lllll: #FAFCFC;

@l-color-blue-gray: #70899B;

@l-header-background: white;

@l-color-background: #EAE7E3;
@l-color-text: @l-color-blue; //  #575754;
@l-color-main: @l-color-blue;

@l-color-pink: #F2B2B4;

// Redefine basics for this via sub-website
@via-basic-color: @l-color-text;
@via-basic-background-color: @l-color-background;

@pageSidePad: 1em;


// Breakpoints
// ========================================================================

// Phone Portrait:   Galaxy (360x640), iPhone 6 (375x667), iPhone 6+ (414x736)
// Phone Landscape:  Galaxy (640x360), iPhone 6 (667x375), iPhone 6+ (736x414)
// Tablet Portrait:  iPad (768x1024), Galaxy Tab (800x1280),
// Tablet Landscape: iPad (1024x768), iPad Pro (1024x1366),
// Desktop:          Galaxy Tab (1280x800), iPad Pro (1366x1024)

@breakpoint-small:                             640px;  // Phone landscape
@breakpoint-medium:                            960px;  // Tablet Landscape
@breakpoint-large:                             1200px; // Desktop
@breakpoint-xlarge:                            1600px; // Large Screens

@breakpoint-xsmall-max:                        (@breakpoint-small - 1);
@breakpoint-small-max:                         (@breakpoint-medium - 1);
@breakpoint-medium-max:                        (@breakpoint-large - 1);
@breakpoint-large-max:                         (@breakpoint-xlarge - 1);




// =======================================================================
// Mixins
// =======================================================================

@import "styles_klaro_mixins.less";


// =======================================================================
// General Styles
// =======================================================================

// html {

// }

:root {
		--pageSidePad: @pageSidePad;
}

body {
		font-family: 'FF Unit Rounded Pro Regular';
		font-size: 15px;
		color: @l-color-text;

		.preventStupidTouchStuff();
										 
		// div.footer {
		// }

		// Styles for the non-logged in public UI
		// &.public {
		// }
}



a {
		// Dadurch sind Links von Text nicht unterscheidbar nach Farbe. Wir arbeiten aber mit Symbolen.
		color: @l-color-text;
		cursor: pointer;
		
		.active() {
				color: @l-color-blue-d;
				text-decoration: none;
		}
		
		@media (hover: hover) {
				&:hover {
						.active();
				}
		}

		&:active {
				.active();
		}
		
}

h1 {
		font-size: 2rem;
}
h2 {
		font-size: 1.5rem;
}
h3 {
		font-size: 1.2rem;
}

h1, h2, h3 {
		&:not(:first-child) {
				margin-top: 0.7em;
		}

		font-weight: bold;
		margin-bottom: 0.5em;
}

strong {
		font-weight: bold;
}

em {
		font-style: italic;
}

u {
		text-decoration: underline;
}


form {
		label {
				display: block;
				margin: 0.5em 0;
		}

		button[type=submit] {
				.blueButton();
				padding: 10px;
		}

		input[type=checkbox] {
				appearance: checkbox;
		}

		input[type=text] {
				border: 1px solid black;						
				padding: 0.2em;
		}

}


.topBuffer {
		margin-top: 20px;
}

.bottomBuffer {
		margin-bottom: 20px;
}

.centerContainer {
		margin: 5%;
}

.error {
		color: maroon;
}

.anchorButton, button.clickButton, button.submitButton, span.standardButton, span.spanButton {
		cursor: pointer;
		display: inline-block;
		padding: 0.5em;
		border: 1px solid black;
		border-radius: 0.5em;
		margin-top: 2px;
		margin-bottom: 2px;

		&:active, &:hover {
				background-color: #eee;
		}

		&+& {
				margin-left: 0.5em;
		}

		a {
				color: inherit;
		}
}

.blueButton() {
		border-color: @l-color-blue;
		background-color: @l-color-blue;
		color: white;

		&:hover {
				border-color: @l-color-blue-l;
				background-color: @l-color-blue-l;
		}
		
}


// Basics for our inline svg
svg, img.svgImage {
		vertical-align: middle;
		
		&.svgIcon {
				stroke-width: 0px;
//				stroke: currentcolor;
				fill: currentcolor;
				width: 1.5rem; // meaningful default
		}

		&.sign {
				stroke-width: 0px;
				fill: @l-color-blue-ll;
		}

		// Same styles for colors inside svg icon and bigger signs
		&.sign, &.svgIcon {
				
				.transparent {
						fill: none;
				}
				.blank {
						stroke-width: 0px;
						fill: #fff;
				}
				.white {
						fill: #fff;
				}
				// .filled {
				// 		stroke-width: 0px;
				// 		fill: @l-color-blue-ll;
				// }
				.dark {
						stroke-width: 0px;
						fill: @l-color-blue-l;
				}
				.light {
						stroke-width: 0px;
						fill: @l-color-blue-llll;
				}

				// .stroked {
				// 		stroke: @l-color-blue-l;
				// 		stroke-linecap: round;
				// 		stroke-linejoin: round;
				// 		stroke-width: 2.5px;
				// }

				
				// @media (hover: hover) {
				// 		&:hover {
				// 				.activeButton();
				// 		}
				// }
		}
}

span.pillarDocument {


		div.pillarParagraph {

				+ div.pillarParagraph {
						margin-top: 1em;
				}

				&.border {
						padding: 0.5em;
						margin: 0.5em;
						border: 1px solid black;
				}
				
				.noWrap {
						white-space: nowrap;
				}

				// Custom styles, used with pillar syntax ((style blablabl))
				.red {
						color: red;
				}

				.green {
						color: green;
				}

				
				// Custom paragraph styles, used with pillar syntax @@style blablabl
				&.red {
						.red();
				}

				&.green {
						.green();
				}
				
		}
}


span.betatestArea {
		display: block;
		margin: 2px 0;
		border: 1px dotted black;
		font-size: 66%;

		a {
				color: inherit;
		}
}

.clickAction {
		cursor: pointer;
}

span.klaroLogo {
		img {
				width: 100%;
		}
}


// =======================================================================
// UI components
// =======================================================================

div.VIAMainComponent {
//		min-height: 99vh;
		position: relative;
		box-sizing: border-box;

}

#audioUnlocker {
		position: fixed;
		width: 100vw;
		bottom: 0;
		background-color: black;
		color: white;
		z-index: 1;
		min-height: 15vh;
		text-align: center;
		padding: 1em;

		svg.sign.sound {
				width: 2em;
				margin-bottom: 0.5em;
		}

		// span.standardButton {
		// 		font-size: 2rem;
		// 		border-color: white;
		// }
}

div.backButton {
		padding: 0.5em;
		img.menu_zurueck {
				width: 1.3em;
				margin-right: 1em;
		}
}

div.VIADeviceDetectorComponent {
		background-color: @l-color-blue-l;
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		padding: 15% 2em;

		.spinner {
				color: black;
				font-size: 3rem;
		}
		
		a.spinnerMessage {
				color: black;
				font-size: 80%;
		}
}


div.inputDialog {
		input[type=text], textarea {
				width: 100%;
				font-size: 120%;
				margin: 1em 0;
		}
}

div.VIAConfirmationComponent {
		button {
				min-width: 5em;
				margin-right: 1em;
		}
}

div.narrowContainer {
		@sidePad: 2em;
		padding: @sidePad;		
}

div.VIAPublicHomeComponent {
		
		@sidePad: 2em;
		@buffer: 1em;
		
//		padding: @sidePad 0;
		font-size: 120%;
		line-height: 150%;
//		position: relative;

		div.narrowContainer {
				position: relative;
		}
		
		div.logos {
//				margin: 0 @sidePad;
				display: flex;
				justify-content: space-between;
				align-items: start;

				span.klaroLogo {
						display: inline-block;
						width: 10rem;
				}
				svg.hepLogo {
						margin-top: 1em;
						width: 7rem;
						fill: @l-color-blue-l;
				}

		}


		div.infoPanel.installPwa {
				div.close {
						float: right;
				}
				
				div.info {
						margin: 1em 0;
				}
		}
		
		div.klaroBanner {
				display: flex;
				justify-content: center;

				img.svgImage.klara_winkend {
						max-height: 30vh;
				}
		}
		
		div.info {
				margin: @buffer 0;
				// padding: 0 @sidePad;
		}

		div.loginSection {
				margin-bottom: @buffer;
//				padding: 0 @sidePad;

				div.error {
						background-color: maroon;
						color: white;
						padding: 1em;
				}

				div.codeInput {
						margin: @buffer 0;
						display: flex;
						justify-content: space-between;
						align-items: center;
						gap: 5px;
						
						input[type=text] {
								border: 1px solid black;						
								min-width: 2em;
								padding: 0.2em;

								&::placeholder {
										color: #999;
								}

								&:focus {
										&::placeholder {
												color: transparent;
										}
								}

								&.part1, &.part3 {
										flex-basis: 30%;
										flex-grow: 2;
								}

								&.part2 {
										flex-basis: 10%;
								}
						}
				}
		}


		button.submitCoupon {
				width: 100%;
		}

		div.autologinUsers {
				display: flex;
				flex-wrap: wrap;
				justify-content: flex-start;
				gap: 1rem;

				span.autologinUser {
						.blueButton();
						padding: 0.2em 1em 0.2em 0.5em;
						position: relative;
						//						flex-basis: 30%;

						a.remove {
								@w: 0.8rem;
								
								position: absolute;
								top: -0.4rem;
								right: -0.8rem;
								//								margin-left: 0.7em;
								border-radius: 50%;
								border: 2px solid @l-color-blue-l;
								background-color: white;
								color: @l-color-blue;
								padding: @w / 2;
								//								display: block;
//								text-align: center;

								span.svgIcon {
										// display: block;
										// width: @w;
										// height: @w;
										svg.close {
												display: block;
												width: @w;
										}
								}
						}
				}
		}

		div.hepLogo {
				height: 5vh;
				//				width: auto;
				display: block;
				//				padding-left: 3rem;

				svg.hepLogo {
						width: 15rem;
						fill: black;
				}
		}
				
}


div.VIAKlaModuleExerciser {

		// no effect since contents only
		// margin: 0 var(--pageSidePad);

		div.titlePanel {
				@circleWidth: 2em;
				@sidePad: 1em;
				@borderRadius: @sidePad + @circleWidth/2;
				@height: 2 * @borderRadius;

				// margin-top: 1em;
				padding: @sidePad;
				height: @height;
				background-color: @l-color-blue-llll;
				border-radius: @borderRadius;

				display: flex;
				align-items: center;
				justify-content: space-between;
				overflow: visible;
				margin: 0 var(--pageSidePad);

				// img.svgImage {
				// 		width: 3em;
				// }

				div.moduleStatusIndicator {
						svg.stationNumber {
								width: @circleWidth;
						}
						
						span.moduleScore {
								@space: 0.2em;
								margin-left: @space;
								// img.svgImage {
								// 		width: @circleWidth*2/3;
								// 		margin: 0 @space;
								// }

								svg.iconProgress {
										width: @circleWidth*2/3;
										margin: 0 @space;

										path.top, path.bottom {
												fill: white;
												stroke: @l-color-blue-l;
												// stroke-miterlimit: 10;
												stroke-width: 1px;
										}

										&.active {
												path.top {
														stroke: @l-color-blue;
														stroke-width: 1.61px;
												}
										}

										&.progress50 {
												path.top {
														stroke: @l-color-blue;
														fill: @l-color-blue;
														stroke-width: 1.61px;
												}
												&.active {
														path.bottom {
																stroke: @l-color-blue;
																stroke-width: 1.61px;
														}
												}
										}

										&.progress100 {
												path.top, path.bottom {
														stroke: @l-color-blue;
														fill: @l-color-blue;
														stroke-width: 1.61px;
												}
										}
										
								}
						}
				}

				div.exerciserStatusIndicator {
						overflow: visible;
						position: relative;
						margin-right: 0.5em;

						@iconSize: 1.7em;
						
						span.modeIndicator {
								display: inline-block;
								min-width: 1.5 * @iconSize;
								text-align: center;
								img.svgImage {
										height: @iconSize;
								}
						}

						span.modeControls {
								display: inline-block;
								position: absolute;
								right: 0;
								top: 2em;
								width: 4 * @iconSize;
								z-index: 999; // must overlap on top of next flex item
								text-align: right;
								img.svgImage {
										height: 1.5 * @iconSize; // Etwas grösser weil ein Kreis darum ist
										margin-left: 0.6em;
								}

						}
				}
		}

		div.moduleBody {
				margin: 0;
				padding-bottom: 1em;
		}


		div.VIAKlaTaskExerciser {
				padding-left: 0.2em;
				padding-right: 0.2em;
				margin-bottom: 4em;

				div.VIAKlaSpeedReaderExerciser {

						// "Gameboard"
						div.speedReader {
								margin: 0 var(--pageSidePad);
								div.automaticStarter {
										position: absolute;
										top: 0;
										left: 0;
										right: 0;
										bottom: 0;
										z-index: 99;
										background-color: white;
										text-align: center;
										font-size: 200%;
										padding-top: 4em;
										cursor: pointer;

										img.svgImage.programm_automatisch {
												width: 4em;
												margin: 1em 0;
										}
								}

								div.mainPlayArea {
										position: relative;
										display: flex;
										flex-direction: column;
										height: 100%; //???
										justify-content: space-between;
										align-items: stretch;
//										align-items: center;
//										gap: 0.5em;
										
										div.speedTextArea {
												// height: 50vh;
												// min-height: 30vh;
												flex-basis: 50%;
												display: flex;
												justify-content: center;
												align-items: center;
												overflow: hidden;

												// Zauberspruch, immer mit Hintergrund
												&.magic-spell {
														// defined below on each step background-image: url(/site/images/magic-spell.svg);
														background-position: center;
														background-repeat: no-repeat;
														background-size: contain;
												}
	
												div.speedTextAreaContent {
														display: flex;
														justify-content: center;
														align-items: center;
														overflow: hidden;
														
														div.speedText {
																font-family: DCH;
																color: @l-color-blue;
																font-size: 6rem;
																text-align: center;

																// Only on small devices
																@media (max-width: @breakpoint-medium) {
																		&.longWord, &.long {
																				font-size: 4.5rem;
																		}
																}
																// Only on very small devices
																@media (max-width: @breakpoint-small) {
																		&.long {
																				font-size: 3rem;
																		}
																}
																
																// &.long, &.longWord {
																// 		font-size: 3rem;
																// }
														}

														svg.sign.sound, svg.sign.ellipsis {
																width: 6em;
														}
												}

										}

										
										div.navigationArea {
												display: flex;
												justify-content: center;
												align-items: flex-start;

												> span {
														flex-shrink: 0;
												}
												// > span:first-child {
												// 		// Heads-Asymmetrie zentrieren
												// 		margin-left: 40px;
												// }

												span.mainButton {
														//@size: 110px;
														//@size: 15vmin;
														//@size: 4cm;
														@width: 7rem;
														@height: @width * 0.7;
														display: inline-block;
														width: @width;
														height: @height;
														position: relative;
														// geht nicht wegen rechtem icon verschiedene breite text-align: center;
														//margin: @size * 0.2;
														text-align: center;

														
														svg.sign {
																position: relative;
														}

														@topGapForHead: @height * 0.24;
														@leftGapForHead: 0.4rem;
														
														&.read {

																svg.sign {
																		height: 95%;
																		top: @topGapForHead;
																}
														}

														&.speak {
																svg.sign {
																		height: 100%;
																		left: @leftGapForHead; // center gravity
																}
														}

														&.listen {
//																img.svgImage {
																svg.sign {
//																		height: 75%;
																		height: 95%;
																		top: @topGapForHead;
																		left: @leftGapForHead; // center gravity
																}
														}

														&.active {
																.activeButton();
														}

												}
										}

										div.subNavigationArea {
												display: flex;
												justify-content: center;
												align-items: center;

												height: 5em; // To avoid jumping UI, if button height is not consistent. Make it a bit bigger than biggest button

												span.nextButton, span.playPauseButton {
														display: inline-block;
														width: 9em;

														img.svgImage {
																width: 100%;
														}
												}

												span.playPauseButton {
														.poorManActiveEffect();
												}

												span.redoButton, span.doneButton {
														// buttons sind 66x58
														@width: 4.5em;
														@ratio: 66/58;
														display: inline-block;
														width: @width;
														height: @width / @ratio;
														margin: 0.1em;


														
														img.svgImage {
																.poorManActiveEffect();
																width: 100%;
														}
												}
										}


										.activeButton() {

												.activeDark {
														fill: @l-color-blue-l;
												}
												.activeLight {
														fill: @l-color-blue-llll;
												}
												.activeWhite {
														fill: white;
												}

										}
										

										div.speedChooser {

												display: flex;
												justify-content: space-between;
												align-items: center;
												margin: 0.5em 0;

												div.line {
														background-color: @l-color-blue-llll;
														height: 0.5em;
														flex-grow: 2;
												}

												
												div.speed {
														white-space: nowrap;
														.poorManActiveEffect();

														svg.radioButton {
																width: 20px;
														}
														
												}
										}

										svg.sign {
												&.active, &:active {
														.activeButton();
												}

												&.sound, &.ellipsis {
														fill: currentcolor;
												}

												&.disabled {
														fill: @l-color-blue-lll;
												}
												&.enabled {
														fill: @l-color-blue-l;													
												}
										}
										
										div.progressbar {
												@height: 0.5em;
												@radius: @height/2;
												
												width: 100%;
												height: @height;
												border-radius: @radius;
												background-color: @l-color-blue-llll;
												margin: 0.5em 0;

												div.filledBar {
														height: @height;
														border-radius: @radius;
														background-color: @l-color-blue-l;
												}
										}

								}

								// Automatic timer is playing
								&.playing {
										div.subNavigationArea {
												span.playPauseButton {
														.play {
																display: none;
														}
														.pause {
																display: unset;
														}
												}
										}
								}
								// Automatic timer is pausing
								&.pausing {
										div.subNavigationArea {
												span.playPauseButton {
														.play {
																display: unset;
														}
														.pause {
																display: none;
														}
												}
										}
								}

								// Is on step listen
								&.listen {
										div.speedTextArea.magic-spell {
												background-image: url(/site/images/magic-spell2.svg);
										}
										
										div.navigationArea {
												div.listenButtons {
														span.mainButton.listen.replay {
																display: none;
														}
												}
										}

										div.subNavigationArea {
												div.redoDoneButtons {
														visibility: hidden;
												}
										}

										
										&.hasPlayedSpeech {
												div.navigationArea {
														div.listenButtons {
																span.mainButton.listen.normalPlay {
																		display: none;
																}
																span.mainButton.listen.replay {
																		display: inline-block;
																		.poorManActiveEffect();
																}
														}
												}
												div.subNavigationArea {
														div.redoDoneButtons {
																visibility: visible;
														}
												}
										}
								}

								// is on step read
								&.read {
										// Zauberspruch
										div.speedTextArea.magic-spell {
												background-image: url(/site/images/magic-spell.svg);

												div.speedTextAreaContent {
														
														overflow: visible;

														div.speedText {
																padding: 0.5em;
																font-size: 3rem;
														}
												}
										}
								}

								// Is on step speak
								&.speak {
										div.speedTextArea.magic-spell {
												background-image: url(/site/images/magic-spell2.svg);
										}
								}

								// Sequence Blitz
								&.sequenceblitz {
										div.mainPlayArea div.navigationArea span.mainButton {
												// No given fixed width. Better centering of head.
												width: auto;
										}
								}								
						}
				}
		}
}



// Not inside the VIAKlaModuleExerciser, because it could be stand alone (e.g. in the backend testdrive)
// Styles inside the content of tasks
div.exercise {
		
		@dropTargetHoverColor: yellow;
		
		// General wrapping styles for backend usage
		// Not in use so far
		// .spaced {
		// 		letter-spacing: 0.1em;
		// 		line-height: 1.6em;
		// }
		// .framed {
		// 		padding: 10px;
		// 		margin: 15px 0;
		// 		border: 1px solid #aaa;
		// }
		// .smaller {
		// 		font-size: 88%;
		// }
		// .indented {
		// 		margin-left: 10%;
		// 		margin-right: 10%;
		// }

		table {
				border-collapse: collapse;

				tr {
						border-bottom: 1px solid #999;								
				}

				td, th {
						padding-top: 5px;
						padding-bottom: 5px;
						padding-right: 2px;
				}

				td + td, th + th {
						border-left: 1px solid #999;
						padding-left: 2px;
				}
		}

		
		input[type=text] {
				font-family: inherit;
				font-size: inherit;
				padding: 0 2px;
				margin: -2px 0;
		}

		p {
				margin-top: 3px;
				margin-bottom: 3px;
		}

		hr.divider {
				border-color: #999;
				margin: 2em 0;
		}		
} // div.exercise


div.VIAKlaMyProfileComponent {

//		padding: 1em;
		background-color:  @l-color-lightgreen;
		height: 100dvh;

		h1 {
				color: @l-color-main;
		}
		
		h1, h2, h3, h4 {
				text-align: left;
		}
		
}

div.VIAKlaOnboardingComponent {

//		padding: 1em;
		background-color:  @l-color-lightgreen;
		height: 100dvh;
		font-size: 120%;
		line-height: 150%;

		h1 {
				color: @l-color-main;
		}
		
		h1, h2, h3, h4 {
				text-align: left;
		}


		img.svgImage.klara_winkend {
				max-height: 30vh;
		}
		
		
}

// div.lightboxModal {
// 		div.invitationCode {
// 				font-size: 300%;
// 				text-align: center;
// 				font-family: monospace;
// 		}
// }


div.VIAInformationComponent {
		div.message {
				margin-bottom: 1em;
		}
}

div.VIAStaticTextDisplayerComponent {
		padding: 1em;
}

div.VIACaptchaComponent {
		pre.captcha {
				line-height: 1.1em;
		}
		input.captcha {
				font-size: 200%;
				font-family: monospace;
				border: 2px solid green;
				padding: 0.2em;
				margin: 0.2em 0 0.2em 0;
				max-width: 100%;
				box-sizing: border-box;
		}
}

div.infoPanel {
		position: fixed;
		display: flow-root;
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;
		background-color: @l-color-lightgreen;
		padding: 0.5em var(--pageSidePad);
		z-index: 1;
		overflow-y: auto;
		overscroll-behavior-y: none;
		
		div.infoPanelContent {
				background-color: white;
				padding: 1em;
				border-radius: 0.5em;
//				overflow-y: auto;

				// * {
				// 		pointer-events: none;
				// }
				
				svg.iconClose {
						width: 2rem;
				}

				.pillarDocument {
						a {
								color: @l-color-pink;
								&:hover, &:active {
										text-decoration: underline;
								}
						}
				}

		}

}


// ===========================================
// Demo
// ===========================================

@demoColor: #fffd37;

// span.uk-label.demoLabel {
// 		background-color: @demoColor;
// 		color: #000000;
// 		border: 1px solid #ccc;
// 		transform: rotate(-10deg);
// 		font-size: 0.7rem;
// 		font-weight: normal;
// 		padding-left: 0.3em;
// 		padding-right: 0.3em;
// 		position: relative;
// 		left: -0.5em;
// }

// // div.VIADemoUnitComponent {
// // 		span.uk-label.demoLabel {
// // 				margin-left: 0.2em;
// // 		}
// // }

div.demoRibbon {
		@dim: 12em;
		
		position: fixed;
		width: @dim;
		height: @dim;
		bottom: -(@dim/1.8);
		right: -(@dim/1.9);
		padding-top: 1em;
		transform-origin: center;
		transform: rotate(-45deg);
		z-index: 999999; 

		div.ribbonText {
				width: 100%;
				text-align: center;
				border-top: 2px solid black;
				padding: 0.3em 1em 10em 1em;
				background: @demoColor;
				color: black;
		}
}

// Cookiebar redefinitions
// #cookie-bar-button {
// 		background-color:  !important;
// }

// ============================================
// Misc
// ============================================



div.moduleBody {
		clear: both;
		position: relative; // Wichtig, damit eingebettete versteckte absolute-Elemente die Breite korrekt berechnen können
}

.testdriveTools {
		font-size: 80%;
		color: #999;

		a {
				color: #666;
		}
}


// ==============================================
// Klaro App Hauptkomponenten
// ==============================================

//@pageSidePad: 1em;


div.VIAKlaPagerComponent {

//		--pageSidePad: @pageSidePad;


		div.VIAKlaPageComponent {

				
				display: contents;

				div.klaroPage {
						padding: 0;
//						will-change: contents, transform, opacity; // Inform browser for better UI performance on slide in/out

						
					//	display: none; // default hidden and parked away
						position: relative; // ?

						// Always Fill the whole screen with the page
						min-height: 100vh;  // Fallback to where svh is not supported
						min-height: 100svh; // smallest view height, for mobile browsers, which dynamically optimise screen height

						scroll-behavior: smooth;
						overflow-x: hidden;
						overscroll-behavior-y: contain;

//						height: 100vh;
//						overflow-y: auto;

						&.noScroll {
								height: 100vh;
								height: 100svh;
//								scroll-behavior: smooth;
								overflow-y: hidden;
								overflow-x: hidden;

								display: flex;
								flex-direction: column;
								justify-content: space-between;
								gap: 0.5em;

								// div.VIAKlaModuleExerciser,
								// div.moduleBody,
								// div.VIAKlaTaskExerciser,
								// div.exercise,
								// div.taskGroup,
								// div.taskGroupItem,
								// div.VIAKlaSpeedReaderExerciser {
								// 		display: contents;
								// }

								div.speedReader {
										flex-grow: 2;
								}
								
						}

						// A page is ready, when it has been setup and sits in the background now, ready for display later
						// We explicitely set this class via JavaScript, so that the setup phase has a full displayed page.
						// A hidden page would fail with dimension calculation stuff, since it has dimension 0.
						&.ready {
								display: none;
						}
						
						&.current {

								&.withScroll {
										display: block;
								}
								&.noScroll {
										display: flex;
								}

								// Default appearance style
								&.slide {
										.pageSlide();
								}
								&.slide-back {
										.pageSlideBack();
								}

								// Simplest appearance style
								&.appear, &.appear-back {
										.pageAppear();										
								}
						}

						// &.transientVisibleForLoading {
						// 		display: block;
						// 		visibility: hidden;
						// }


						.topbar {

								// div.menubarCenter {
								// 		.uk-navbar-center();
								// }

								background-color: white;
								display: flex;
								justify-content: space-between;
								padding: 0.5em 0.5em 0.5em 0.5em; // var(--pageSidePad);

								div.topbarLeft {
										display: flex;
										align-items: center;
										justify-content: flex-start;
										font-size: 1rem;
										flex-basis: 30%;
//										flex-grow: 2;
										img.svgImage.menu_zurueck {
												width: 1.5em;
												margin-right: 0.5em;
										}
								}
								div.topbarCenter {
										display: flex;
										align-items: center;
										
										// &.activeHome {
										// 		border-color: @a-color-main;
										// 		a svg {
										// 				stroke: @a-color-main;
										// 				fill: @a-color-main;
										// 		}
										// }

								}
								div.topbarRight {
										display: flex;
										align-items: center;
										justify-content: flex-end;
										flex-basis: 30%;
										img.svgImage.menu {
												.poorManActiveEffect();
												width: 2em;
										}
								}

						}

						div.offcanvasMenu {
								@iconWidth: 1.5rem;

								position: fixed;
								top: 0;
								left: 0;
								right: 0;
								bottom: 0;
								z-index: 999999;
								background-color: @l-color-blue-llll;
								padding: 3.5rem 1em 1em 1em;

								// Not small phones
								@media (min-width: @breakpoint-small) {
								// Only large screens
								//@media (min-width: @breakpoint-large) {
										left: 66vw;
								}

								
								.slide-side-inout();
								
								// &.in {
								// 		display: block;
								// 		.slide-in-right();
								// }
								// &.out {
								// 		display: block;
								// 		.slide-out-right();
								// }



								span.offcanvasClose {
										position: absolute;
										top: 10px;
										right: 10px;
										// width: 2.5rem;
										// height: 2.5rem;
										background-color: white;
										border-radius: 50%;
										padding: 0.5rem;

										svg.svgIcon {
										 		//display: inline-block;
										 		width: 1.5rem;
										}
								}

								div.pageMenuContainer {
										// position: absolute;
										// bottom: 0;
										// top: 0;
										height: 100%;
										display: flex;
										flex-direction: column;
										justify-content: space-between unsafe;
										align-items: stretch;
										overflow-y: auto;


										div.pageMenuItems {
												flex-grow: 1;
												flex-shrink: 1;

												ul {
														padding-left: 0;

														li {
																font-size: 1.1rem;
																font-weight: normal;
																//																margin: 1em 0;

																@menuBorder: 1px solid @l-color-blue-ll;
																@menuSpace: 0.5em;

																// ul.subMenu {
																// 		padding-left: @iconWidth;
																// 		li {
																// 				font-size: 1.1rem;
																// 				font-weight: normal;
																// 		}
																// }

																&:first-child {
																		a {
																				border-top: @menuBorder;
																		}
																}
																a {
																		//												color: white;
																		white-space: nowrap;
																		padding: @menuSpace 0;
																		display: block;
																		border-bottom: @menuBorder;

																		span.svgIcon {
																				//																text-align: center;
																				display: inline-block;
																				width: @iconWidth;
																				//height: 1rem;
																		}

																		span.menuEntryText {
//																				.uk-text-truncate();
																		}

																		&:hover, &:active {
																				color: white;
																				background-color: @l-color-blue;
																		}
																}

																// &.logout {
																// 		padding-top: 1em;
																// }

																span.menuDivider {
																		display: block;
																		height: 3em;
																		border-bottom: @menuBorder;
																}

																&.small {
																		font-size: 0.9rem;
																}

														}
												}

										}
										
										div.pageMenuFooter {
												// position: absolute;
												// bottom: 0;
												padding-top: 2em;
												flex-grow: 0;
												flex-shrink: 0;

												svg.hepLogo {
														height: 5vh;
														fill: @l-color-blue;
														//										width: @offcanvas-bar-width
												}

												div.betatestInfo {
														margin-top: 2em;
														color: grey;
														font-size: 50%;
												}
										}

								}
								
						}
		
						div.footer {
								position: absolute;
								width: 100%;
								bottom: 0;
								padding: 1em;
								text-align: center;
						}
				}

				div.infoPanel {
						div.teacherNotes {
								margin: 1em 0;
						}
				}

				&.VIAKlaNavigatorPage div.klaroPage {

						.preventStupidTouchStuff();
														 
						.topbar {
								div.topbarLeft {
										span.klaroLogo {
												display: inline-block;
												width: 60px;
										}
								}
						}

						svg.navigatorStage {
								width: 100%;
								// Does not work, disables scrolling on iPhone?
								height: auto;
								
								g[id^="Station_"] {

										@nonHighlighted: #6e9172ff;
										@highlighted: #e72f72ff;

										g.taskScore {
												path.inner {
														fill: none;																
												}
												path.outer {
														fill: @nonHighlighted;
												}
										}
										
										&.enabled {
												.poorManActiveEffect();
												cursor: pointer;

												&.isNewExercise {
														.pulseAnimation();
												}
												
												g[id^="Kreis_gross"] {
														path {
																fill: @highlighted;
														}
												}

												g.taskScore {
														path.outer {
																fill: @highlighted;
														}
														
														&.done {
																path.inner {
																		fill: @highlighted;
																}
														}
												}

										}
								}


								g#Hexenhaus {
										> g {
												visibility: hidden;
//												opacity: 0.1;
										}

										g#Haus_00 {
//												opacity: 1;
												visibility: visible;
										}

										g#Schild {
												visibility: visible;
										}
										
										> g.moduleFinished {
//												opacity: 1;
												visibility: visible;												
										}
								}


								
								@keyframes witchflying {
										0% {
												translate: 1px 3px;
										}
										20% {
												translate: 1px -1px;
										}
										50% {
												translate: -3px 2px;
										}
										80% {
												translate: -1px -2px;
										}
										100% {
												translate: 1px 3px;
										}
								}				
								
								g#Hexe_Klara {
										animation-name: witchflying;
										animation-duration: 8s;
										animation-direction: normal;
										animation-iteration-count: infinite;
										animation-timing-function: ease-in-out;
										
								}

						}
				}


				
				&.VIAKlaExercisePage div.klaroPage {

						.preventStupidTouchStuff();

//						padding: 0 var(--pageSidePad);
						
						// Not small phones
						// @media (min-width: @breakpoint-medium) {
						// 		padding: 0 10%;
						// }

						&.noScroll {

								// passivate many container elements for flex taking the relevant objects
								div.VIAKlaModuleExerciser,
								div.moduleBody,
								div.VIAKlaTaskExerciser,
								div.exercise,
								div.taskGroup,
								div.taskGroupItem,
								div.VIAKlaSpeedReaderExerciser {
										display: contents;
								}
						}

						
						// .topbar {
						// 		margin-top: 1em;
						// 		margin-left: 1em;
						// }

								
						div.lottieAnimation {

								@circleWidth: 2em;
								@sidePad: 1em;
								@borderRadius: @sidePad + @circleWidth/2;

								border-top-left-radius: @borderRadius;
								border-top-right-radius: @borderRadius;
								// margin-left: @sidePad;
								// margin-right: @sidePad;
								
								// width: 100vw;
								// height: 100vh;
								flex-grow: 2;
//								flex-basis: 50%;
								//								height: 100%;

								min-height: 0; // Prevents having a big auto minimal height and overflow!
								
								// display: flex;
								// align-items: stretch;
								// justify-content: center;
								
								// dotlottie-player {
								// 		height: 100%;
								// }

								&.manualToAutomatic, &.startManual, &.finish {
										// width: 100%;
										margin-left: -var(--pageSidePad);
										margin-right: -var(--pageSidePad);
										// box-sizing: border-box;
//										height: 80vh;
								}
								&.startManual {
										background-color: white;
								}
								&.finish {
										background-color: @l-color-mediumgreen;
								}
								&.manualToAutomatic {
										background-color: white;
								}
						}

						
				}

				&.VIAKlaStationPage div.klaroPage {
						background-color: @l-color-lightgreen;

						div.moduleTitle {
								display: flex;
								justify-content: center;
								margin: 1em 0;

								svg.stationNumber {
										width: 3em;
								}
						}

						div.exercisePanels {
								padding-left: var(--pageSidePad);
								padding-right: var(--pageSidePad);
								
								div.exercisePanel {
										background-color: white;
										padding: 1em;
										border-radius: 0.5em;
										margin: 1em 0;
										position: relative;
										// display: flex;
										// justify-content: space-between;
										// align-items: flex-start;

										&.enabled {
												.poorManActiveEffect();
										}
										
										&.disabled {
												div.rowOne {
														div.exerciseTitle, span.infoButton {
																opacity: 0.5;
														}
												}
										}
										
										div.rowOne {
												display: flex;
												justify-content: space-between;
												align-items: center;
										
												div.exerciseTitle {
														font-size: 2.3rem;
														// display: flex;
														// justify-content: space-between;
												}

												span.infoButton {
														display: inline-block;
														background-color: white;
														border: 1px solid @l-color-blue;
														padding: 5px 15px;
														margin-top: 10px;
												}

												// span.progress {
												// 		position: absolute;
												// 		top: 10px;
												// 		right: 10px;
												// }

												span.actionSymbol {
														// position: absolute;
														// right: 10px;
														// top: 10px;
														//												top: 45%;

														&.nextTask {
																display: inline-block;
//																margin-top: 0.5em;
																.pulseAnimation();
														}

														img.svgImage {
																margin-left: 0.5em;
																width: 3em;
														}
												}
										}
										
										div.rowTwo {
												// display: flex;
												// justify-content: space-between;
												// align-items: flex-start;

										}
								}								
						}
				}

				&.VIAKlaTransientAnimationPage div.klaroPage {

						.preventStupidTouchStuff();

						div.lottieAnimation {
								&.animationName-01-HW-Uebergang-Schildkroete,
								&.animationName-01-HW-Uebergang-Hase,
								&.animationName-01-HW-Uebergang-Bravo {
										background-color: @l-color-mediumgreen;
								}
								
								dotlottie-player.transientAnimation {
										width: 100vw;
										height: 100vh;
								}
						}
				}

				&.VIAKlaRewardPage div.klaroPage {
						background-color: @l-color-mediumgreen;
						div.lottieAnimation {
								// background-color: @l-color-mediumgreen;
								flex-basis: 80%;
								flex-grow: 2;
								min-height: 0;
								
								dotlottie-player {
										width: 100vw;
										height: 100%;
								}
						}

						div.goAhead {
								text-align: center;
								margin-bottom: 3em;

								span.standardButton {
										background-color: @l-color-blue;
										border-style: none;
										color: white;
								}
						}
						
				}

				span.pagerAnchor {
						cursor: pointer;

						// &:active {
						// 		filter: brightness(50%);
						// }
				}
				
		}
		
}

div.VIAKlaIntroductionComponent {
		@videoBackground: #F7F7EB; // nicht ganz @l-color-lightgreen
		@videoBackgroundEnd: #F5B0B4;

		@videoWidth: 720;
		@videoHeight: 1280;
		
		background-color: @videoBackground;
		height: 100dvh;
//		padding-top: 1em;
		box-sizing: border-box;

		.maxDimensions() {
				height: 100dvh;
				max-width: ~"min(@{videoWidth}px, 100vw)"; // Literal CSS, using min NOT from less
				//max-width: 100vw;
				aspect-ratio: @videoWidth / @videoHeight;
				width: auto;
				// retina
				// @media only screen and (min-resolution: 2dppx) {
				// 		max-width: 360px;
				// }
				
		}
		
		div.videoContainer {
				// width: 100vw;
				position: relative;
				margin: 0 auto;

				.maxDimensions();

				// Trick: Keeps aspect ratio, see https://fettblog.eu/blog/2013/06/16/preserving-aspect-ratio-for-embedded-iframes/
				// @aspectRatioPad: (@videoWidth*100/@videoHeight) / 2;
				// padding-right: unit(@aspectRatioPad, %);
				// padding-left: unit(@aspectRatioPad, %);
				
				video {
						.maxDimensions();
						
						background-color: @videoBackground;
//						display: block;
//						max-width: 100%;
//						height: auto;
//						max-height: 100%;
						object-fit: contain;
				}

				div.videoControlOverlay {
//						.maxDimensions();
						// visibility: hidden;
						position: absolute;
						top: 0;
						bottom: 0;
						right: 0;
						left: 0;
						z-index: 1;
						padding: 2em 0.5em;
//						background: rgba(50%,50%,50%,0.3);
//						background-color: fade(@l-color-lightgreen, 70%);
						//background-color: @videoBackground;
						background-color: transparent;

						a.closeAnchor {
								position: absolute;
								top: 30px;
								right: 8px;
								z-index: 2;
								width: 2.5rem;
								background-color: white;
								border-radius: 50%;
								border-color: grey;
								border-width: 1px;
								border-style: solid;
								padding: 0.5rem;
								// filter: drop-shadow(0px 0px 10px white);
								// outline: 3px solid white;
								box-shadow: 0 0 0 3px white;
						}
						
						div.dynamicPart {
								position: absolute;
								top: 0;
								bottom: 0;
								right: 0;
								left: 0;
								display: flex;
								flex-direction: column;
								justify-content: flex-start;
								align-items: stretch;
								padding: 1em;
								
								.anchorButton, button.clickButton {
										display: flex;
										justify-content: space-between;
										align-items: center;
										background-color: white;
										border: none;
										margin: 1em 0;
										font-size: 1.5rem;
										height: 4rem;
										
										img.svgImage {
												width: 2rem;
										}
								}
								// button.continueButton {
								// 		width: 100%;
								// }
								button.playButton {
										width: 100%;
								}

								img.play_gross_1 {
										.poorManActiveEffect();
								}
								
								a.anchorButton {
										&.exitButton {
												width: 100%;
												visibility: hidden;
										}
								}
								
								a.skipAnchor {
										position: absolute;
										visibility: hidden;
										bottom: 5em;
										right: 1em;
								}

								// a.repeatAnchor {
								// 		position: absolute;
								// 		bottom: 5em;
								// 		left: 1em;
								// }

								span.klaroLogo {
										display: none;
										padding: 0 20%;
										margin-bottom: 1em;
										//								filter: drop-shadow(0px 0px 5px black);
								}
								img.video_ende_rosa_screen, img.klara_winkend {
										padding: 0 20%;
										display: none;
										//										width: 100%;
										flex-basis: 50%;
										min-height: 0;
										margin: 1em 0;
								}


								div.videoControls {
										display: flex;
										justify-content: space-around;
										button {
												text-align: center;
										}
								}
						}
				}
				
				// Video at start but paused
				&.readyToStart {
						div.videoControlOverlay div.dynamicPart {

								img.klara_winkend {
										display: block;
								}
								div.videoControls {
										display: none;
								}
								// button.continueButton {
								// 		visibility: hidden;
								// }
								button.playButton {
										span.start {
												display: inline;
										}
										span.repeat {
												display: none;
										}
								}
								a.anchorButton {
										&.exitButton {
												visibility: hidden;
										}
								}

								// a.clickAction {
										
								a.skipAnchor {
										visibility: visible;
								}

								// 		&.repeatAnchor {
								// 				visibility: hidden;
								// 		}

								// }

						}
				}
				
				// Video is playing
				&.playing {
						div.videoControlOverlay div.dynamicPart {
								display: none;
						}
				}

				// Video is pausing
				&.pausing {
						div.videoControlOverlay div.dynamicPart {

								span.klaroLogo {
										display: block;
								}

								button.playButton {
										visibility: hidden;
								}
								// button.continueButton {
								// 		visibility: hidden;
								// }
								
								// a.clickAction {
										
								// 		&.repeatAnchor {
								// 				visibility: visible;
								// 		}

								// }
						}

						video {
								filter: opacity(50%) blur(2px);
						}
				}

				// Video has ended
				&.ended {
						div.videoControlOverlay {
								background-color: @videoBackgroundEnd;
								div.dynamicPart {
										//								position: fixed;

										// span.klaroLogo {
										// 		display: none;
										// }
										span.klaroLogo {
												display: none;
										}
										img.video_ende_rosa_screen {
												display: block;
										}
										button.playButton {
												visibility: visible;
												background-color: lighten(@videoBackgroundEnd, 10%);

												span.start {
														display: none;
												}
												span.repeat {
														display: inline;
												}
												
										}
										// button.continueButton {
										// 		visibility: hidden;
										// }
										a.exitButton {
												visibility: visible;
										}
										// a.skipAnchor {
										// 		visibility: hidden;
										// }
										div.videoControls {
												display: none;
										}
								}
						}
				}
		}		
}


svg.stationNumber {
		.circle {
				fill: #fff;
				stroke: @l-color-blue;
//				stroke-miterlimit: 10;
				stroke-width: 2.5px;
		}
		.text {
				fill: @l-color-blue;
//				font-family: UnitRoundedPro-Medium, ''Unit Rounded Pro'';
				font-size: 16.96px;
//				font-weight: 500;
		}
}




div.developmentTools {
		margin-bottom: 10em;
}

// =======================================================================
// UI Breakpoints (leave at end of file, for CSS precedence)
// =======================================================================

@import "styles_klaro_responsive.less";


// Keep this for Emacs editor!
//
// Local Variables:
// less-css-compile-at-save: t
// End:
