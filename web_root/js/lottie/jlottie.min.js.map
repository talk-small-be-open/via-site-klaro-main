{"version":3,"file":"jlottie.min.js","sources":["../src/jlottie.js"],"sourcesContent":["const xmlns = 'http://www.w3.org/2000/svg';\n\nexport let animation = [];\nexport let frame = [];\nexport let animationCount = -1;\nconst animationLength = 0;\nlet animationLoading = 0;\nconst frozen = false;\nlet playStarted = false;\nvar smallestFrameTime = 0;\nvar smallestTimeBuffer = 0;\nlet debugAnimation = false;\nlet timeoutObj;\nlet _useWebWorker = false;\n\n// shadow dom support\n// jLottie accesses elements by id and that stops working when they sit in a shadow dom component\n// fix: instead of accessing elements through document.getElementById\n// they will be accessed through querySelector on the container element\nconst getAnimationComponent = (animationId, id) =>\n animation[animationId]._renderObj.querySelector(`#${CSS.escape(id)}`);\n\n/**\n * Exposes a near-zero cost console logger.\n *\n * @example debug(() => 'My logging statement'); // only prints if debugAnimation is set\n * @example debug(() => ['My logging statement', { state }]); // Prints the message and state if debugAnimation is set\n */\nexport function debug(loggerFn) {\n  if (!debugAnimation) return;\n\n  const loggingArgs = loggerFn();\n\n  if (Array.isArray(loggingArgs)) {\n    console.log(...loggingArgs);\n  } else {\n    console.log(loggingArgs);\n  }\n}\n\n/// ////////// BEZIER\nexport function arcLength(p1, p2) {\n  let result = Math.sqrt(Math.pow((p2[0] - p1[0]), 2) + Math.pow((p2[1] - p1[1]), 2));\n  return result;\n}\n\nexport function bezierCurve(\n  p1,\n  c1,\n  c2,\n  p2,\n  fromT,\n  toT,\n  isLayer,\n  animationId,\n  refKey,\n  addTransformation,\n  objectId,\n  depth,\n  customFlag,\n  isEnd\n) {\n  const newNodes = [];\n\n  if (c1.hasOwnProperty('x')) {\n  } else if (c1.length >= 1) {\n    c1.x = c1[0];\n    if (refKey == 'p' || refKey == 's') {\n      c1.y = c1[1];\n    }\n  }\n  if (c2.hasOwnProperty('x')) {\n  } else if (c2.length >= 1) {\n    c2.x = c1[0];\n    if (refKey == 'p' || refKey == 's') {\n      c2.y = c1[1];\n    }\n  }\n  if (refKey == 's') {\n    if (c1.x.length > 1) {\n      c1.x = c1.x[0];\n      c1.y = c1.y[0];\n    }\n    if (c2.x.length > 1) {\n      c2.x = c2.x[0];\n      c2.y = c2.y[0];\n    }\n  }\n  const frames = toT - fromT;\n  let timeTick;\n  let oneMinusT;\n  let currentFrame = fromT;\n  for (let i = 1; i < frames; i++) {\n    timeTick = i / frames;\n    oneMinusT = 1 - timeTick;\n    newNodes.push({ _comp: 1, t: 0 });\n    currentFrame++;\n    newNodes[newNodes.length - 1]._frame = parseInt(currentFrame);\n    newNodes[newNodes.length - 1].t = parseInt(currentFrame);\n    newNodes[newNodes.length - 1].s = [];\n    if (refKey != 'ks') {\n      if (p1.length > 4) {\n        for (var m = 0; m < (p1.length / 4); m++) {\n          newNodes[newNodes.length - 1].s.push(\n            Math.pow(oneMinusT, 3) * p1[m * 4] +\n              3 * Math.pow(oneMinusT, 2) * timeTick * (c1.x + p1[m * 4]) +\n              3 * oneMinusT * Math.pow(timeTick, 2) * (c2.x + p2[m * 4]) +\n              Math.pow(timeTick, 3) * p2[m * 4],\n          );\n          for (var n = 1; n < 4; n++) {\n            newNodes[newNodes.length - 1].s.push(\n              Math.pow(oneMinusT, 3) * p1[(m * 4) + n] +\n                3 * Math.pow(oneMinusT, 2) * timeTick * (c1.y + p1[(m * 4) + n]) +\n                3 * oneMinusT * Math.pow(timeTick, 2) * (c2.y + p2[(m * 4) + n]) +\n                Math.pow(timeTick, 3) * p2[(m * 4) + n],\n            )\n          }\n        }\n      } else {\n        newNodes[newNodes.length - 1].s.push(\n        Math.pow(oneMinusT, 3) * p1[0] +\n          3 * Math.pow(oneMinusT, 2) * timeTick * (c1.x + p1[0]) +\n          3 * oneMinusT * Math.pow(timeTick, 2) * (c2.x + p2[0]) +\n          Math.pow(timeTick, 3) * p2[0],\n        );\n        if (refKey != 'x' && refKey != 'y') {\n          if (refKey == 'p' || refKey == 's') {\n            newNodes[newNodes.length - 1].s.push(\n              Math.pow(oneMinusT, 3) * p1[1] +\n                3 * Math.pow(oneMinusT, 2) * timeTick * (c1.y + p1[1]) +\n                3 * oneMinusT * Math.pow(timeTick, 2) * (c2.y + p2[1]) +\n                Math.pow(timeTick, 3) * p2[1],\n            );\n          }\n        }\n      }\n    } else {\n      newNodes[newNodes.length - 1].s.push({ i: [], o: [], v: [] });\n      const j = 0;\n      for (let k = 0; k < p1[j].i.length; k++) {\n        newNodes[newNodes.length - 1].s[newNodes[newNodes.length - 1].s.length - 1].i.push([\n          Math.pow(oneMinusT, 3) * p1[j].i[k][0] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.x + p1[j].i[k][0]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.x + p2[j].i[k][0]) +\n            Math.pow(timeTick, 3) * p2[j].i[k][0],\n          Math.pow(oneMinusT, 3) * p1[j].i[k][1] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.y + p1[j].i[k][1]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.y + p2[j].i[k][1]) +\n            Math.pow(timeTick, 3) * p2[j].i[k][1],\n        ]);\n\n        newNodes[newNodes.length - 1].s[newNodes[newNodes.length - 1].s.length - 1].o.push([\n          Math.pow(oneMinusT, 3) * p1[j].o[k][0] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.x + p1[j].o[k][0]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.x + p2[j].o[k][0]) +\n            Math.pow(timeTick, 3) * p2[j].o[k][0],\n          Math.pow(oneMinusT, 3) * p1[j].o[k][1] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.y + p1[j].o[k][1]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.y + p2[j].o[k][1]) +\n            Math.pow(timeTick, 3) * p2[j].o[k][1],\n        ]);\n\n        newNodes[newNodes.length - 1].s[newNodes[newNodes.length - 1].s.length - 1].v.push([\n          Math.pow(oneMinusT, 3) * p1[j].v[k][0] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.x + p1[j].v[k][0]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.x + p2[j].v[k][0]) +\n            Math.pow(timeTick, 3) * p2[j].v[k][0],\n          Math.pow(oneMinusT, 3) * p1[j].v[k][1] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.y + p1[j].v[k][1]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.y + p2[j].v[k][1]) +\n            Math.pow(timeTick, 3) * p2[j].v[k][1],\n        ]);\n      }\n    }\n    if (addTransformation > -1 && refKey != 'ks' && customFlag != 'length') {\n      if (newNodes[newNodes.length - 1].hasOwnProperty('s')) {\n        addGroupPositionTransform(\n          currentFrame,\n          newNodes[newNodes.length - 1].s,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      }\n    }\n  }\n\n  return newNodes;\n}\n\n/// ////////// ANIMATOR\n\nexport function loadFrame(i, _currentFrame) {\n  for (let ref = 0; ref < animation[i]._refObj.length; ref++) {\n    const refObj = animation[i]._refObj[ref];\n    let nextObj = false;\n    for (let m = _currentFrame - 1; m >= 0; m--) {\n      for (let n = 0; n < animation[i]._scene[m]._transform.length; n++) {\n        if (animation[i]._scene[m]._transform[n].refObj == refObj) {\n          if (animation[i]._scene[m]._transform[n].fillSet) {\n            if (animation[i]._scene[m]._transform[n].isGradient) {\n              const stops = getAnimationComponent(i, animation[i]._scene[m]._transform[n].fillObj).querySelectorAll(\"stop\");\n              for (var o = 0; o < stops.length; o++) {\n                stops[o].setAttribute(\"offset\", animation[i]._scene[m]._transform[n].offsets[m]);\n                stops[o].setAttribute(\"style\", animation[i]._scene[m]._transform[n].styles[m]);\n              }\n            } else {\n\n            }\n          } else {\n            if (animation[i]._scene[m]._transform[n].refObjSet) {\n              const currentObj = getAnimationComponent(i, animation[i]._scene[m]._transform[n].refObj);\n              const currentObjOther = getAnimationComponent(i, \n                animation[i]._scene[m]._transform[n].refObjOther,\n              );\n              if (animation[i]._scene[m]._transform[n].isTween) {\n                currentObj.setAttribute('d', animation[i]._scene[m]._transform[n].dataString);\n              }\n              if (animation[i]._scene[m]._transform[n].combined.length > 0) {\n                currentObj.setAttribute(\n                  'transform',\n                  animation[i]._scene[m]._transform[n].combined,\n                );\n              }\n              if (animation[i]._scene[m]._transform[n].fillSet) {\n                currentObj.setAttribute(\n                  'fill',\n                  animation[i]._scene[m]._transform[n].fill,\n                );\n              }\n              if (animation[i]._scene[m]._transform[n].strokeWidth > -1) {\n                currentObj.setAttribute(\n                  'stroke-width',\n                  animation[i]._scene[m]._transform[n].strokeWidth,\n                );\n              }\n              currentObjOther.setAttribute(\n                'opacity',\n                animation[i]._scene[m]._transform[n].opacity,\n              );\n              nextObj = true;\n              break;\n            }\n            if (animation[i]._scene[m]._transform[n].hide && animation[i]._scene[m]._transform[n].stageEvent) {\n              getAnimationComponent(i, \n                animation[i]._scene[m]._transform[n].stageObj,\n              ).style.display = 'none';\n            }\n            if (animation[i]._scene[m]._transform[n].show && animation[i]._scene[m]._transform[n].stageEvent) {\n              getAnimationComponent(i, \n                animation[i]._scene[m]._transform[n].stageObj,\n              ).style.display = 'block';\n            }            \n          }\n        }\n\n        if (nextObj) break;\n      }\n      if (nextObj) break;\n    }\n  }\n}\n\nexport function lottiemate() {\n  const currentDate = Date.now();\n  for (let i = 0; i <= animationCount; i++) {\n    if (animation[i]._loaded && currentDate - animation[i]._lastTime >= (animation[i]._frameTime - 5)) {\n      if (animation[i]._removed || animation[i]._paused) {\n        continue;\n      }\n      if (animation[i]._debugAnimation) {\n        animation[i]._timeElapsed = animation[i]._timeElapsed + (currentDate - animation[i]._lastTime);\n      }\n      animation[i]._currentFrame++;\n      if (animation[i]._currentFrame >= animation[i]._totalFrames) {\n        animation[i]._loopCount++;\n        animation[i]._renderObj.dispatchEvent(new CustomEvent(\"onLoopComplete\", {bubbles: true, detail: {\"count\": animation[i]._loopCount, \"animation\": i, \"frame\": animation[i]._currentFrame} }));\n        animation[i]._renderObj.dispatchEvent(new CustomEvent(\"loopComplete\", {bubbles: true, detail: {\"count\": animation[i]._loopCount, \"animation\": i, \"frame\": animation[i]._currentFrame} }));\n        if (!animation[i]._loop) {\n          animation[i]._currentFrame--;\n          animation[i]._paused = true;\n          //goToAndStop(animation[i]._currentFrame, '', animation[i]._elementId);\n          //continue;   \n        } else {\n          animation[i]._currentFrame = 0;\n        }\n      }\n\n        for (let j = 0; j < animation[i]._scene[animation[i]._currentFrame]._transform.length; j++) {\n          if (animation[i]._scene[animation[i]._currentFrame]._transform[j].fillSet) {\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].isGradient) {\n              const stops = getAnimationComponent(i, animation[i]._scene[animation[i]._currentFrame]._transform[j].fillObj).querySelectorAll(\"stop\");\n              for (var m = 0; m < stops.length; m++) {\n                stops[m].setAttribute(\"offset\", animation[i]._scene[animation[i]._currentFrame]._transform[j].offsets[m]);\n                stops[m].setAttribute(\"style\", animation[i]._scene[animation[i]._currentFrame]._transform[j].styles[m]);\n              }\n            } else {\n\n            }\n          }\n          if (animation[i]._scene[animation[i]._currentFrame]._transform[j].refObjSet) {\n            const currentObj = getAnimationComponent(i, animation[i]._scene[animation[i]._currentFrame]._transform[j].refObj);\n            const currentObjOther = getAnimationComponent(i, \n              animation[i]._scene[animation[i]._currentFrame]._transform[j].refObjOther\n            );\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].isTween) {\n              currentObj.setAttribute('d', animation[i]._scene[animation[i]._currentFrame]._transform[j].dataString);\n            }\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].combined.length > 0) {\n              currentObj.setAttribute(\n                'transform',\n                animation[i]._scene[animation[i]._currentFrame]._transform[j].combined,\n              );\n            }\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].fillSet) {\n              currentObj.setAttribute(\n                'fill',\n                animation[i]._scene[animation[i]._currentFrame]._transform[j].fill,\n              );\n            }\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].strokeWidth > -1) {\n              currentObj.setAttribute(\n                'stroke-width',\n                animation[i]._scene[animation[i]._currentFrame]._transform[j].strokeWidth,\n              );\n            }\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].opacitySet) {\n              currentObjOther.setAttribute(\n                'opacity',\n                animation[i]._scene[animation[i]._currentFrame]._transform[j].opacity,\n              );\n            }\n          }\n          if (animation[i]._scene[animation[i]._currentFrame]._transform[j].hide && animation[i]._scene[animation[i]._currentFrame]._transform[j].stageEvent) {\n            getAnimationComponent(i, \n              animation[i]._scene[animation[i]._currentFrame]._transform[j].stageObj,\n            ).style.display = 'none';\n          }\n          if (animation[i]._scene[animation[i]._currentFrame]._transform[j].show && animation[i]._scene[animation[i]._currentFrame]._transform[j].stageEvent) {\n            getAnimationComponent(i, \n              animation[i]._scene[animation[i]._currentFrame]._transform[j].stageObj,\n            ).style.display = 'block';\n          }\n        }\n      //}, 0);\n\n      var postRender = Date.now();\n      if (animation[i]._debugAnimation) {\n        // DEBUG\n        var debugDate = Date.now();\n        animation[i]._timeElapsed = animation[i]._timeElapsed + (debugDate - currentDate);\n        //animation[i]._debugObj.innerHTML = `required fps: ${animation[i].fr}, current fps: ${animation[i]._timeElapsed}`;\n        var dispString = `current frame: ${animation[i]._currentFrame}<br /> `;\n        if (animation[i]._timeElapsed >= 2000) {\n          animation[i]._curFPS = 1000 / (currentDate - animation[i]._lastTime);\n          dispString += `required fps: ${animation[i].fr}<br /> current fps: ${\n            animation[i]._curFPS\n          }`;\n          animation[i]._timeElapsed = 0;\n        }\n        animation[i]._debugObj.innerHTML = dispString;\n      }\n  \n      animation[i]._lastTime = currentDate;\n    }\n\n    if (animation[i]._frameTime - (postRender - currentDate) < 0) {\n      animation[i]._currentFrame++;\n      if (animation[i]._currentFrame >= animation[i]._totalFrames) {\n        animation[i]._loopCount++;\n        //animation[i]._renderObj.dispatchEvent(new CustomEvent(\"onLoopComplete\", {bubbles: true, detail: {\"count\": animation[i]._loopCount, \"animation\": i, \"frame\": animation[i]._currentFrame} }));\n        //animation[i]._renderObj.dispatchEvent(new CustomEvent(\"loopComplete\", {bubbles: true, detail: {\"count\": animation[i]._loopCount, \"animation\": i, \"frame\": animation[i]._currentFrame} }));\n        if (!animation[i]._loop) {\n          animation[i]._currentFrame--;\n          animation[i]._paused = true;\n          goToAndStop(animation[i]._currentFrame, '', animation[i]._elementId);\n          continue;   \n        } else {\n          animation[i]._currentFrame = 0;\n        }\n      }\n    }\n\n    if (animation[i]._toBePaused && animation[i]._currentFrame == animation[i]._pauseAt) {\n      animation[i]._toBePaused = false;\n      animation[i]._paused = true;\n      animation[i]._pauseAt = 0;\n      debug(() => [\"pause requested\"]);\n    }\n  }\n\n  var renderDone = Date.now();\n  clearTimeout(timeoutObj);\n  setTimeout(() => {\n    requestAnimationFrame(lottiemate);\n  }, (smallestFrameTime - 8) - (renderDone - currentDate));\n}\n\n\nwindow.URL = window.URL || window.webkitURL;\n\n\n\nvar lottiemateBlob = new Blob([`(\n\nonmessage = function(e) {\n  if (e.data !== undefined && e.data !== null) {\n    let todo = e.data[0];\n    if (todo == 1) {\n      self.animationId = e.data[1];\n      self.animation = JSON.parse(e.data[2]);\n      //console.log('brute');\n    } else if (e.data[0] == 2) {\n      //console.log('tr');\n      self.animation._currentFrame = e.data[1];\n    }\n\n    if (! self.animation._removed && ! self.animation._paused) {\n        const currentDate = Date.now();\n        let dontRender = false;\n      \n        //if (animation._loaded && currentDate - animation._lastTime >= (animation._frameTime - 5)) {\n          \n          if (! self.animation._removed && ! self.animation._paused) {\n            if (animation._debugAnimation) {\n              self.animation._timeElapsed = self.animation._timeElapsed + (currentDate - self.animation._lastTime);\n            }\n        \n            self.animation._currentFrame++;\n            if (self.animation._currentFrame >= self.animation._totalFrames) {\n              self.animation._loopCount++;\n              // NEEDS ALTERNATIVE // self.animation._renderObj.dispatchEvent(new CustomEvent(\"onLoopComplete\", {bubbles: true, detail: {\"count\": self.animation._loopCount, \"self.animation\": i, \"frame\": self.animation._currentFrame} }));\n              // NEEDS ALTERNATIVE // self.animation._renderObj.dispatchEvent(new CustomEvent(\"loopComplete\", {bubbles: true, detail: {\"count\": self.animation._loopCount, \"self.animation\": i, \"frame\": self.animation._currentFrame} }));\n              if (!self.animation._loop) {\n                self.animation._currentFrame--;\n                self.animation._paused = true;\n                // NEEDS ALTERNATIVE // goToAndStop(self.animation._currentFrame, '', self.animation._elementId);\n                dontRender = true;   \n              } else {\n                self.animation._currentFrame = 0;\n              }\n            }\n          \n            if (! dontRender) {\n              postMessage([1, self.animationId, self.animation._currentFrame, currentDate]);\n            }\n            //setTimeout(function () {\n            //}, 0);\n        \n            self.animation._lastTime = currentDate;        \n          }\n      \n        //}\n                \n        //clearTimeout(self.timeoutObj);\n        //console.log('brute', self.animation._frameTime);\n        //setTimeout(() => {self.postMessage([2])}, self.animation._frameTime);      \n    }\n  }\n}\n\n)(self)`\n],\n  {type: 'application/javascript'}\n);\n\n\n\n\nvar workers = Array(100);\nvar timeouts = [];\n\nexport function fireWorker (animationId) {\n  var animData = JSON.stringify(animation[animationId]);\n  workers[animationId] = new Worker(URL.createObjectURL(lottiemateBlob));\n  workers[animationId].postMessage([1, animationId, animData]);\n\n  workers[animationId].onmessage = function(e) {\n    if (e.data[0] == 1) {\n      let i = e.data[1];\n      animation[i]._currentFrame = e.data[2];\n      let previousDate = e.data[3];\n      for (let j = 0; j < animation[i]._scene[animation[i]._currentFrame]._transform.length; j++) {\n        if (animation[i]._scene[animation[i]._currentFrame]._transform[j].fillSet) {\n          if (animation[i]._scene[animation[i]._currentFrame]._transform[j].isGradient) {\n            const stops = getAnimationComponent(i, animation[i]._scene[animation[i]._currentFrame]._transform[j].fillObj).querySelectorAll(\"stop\");\n            for (var m = 0; m < stops.length; m++) {\n              stops[m].setAttribute(\"offset\", animation[i]._scene[animation[i]._currentFrame]._transform[j].offsets[m]);\n              stops[m].setAttribute(\"style\", animation[i]._scene[animation[i]._currentFrame]._transform[j].styles[m]);\n            }\n          } else {\n    \n          }\n        } else {\n          if (animation[i]._scene[animation[i]._currentFrame]._transform[j].refObjSet) {\n            const currentObj = getAnimationComponent(i, animation[i]._scene[animation[i]._currentFrame]._transform[j].refObj);\n            const currentObjOther = getAnimationComponent(i, \n              animation[i]._scene[animation[i]._currentFrame]._transform[j].refObjOther,\n            );\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].isTween) {\n              currentObj.setAttribute('d', animation[i]._scene[animation[i]._currentFrame]._transform[j].dataString);\n            }\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].combined.length > 0) {\n              currentObj.setAttribute(\n                'transform',\n                animation[i]._scene[animation[i]._currentFrame]._transform[j].combined,\n              );\n            }\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].fillSet) {\n              currentObj.setAttribute(\n                'fill',\n                animation[i]._scene[animation[i]._currentFrame]._transform[j].fill,\n              );\n            }\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].strokeWidth > -1) {\n              currentObj.setAttribute(\n                'stroke-width',\n                animation[i]._scene[animation[i]._currentFrame]._transform[j].strokeWidth,\n              );\n            }\n            currentObjOther.setAttribute(\n              'opacity',\n              animation[i]._scene[animation[i]._currentFrame]._transform[j].opacity,\n            );\n          }\n          if (animation[i]._scene[animation[i]._currentFrame]._transform[j].hide && animation[i]._scene[animation[i]._currentFrame]._transform[j].stageEvent) {\n            getAnimationComponent(i, \n              animation[i]._scene[animation[i]._currentFrame]._transform[j].stageObj,\n            ).style.display = 'none';\n          }\n          if (animation[i]._scene[animation[i]._currentFrame]._transform[j].show && animation[i]._scene[animation[i]._currentFrame]._transform[j].stageEvent) {\n            getAnimationComponent(i, \n              animation[i]._scene[animation[i]._currentFrame]._transform[j].stageObj,\n            ).style.display = 'block';\n          }\n        }\n      }\n\n      const currentDate = Date.now();\n      let deltaTime = animation[i]._frameTime - (currentDate - previousDate);\n      \n      clearTimeout(timeouts[i]);\n      /*if (deltaTime <= 0) {\n        animation[animationId]._currentFrame++;\n\n        if (animation[animationId]._currentFrame >= animation[animationId]._totalFrames) {\n          if (! animation[animationId]._loop) {\n            animation[animationId]._currentFrame--;\n          } else {\n            animation[animationId]._currentFrame = 0;\n          }\n        }\n\n        timeouts[i] = setTimeout(() => {workers[animationId].postMessage([2, animation[animationId]._currentFrame])}, (animation[i]._frameTime + (-1 * deltaTime)));\n      } else {*/\n        timeouts[i] = setTimeout(() => {workers[animationId].postMessage([2, animation[animationId]._currentFrame])}, deltaTime);\n      //}\n    }\n  }\n}\n\n\n\n/// ////////// BUILD SCENE GRAPH\nlet lastRefObj;\n\nexport function getEmptyTransform() {\n  const transforms = {};\n  transforms.translateX = 0;\n  transforms.translateY = 0;\n  transforms.scaleFactorX = 0;\n  transforms.scaleFactorY = 0;\n  transforms.scaleFactorZ = 0;\n  transforms.rotateAngle = 0;\n  transforms.opacityFactor = 0;\n  transforms.anchorX = 0;\n  transforms.anchorY = 0;\n  transforms.paddingX = 0;\n  transforms.paddingY = 0;\n  transforms.paddingAnchorX = 0;\n  transforms.paddingAnchorY = 0;\n  transforms.paddingAnchorZ = 0;\n  transforms.isTranslate = false;\n\n  transforms.fillSet = false;\n\n  transforms.dataString = '';\n  transforms.isTween = false;\n  transforms.tweenShape = '';\n  transforms.refObj = '';\n  transforms.combined = '';\n  transforms.refObjOther = '';\n  transforms.refObjSet = false;\n\n  transforms.hide = false;\n  transforms.show = false;\n  transforms.stageEvent = false;\n\n  transforms.translate = '';\n  transforms.rotate = '';\n  transforms.scale = '';\n  transforms.scaled = false;\n  transforms.opacity = 1;\n  transforms.opacitySet = false;\n  transforms.inPoint = -1;\n  transforms.outPoint = -1;\n  transforms.isLayer = true;\n  transforms.stageObj = '';\n  transforms.isSet = false;\n\n  transforms.deltaX = 0;\n  transforms.deltaY = 0;\n\n  // related to strokes\n  transforms.strokeWidth = -1;\n\n  transforms.matrix = {'p':[], 's':[], 'r':[], 'rx':[], 'ry':[], 'rz':[], 'sh':[], 'sk':[], 'sa':[]};\n\n  return transforms;\n}\n\nexport function getEmptyFillTransform() {\n  const transforms = {};\n  transforms.fillSet = true;\n  transforms.isGradient = false;\n  transforms.fill = '';\n  transforms.gradientFill = [];\n  transforms.fillObj = '';\n  return transforms;\n}\n\nexport function getEmptyStageTransform() {\n  const transforms = {};\n  transforms.fillSet = false;\n  transforms.stageObj = '';\n  transforms.refObj = '';\n  transforms.hide = false;\n  transforms.show = false;\n  return transforms;\n}\n\nexport function findExistingTransform(transforms, animationId, frame, forFill, getIndex) {\n  let found = 0;\n  if (animation[animationId]._scene[parseInt(frame)] === undefined) {\n    //console.log(frame);\n    if (getIndex) {\n      return -1;\n    }\n    return transforms;\n  }\n  for (let i = 0; i < animation[animationId]._scene[parseInt(frame)]._transform.length; i++) {\n    if (forFill) {\n      if (animation[animationId]._scene[parseInt(frame)]._transform[i].fillObj == transforms.fillObj) {\n        if (getIndex) {\n          return i;\n        }\n        found = 1;\n        break;\n      }\n    } else {\n      if (animation[animationId]._scene[parseInt(frame)]._transform[i].refObj == transforms.refObj) {\n        if (getIndex) {\n          return i;\n        }\n        transforms = animation[animationId]._scene[parseInt(frame)]._transform[i];\n        found = 1;\n        break;\n      }\n    }\n  }\n  return transforms;\n}\n\nexport function updateTransform(transforms, animationId, frame, forFill) {\n  let existing = findExistingTransform(transforms, animationId, frame, forFill, true);\n\n  if (existing == -1) {\n    animation[animationId]._scene[parseInt(frame)]._transform.push(transforms);\n  } else {\n    animation[animationId]._scene[parseInt(frame)]._transform[existing] = transforms;\n  }\n}\n\nexport function stageSequence(animationId, stageObj, inPoint, outPoint) {\n  if (outPoint > animation[animationId]._totalFrames) {\n    outPoint = animation[animationId]._totalFrames;\n  }\n  if (inPoint < 0) {\n    inPoint = 0;\n  }\n  if (inPoint > animation[animationId]._totalFrames) {\n    inPoint = animation[animationId]._totalFrames;\n  }\n  let transforms = getEmptyStageTransform();\n  let found = 0;\n  if (inPoint > -1) {\n    frame = inPoint;\n    for (var i = 0; i < animation[animationId]._scene[parseInt(frame)]._transform.length; i++) {\n      if (animation[animationId]._scene[parseInt(frame)]._transform[i].stageObj == stageObj) {\n        transforms = animation[animationId]._scene[parseInt(frame)]._transform[i];\n        found = 1;\n        break;\n      }\n    }\n    transforms.stageObj = stageObj;\n    transforms.show = true;\n    transforms.stageEvent = true;\n    animation[animationId]._scene[parseInt(frame)]._transform.push(transforms);\n  }\n\n  transforms = getEmptyStageTransform();\n  found = 0;\n  if (outPoint > -1) {\n    frame = outPoint;\n    for (var i = 0; i < animation[animationId]._scene[parseInt(frame)]._transform.length; i++) {\n      if (animation[animationId]._scene[parseInt(frame)]._transform[i].stageObj == stageObj) {\n        transforms = animation[animationId]._scene[parseInt(frame)]._transform[i];\n        found = 1;\n        break;\n      }\n    }\n    transforms.stageObj = stageObj;\n    transforms.hide = true;\n    transforms.stageEvent = true;\n    animation[animationId]._scene[parseInt(frame)]._transform.push(transforms);\n  } else {\n    frame = 0;\n  }\n\n  transforms = getEmptyStageTransform();\n  found = 0;\n  if (outPoint > -1 && inPoint > 0) {\n    frame = 0;\n    for (var i = 0; i < animation[animationId]._scene[parseInt(frame)]._transform.length; i++) {\n      if (animation[animationId]._scene[parseInt(frame)]._transform[i].stageObj == stageObj) {\n        transforms = animation[animationId]._scene[parseInt(frame)]._transform[i];\n        found = 1;\n        break;\n      }\n    }\n    transforms.stageObj = stageObj;\n    transforms.hide = true;\n    transforms.stageEvent = true;\n    animation[animationId]._scene[parseInt(frame)]._transform.push(transforms);\n  }\n\n  let lastState = 0;\n  if (frame > 0) {\n    for (let j = 0; j <= animation[animationId]._totalFrames; j++) {\n      for (var i = 0; i < animation[animationId]._scene[j]._transform.length; i++) {\n        if (animation[animationId]._scene[j]._transform[i].stageObj == stageObj) {\n          if (animation[animationId]._scene[j]._transform[i].show) {\n            lastState = 1;\n          }\n          if (animation[animationId]._scene[j]._transform[i].hide) {\n            lastState = 0;\n          }\n          if (lastState == 1) {\n            animation[animationId]._scene[j]._transform[i].show = true;\n          } else {\n            animation[animationId]._scene[j]._transform[i].hide = true;\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction addToMatrix(_p, _n) {\n  let _r = [];\n  let allZero = true;\n\n  for (let i = 1; i < 12; i++) {\n    if (i == 0 || i == 5 || 10) {\n      if (_n[i] !== 1) {\n        allZero = false;\n      }\n    } else {\n      if (_n[i] !== 0) {\n        allZero = false;\n      }\n    }\n  }\n\n  if (allZero) {\n    _p[12] = _p[12] * _n[0] + _p[15] * _n[12];\n    _p[13] = _p[13] * _n[5] + _p[15] * _n[13];\n    _p[14] = _p[14] * _n[10] + _p[15] * _n[14];\n    _p[15] *= _n[15];\n    return _p;\n  }\n\n  let _tn = [];\n  _tn.push(_p);\n\n  _p[0] = _tn[0] * _n[0]  +  _tn[1] * _n[4]  +  _tn[2] * _n[8]  +  _tn[3] * _n[12];\n  _p[1] = _tn[0] * _n[1]  +  _tn[1] * _n[5]  +  _tn[2] * _n[9]  +  _tn[3] * _n[13];\n  _p[2] = _tn[0] * _n[2]  +  _tn[1] * _n[6]  +  _tn[2] * _n[10]  +  _tn[3] * _n[14];\n  _p[3] = _tn[0] * _n[3]  +  _tn[1] * _n[7]  +  _tn[2] * _n[11]  +  _tn[3] * _n[15];\n\n  _p[4] = _tn[4] * _n[0]  +  _tn[5] * _n[4]  +  _tn[6] * _n[8]  +  _tn[7] * _n[12];\n  _p[5] = _tn[4] * _n[1]  +  _tn[5] * _n[5]  +  _tn[6] * _n[9]  +  _tn[7] * _n[13];\n  _p[6] = _tn[4] * _n[2]  +  _tn[5] * _n[6]  +  _tn[6] * _n[10]  +  _tn[7] * _n[14];\n  _p[7] = _tn[4] * _n[3]  +  _tn[5] * _n[7]  +  _tn[6] * _n[11]  +  _tn[7] * _n[15];\n\n  _p[8] = _tn[8] * _n[0]  +  _tn[9] * _n[4]  +  _tn[10] * _n[8]  +  _tn[11] * _n[12];\n  _p[9] = _tn[8] * _n[1]  +  _tn[9] * _n[5]  +  _tn[10] * _n[9]  +  _tn[11] * _n[13];\n  _p[10] = _tn[8] * _n[2]  +  _tn[9] * _n[6]  +  _tn[10] * _n[10]  +  _tn[11] * _n[14];\n  _p[11] = _tn[8] * _n[3]  +  _tn[9] * _n[7]  +  _tn[10] * _n[11]  +  _tn[11] * _n[15];\n\n  _p[12] = _tn[12] * _n[0]  +  _tn[13] * _n[4]  +  _tn[14] * _n[8]  +  _tn[15] * _n[12];\n  _p[13] = _tn[12] * _n[1]  +  _tn[13] * _n[5]  +  _tn[14] * _n[9]  +  _tn[15] * _n[13];\n  _p[14] = _tn[12] * _n[2]  +  _tn[13] * _n[6]  +  _tn[14] * _n[10]  +  _tn[15] * _n[14];\n  _p[15] = _tn[12] * _n[3]  +  _tn[13] * _n[7]  +  _tn[14] * _n[11]  +  _tn[15] * _n[15];\n\n  return _p;\n}\n\nexport function addGroupPositionTransform(\n  frame,\n  position,\n  isLayer,\n  animationId,\n  refKey,\n  addTransformation,\n  objectId,\n  depth,\n  preTranslate,\n  isStart,\n  isEnd\n) {\n  if (frame < 0 || addTransformation < 1) {\n    return;\n  }\n  if (frame > animation[animationId]._totalFrames) {\n    return;\n  }\n  let transforms = getEmptyTransform();\n\n  let posX = 0;\n\n  if (isLayer) {\n    if (objectId.hasOwnProperty('_currentLayerGroup')) {\n      //if (objectId._currentLayerGroup._layer > 0) {\n      //console.log('inpoint');\n      if (objectId._currentLayerGroup._inPoint >= 0) {\n        //console.log('inpoint');\n        transforms.inPoint = parseInt(objectId._currentLayerGroup._inPoint);\n      }\n      if (objectId._currentLayerGroup._outPoint > 0) {\n        transforms.outPoint = parseInt(objectId._currentLayerGroup._outPoint);\n      }\n    } else {\n      if (objectId.hasOwnProperty('_currentLayer')) {\n        if (objectId._currentLayer._inPoint >= 0) {\n          //console.log('inpoint');\n          transforms.inPoint = parseInt(objectId._currentLayer._inPoint);\n        }\n        if (objectId._currentLayer._outPoint > 0) {\n          transforms.outPoint = parseInt(objectId._currentLayer._outPoint);\n        }\n      }\n    }\n  } else {\n  }\n\n  //if (transforms.inPoint < 0 && transforms.outPoint < 0) {\n  //  if (frame != transforms.inPoint && frame != transforms.outPoint) {\n      if (Array.isArray(position)) {\n        posX = position[0];\n        if (Number.isNaN(posX)) {\n          return;\n        }\n      } else {\n        posX = position;\n        if (Number.isNaN(posX)) {\n          posX = position[0];\n          if (Number.isNaN(posX)) {\n            return;\n          }\n        }\n      }\n  //  }\n  //}\n\n  if (isLayer) {\n    transforms.isLayer = true;\n    if (objectId.td > 0) {\n      transforms.refObj = `${animationId}_${depth}_layerGroup${objectId._layer}`;\n    } else {\n      transforms.refObj = `${animationId}_${depth}_layerTranslate${objectId._layer}`;\n    }\n    transforms.refObjOther = `${animationId}_${depth}_layerGroup${objectId._layer}`;\n  } else {\n    transforms.isLayer = false;\n    transforms.refObj = `${animationId}_group${animation[animationId]._currentShapeGroup}`;\n    transforms.refObjOther = `${animationId}_group${animation[animationId]._currentShapeGroup}`;\n  }\n\n  if (objectId.hasOwnProperty('_anchorX')) {\n    transforms.anchorX = objectId._anchorX;\n  }\n  \n  if (objectId.hasOwnProperty('_anchorY')) {\n    transforms.anchorY = objectId._anchorY;\n  }\n\n  transforms = findExistingTransform(transforms, animationId, frame);\n\n  if (animation[animationId]._instated.hasOwnProperty(transforms.refObj)) {\n  } else {\n    animation[animationId]._refObj.push(transforms.refObj);\n    animation[animationId]._objSize[transforms.refObj] = [];\n    animation[animationId]._objSize[transforms.refObj][0] = getAnimationComponent(animationId, transforms.refObj)\n      .getBoundingClientRect().width;\n    animation[animationId]._objSize[transforms.refObj][1] = getAnimationComponent(animationId, transforms.refObj)\n      .getBoundingClientRect().height;\n  }\n  const sizeObjFromTransform = animation[animationId]._objSize[transforms.refObj];\n  /*if (objectId._layer == 3) {\n    debug(() => [\n      'GroupPositionTransform: Layer 3',\n      [sizeObjFromTransform[0], sizeObjFromTransform[1]],\n      [transforms.anchorX, transforms.anchorY],\n    ]);\n  }*/\n  transforms.refObjSet = true;\n\n  let posY = 0;\n  let halfWidth = sizeObjFromTransform[0] / 2;\n  let halfHeight = sizeObjFromTransform[1] / 2;\n  let tempBoundingW;\n  let tempBoundingH;\n  transforms.paddingX = halfWidth;\n  transforms.paddingY = halfHeight;\n  if (refKey == 's' && posX != 100 && position[1] != 100) {  \n    transforms.scaleFactorX = posX;\n    tempBoundingW = sizeObjFromTransform[0];\n    tempBoundingH = sizeObjFromTransform[1];\n    let currentScaleX;\n    let currentScaleY;\n    let currentScaleZ = 0;\n    if (position.length > 1) {\n      transforms.scaleFactorY = position[1];\n      currentScaleX = transforms.scaleFactorX / 100;\n      currentScaleY = transforms.scaleFactorY / 100;\n    } else {\n      currentScaleX = transforms.scaleFactorX / 100;\n      currentScaleY = transforms.scaleFactorX / 100;\n    }\n    if (position.length > 2) {\n      transforms.scaleFactorZ = position[2];\n      currentScaleZ = transforms.scaleFactorZ / 100;\n    } else {\n      currentScaleZ = transforms.scaleFactorX / 100;\n    }\n\n    transforms.scale = `scale(${currentScaleX},${currentScaleY}) `;\n    //transforms.paddingX = (transforms.anchorX - tempBoundingW) * currentScaleX + tempBoundingW * currentScaleX;\n    //transforms.paddingY = (transforms.anchorY - tempBoundingH) * currentScaleY + tempBoundingH * currentScaleY;\n    \n    transforms.deltaX = (sizeObjFromTransform[0] * currentScaleX) - sizeObjFromTransform[0];\n    transforms.deltaY = (sizeObjFromTransform[1] * currentScaleY) - sizeObjFromTransform[1];\n\n    transforms.scaled = true;\n\n    //if (transforms.anchorX != 0) {\n      /*if ((transforms.translateX - transforms.anchorX) <= (transforms.translateX - (transforms.paddingX * 2))) {\n        transforms.paddingAnchorX = transforms.deltaX / 2;\n      } else if ((transforms.translateX - transforms.anchorX) >= (transforms.translateX + (transforms.paddingX * 2))) {\n        transforms.paddingAnchorX = (transforms.deltaX / 2) * -1;\n      } else {*/\n        //transforms.paddingAnchorX = (transforms.deltaX / 2) * ((((transforms.translateX - transforms.anchorX) - (transforms.translateX - (transforms.paddingX))) / (transforms.translateX + (transforms.paddingX)) - (transforms.translateX - (transforms.paddingX))));\n        transforms.paddingAnchorX = \n          (transforms.deltaX * \n          (\n            (                                   \n              (\n                transforms.translateX - (transforms.translateX - transforms.anchorX)\n              )\n              / \n              (\n                transforms.paddingX * 2\n              )\n            )\n          ));\n          \n      //}\n    /*} else {\n      if (transforms.deltaX > 0 || transforms.deltaX < 0) {\n        transforms.paddingAnchorX = transforms.deltaX / 2 * -1;\n      } else {\n        transforms.paddingAnchorX = transforms.paddingX;\n      }\n\n    }*/\n\n    //if (transforms.anchorY != 0) {\n      /*if ((transforms.translateY - transforms.anchorY) <= (transforms.translateY - (transforms.paddingY * 2))) {\n        transforms.paddingAnchorY = transforms.deltaY / 2;\n      } else if ((transforms.translateY - transforms.anchorY) >= (transforms.translateY + (transforms.paddingY * 2))) {\n        transforms.paddingAnchorY = (transforms.deltaY / 2) * -1;\n      } else {*/\n        transforms.paddingAnchorY = \n          (transforms.deltaY * \n          (\n            (                                   \n              (\n                transforms.translateY - (transforms.translateY - transforms.anchorY)\n              )\n              / \n              (\n                transforms.paddingY * 2\n              )\n            )\n          ));\n      //}\n    /*} else {\n      if (transforms.deltaY > 0 || transforms.deltaY < 0) {\n        transforms.paddingAnchorY = transforms.deltaY / 2 * -1;\n      } else {\n        transforms.paddingAnchorY = transforms.paddingY;\n      }\n    }*/\n\n\n    transforms.matrix.s.push([transforms.scaleFactorX, 0, 0, 0, 0, transforms.scaleFactorY, 0, 0, 0, 0, transforms.scaleFactorZ, 0, 0, 0, 0, 1]);\n\n  }\n\n\n  if (refKey == 'r') {\n    if (posX < 0) {\n      transforms.rotateAngle = (posX);\n    } else {\n      transforms.rotateAngle = posX;\n    }\n    if (objectId.hasOwnProperty('_anchorX') && objectId.hasOwnProperty('_anchorY')) {\n      transforms.rotate = `rotate(${transforms.rotateAngle},${objectId._anchorX},${objectId._anchorY}) `;\n    } else {\n      transforms.rotate = `rotate(${transforms.rotateAngle},${\n        sizeObjFromTransform[0] / 2\n      },${sizeObjFromTransform[1] / 2}) `;\n    }\n    debug(() => [\"rot\", transforms.rotateAngle, frame]);\n    var cosVal = Math.cos(transforms.rotateAngle);\n    var sinVal = Math.sin(transforms.rotateAngle);\n    transforms.matrix.r.push([cosVal, -sinVal, 0, 0, sinVal, cosVal, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n  }\n\n  if (refKey == 'rx') {\n    if (posX < 0) {\n      transforms.rotateAngle = (posX);\n    } else {\n      transforms.rotateAngle = posX;\n    }\n    var cosVal = Math.cos(transforms.rotateAngle);\n    var sinVal = Math.sin(transforms.rotateAngle);\n    transforms.matrix.r.push([1, 0, 0, 0, 0, cosVal, -sinVal, 0, 0, sinVal, cosVal, 0, 0, 0, 0, 1]);\n  }\n\n  if (refKey == 'ry') {\n    if (posX < 0) {\n      transforms.rotateAngle = (posX);\n    } else {\n      transforms.rotateAngle = posX;\n    }\n    var cosVal = Math.cos(transforms.rotateAngle);\n    var sinVal = Math.sin(transforms.rotateAngle);\n    transforms.matrix.r.push([cosVal, 0, sinVal, 0, 0, 1, 0, 0, -sinVal, 0, cosVal, 0, 0, 0, 0, 1]);\n  }\n\n  if (refKey == 'rz') {\n    if (posX < 0) {\n      transforms.rotateAngle = (posX);\n    } else {\n      transforms.rotateAngle = posX;\n    }\n    var cosVal = Math.cos(transforms.rotateAngle);\n    var sinVal = Math.sin(transforms.rotateAngle);\n    transforms.matrix.r.push([cosVal, -sinVal, 0, 0, sinVal, cosVal, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n  }\n\n  if (refKey == 'p') {\n    posY = position[1];\n    let posZ = 0;\n    if (position.length > 2) {\n      posZ = position[2];\n    }\n    //if (objectId.hasOwnProperty('_anchorX')) {\n      transforms.translateX = posX;\n    //}\n    //if (objectId.hasOwnProperty('_anchorY')) {\n      transforms.translateY = posY;\n    //}\n    transforms.isTranslate = true;\n    transforms.matrix.p.push([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, posX, posY, posZ, 1]);\n  }\n\n  if (transforms.isTranslate) {\n    //if (objectId.hasOwnProperty('_anchorX')) {\n      transforms.translate = `translate(${(transforms.translateX - transforms.anchorX) - transforms.paddingAnchorX},${\n        (transforms.translateY - transforms.anchorY) - transforms.paddingAnchorY\n      }) `;\n      //debug(() => [\"tran1\", transforms.refObj, sizeObjFromTransform[0], sizeObjFromTransform[1], transforms.paddingAnchorX, transforms.paddingAnchorY]);\n      /*} else {\n      transforms.translate = `translate(${transforms.translateX - (transforms.paddingAnchorX + transforms.paddingX)},${\n        transforms.translateY - (transforms.paddingAnchorY + transforms.paddingY)\n      }) `;\n    }*/\n    //if (!preTranslate) {\n    //}\n  } else {\n    if (transforms.scaled) {\n      //if (objectId.hasOwnProperty('_anchorX')) {\n        transforms.translate = `translate(${(transforms.paddingAnchorX * -1)},${\n          (transforms.paddingAnchorY * -1)\n        }) `;\n        debug(() => [\"tran2\", transforms.refObj, sizeObjFromTransform[0], sizeObjFromTransform[1], transforms.paddingAnchorX, transforms.paddingAnchorY]);\n        /*} else {\n        transforms.translate = `translate(${transforms.translateX - (transforms.paddingAnchorX + transforms.paddingX)},${\n          transforms.translateY - (transforms.paddingAnchorY + transforms.paddingY)\n        }) `;\n      }*/\n      //if (!preTranslate) {\n      //}\n    }\n  }\n\n  if (transforms.scaled) {\n    //if (objectId.hasOwnProperty('_anchorX')) {\n      /*\n      transforms.translate = `translate(${(transforms.translateX - transforms.anchorX) - transforms.paddingAnchorX},${\n        (transforms.translateY - transforms.anchorY) - transforms.paddingAnchorY\n      }) `;\n      debug(() => [\"tran2\", transforms.refObj, transforms.paddingX, transforms.paddingY, transforms.paddingAnchorX, transforms.paddingAnchorY]);\n      */\n      /*} else {\n      transforms.translate = `translate(${transforms.translateX - (transforms.paddingAnchorX + transforms.paddingX)},${\n        transforms.translateY - (transforms.paddingAnchorY + transforms.paddingY)\n      }) `;\n    }*/\n    /*(transforms.translate = `translate(${transforms.translateX - transforms.paddingAnchorX},${\n      transforms.translateY - transforms.paddingAnchorY\n    }) `;*/\n\n    /*if (objectId.hasOwnProperty('_anchorX')) {\n      transforms.translate = `translate(${(transforms.translateX) - transforms.anchorX},${\n        (transforms.translateY) - transforms.anchorY\n      }) `;\n    } else {\n      transforms.translate = `translate(${transforms.translateX - (transforms.paddingAnchorX + transforms.paddingX)},${\n        transforms.translateY - (transforms.paddingAnchorY + transforms.paddingY)\n      }) `;\n    }*/\n    //transforms.translate = `translate(${transforms.translateX - transforms.paddingAnchorX},${transforms.translateY - transforms.paddingAnchorY}) `;\n    //transforms.isTranslate = true;\n  }\n\n  if (refKey == 'o') {\n    transforms.opacityFactor = posX;\n    transforms.opacity = transforms.opacityFactor / 100;\n    transforms.opacitySet = true;\n  }\n\n  if (transforms.scaled) {\n    transforms.combined = transforms.translate + transforms.scale + transforms.rotate;\n  } else {\n    transforms.combined = transforms.translate + transforms.rotate;\n  }\n  transforms.isSet = true;\n  animation[animationId]._scene[parseInt(frame)]._transform.push(transforms);\n\n  // Add this transformation head to the root frame if no previous transformations for this refObj exists\n  /*if (frame > 0) {\n    let foundPrevious = -1;\n    for (let i = parseInt(frame) - 1; i >= 0; i--) {\n      for (let j = 0; j < animation[animationId]._scene[i]._transform.length; j++) {\n        if (animation[animationId]._scene[i]._transform[j].refObj == transforms.refObj) {\n          //if (animation[animationId]._scene[i]._transform.isTranslate) {\n            foundPrevious = i;\n            //debug(() => [\"prevframe\"]);\n            break;\n          //}\n        } else {\n          \n        }\n      }\n    }\n    if (foundPrevious < 0) {\n      //for (let i = parseInt(frame) - 1; i >= 0; i--) {\n        animation[animationId]._scene[0]._transform.push(transforms);\n        debug(() => [\"initframe\", transforms.refObj, animationId]);\n      //}\n    } else if (foundPrevious == 0) {\n      addGroupPositionTransform(\n        0,\n        position,\n        isLayer,\n        animationId,\n        refKey,\n        addTransformation,\n        objectId,\n        depth,\n        preTranslate,\n        isStart,\n        isEnd\n      );\n      debug(() => [\"altfirstframe\", transforms.refObj, animationId]);\n    }\n  }*/\n  if (isEnd) {\n    debug(() => [\"isEnd\", transforms.refObj, animationId]);\n    for (let i = parseInt(frame) + 1; i <= animation[animationId]._totalFrames; i++) {\n      addGroupPositionTransform(\n        i,\n        position,\n        isLayer,\n        animationId,\n        refKey,\n        addTransformation,\n        objectId,\n        depth,\n        preTranslate,\n        false,\n        false\n      );\n    }\n  }\n\n  if (isStart) {\n    debug(() => [\"isEnd\", transforms.refObj, animationId]);\n    for (let i = parseInt(frame) - 1; i >= 0; i--) {\n      addGroupPositionTransform(\n        i,\n        position,\n        isLayer,\n        animationId,\n        refKey,\n        addTransformation,\n        objectId,\n        depth,\n        preTranslate,\n        false,\n        false\n      );\n    }\n  }\n\n  lastRefObj = transforms.refObj;\n\n  if (animation[animationId]._instated.hasOwnProperty(transforms.refObj)) {\n  } else {\n    animation[animationId]._instated[transforms.refObj] = 1;\n    animation[animationId]._scene[0]._transform.push(transforms);\n  }\n}\n\n/// ////////// PREP JSON\n\nexport function extrapolateValueKeyframe(valueKeyframeObj) {\n  return valueKeyframeObj;\n}\n\nexport function extrapolateOffsetKeyframe(\n  offsetKeyframeObj,\n  refKey,\n  isLayer,\n  animationId,\n  addTransformation,\n  objectId,\n  depth,\n) {\n  let i = 0;\n  let objLength = offsetKeyframeObj[refKey].k.length;\n  let oldLength = objLength;\n  const emptyPos = { x: 0, y: 0 };\n  let p2;\n  let gotI;\n  let gotO;\n\n  let isEnd = false;\n  let isStart = false;\n\n\n  while (i < objLength - 1) {\n    gotI = true;\n    gotO = true;\n\n    if (i == 0) {\n      isStart = true;\n    } else {\n      isStart = false;\n    }\n\n    if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('_comp')) {\n    } else {\n      if (addTransformation > -1) {\n        if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('s')) {\n          addGroupPositionTransform(\n            offsetKeyframeObj[refKey].k[i].t,\n            offsetKeyframeObj[refKey].k[i].s,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n            '',\n            isStart,\n            isEnd\n          );\n        } else {\n          if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('e')) {\n            if (i == objLength - 2) {\n              isEnd = true;\n            }\n            addGroupPositionTransform(\n              offsetKeyframeObj[refKey].k[i].t,\n              offsetKeyframeObj[refKey].k[i].e,\n              isLayer,\n              animationId,\n              refKey,\n              addTransformation,\n              objectId,\n              depth,\n              '',\n              isStart,\n              isEnd\n            );\n          }  \n        }\n      }\n      /*if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('e')) {\n        p2 = offsetKeyframeObj[refKey].k[i].e;\n      } else if (offsetKeyframeObj[refKey].k[i + 1].hasOwnProperty('s')) {\n        p2 = offsetKeyframeObj[refKey].k[i + 1].s;\n      }*/\n      p2 = offsetKeyframeObj[refKey].k[i + 1].s;\n\n      if (offsetKeyframeObj[refKey].k[i + 1].hasOwnProperty('i') && refKey != 'ks' && addTransformation > -1) {\n        if (offsetKeyframeObj[refKey].k[i + 1].i.x < 1) offsetKeyframeObj[refKey].k[i + 1].i.x = 0.0;\n        if (offsetKeyframeObj[refKey].k[i + 1].i.y < 1) offsetKeyframeObj[refKey].k[i + 1].i.y = 0.0;\n      }\n      if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('o') && refKey != 'ks' && addTransformation > -1) {\n        if (offsetKeyframeObj[refKey].k[i].o.x < 1) offsetKeyframeObj[refKey].k[i].o.x = 0.0;\n        if (offsetKeyframeObj[refKey].k[i].o.y < 1) offsetKeyframeObj[refKey].k[i].o.y = 0.0;\n      }\n\n      var returnedKeyframeObj;\n      if (\n        offsetKeyframeObj[refKey].k[i].hasOwnProperty('e') &&\n        offsetKeyframeObj[refKey].k[i].hasOwnProperty('s')\n      ) {\n        returnedKeyframeObj = bezierCurve(\n          offsetKeyframeObj[refKey].k[i].s,\n          offsetKeyframeObj[refKey].k[i].o,\n          offsetKeyframeObj[refKey].k[i].i,\n          offsetKeyframeObj[refKey].k[i].e,\n          offsetKeyframeObj[refKey].k[i].t,\n          offsetKeyframeObj[refKey].k[i + 1].t,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n          isEnd\n        );\n      } else if (\n        offsetKeyframeObj[refKey].k[i + 1].hasOwnProperty('i') &&\n        offsetKeyframeObj[refKey].k[i].hasOwnProperty('o') &&\n        gotI\n      ) {\n        returnedKeyframeObj = bezierCurve(\n          offsetKeyframeObj[refKey].k[i].s,\n          offsetKeyframeObj[refKey].k[i].o,\n          offsetKeyframeObj[refKey].k[i + 1].i,\n          p2,\n          offsetKeyframeObj[refKey].k[i].t,\n          offsetKeyframeObj[refKey].k[i + 1].t,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n          isEnd\n        );\n      } else if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('o') && gotO) {\n        returnedKeyframeObj = bezierCurve(\n          offsetKeyframeObj[refKey].k[i].s,\n          offsetKeyframeObj[refKey].k[i].o,\n          emptyPos,\n          p2,\n          offsetKeyframeObj[refKey].k[i].t,\n          offsetKeyframeObj[refKey].k[i + 1].t,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n          isEnd\n        );\n      } else {\n        returnedKeyframeObj = bezierCurve(\n          offsetKeyframeObj[refKey].k[i].s,\n          emptyPos,\n          emptyPos,\n          p2,\n          offsetKeyframeObj[refKey].k[i].t,\n          offsetKeyframeObj[refKey].k[i + 1].t,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n          isEnd\n        );\n      }\n      for (let s = returnedKeyframeObj.length - 1; s >= 0; s--) {\n        offsetKeyframeObj[refKey].k.splice(i + 1, 0, returnedKeyframeObj[s]);\n      }\n\n      objLength = offsetKeyframeObj[refKey].k.length;\n      i += objLength - oldLength;\n      oldLength = objLength;\n    }\n    i += 1;\n  }\n\n  i = offsetKeyframeObj[refKey].k.length - 1;\n\n  if (addTransformation > -1) {\n    if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('s')) {\n      addGroupPositionTransform(\n        offsetKeyframeObj[refKey].k[i].t,\n        offsetKeyframeObj[refKey].k[i].s,\n        isLayer,\n        animationId,\n        refKey,\n        addTransformation,\n        objectId,\n        depth,\n        '',\n        '',\n        true\n      );\n    } else {\n      if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('e')) {\n        addGroupPositionTransform(\n          offsetKeyframeObj[refKey].k[i].t,\n          offsetKeyframeObj[refKey].k[i].e,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n          '',\n          '',\n          true\n        );\n      }\n    }\n  }\n\n\n  return offsetKeyframeObj;\n}\n\nexport function extrapolatePathPosition(\n  currentObj,\n  parentObj,\n  refKey,\n  isLayer,\n  animationId,\n  addTransformation,\n  objectId,\n  depth,\n) {\n  currentObj[refKey].k = [];\n  if (currentObj[refKey].x.k.length > 1) {\n    currentObj[refKey] = extrapolateOffsetKeyframe(\n      currentObj[refKey],\n      'x',\n      isLayer,\n      animationId,\n      false,\n      objectId,\n      depth,\n    );\n  } else {\n  }\n  if (currentObj[refKey].y.k.length > 1) {\n    currentObj[refKey] = extrapolateOffsetKeyframe(\n      currentObj[refKey],\n      'y',\n      isLayer,\n      animationId,\n      false,\n      objectId,\n      depth,\n    );\n  } else {\n  }\n\n  if (!Array.isArray(currentObj[refKey].x.k)) {\n    for (var i = 0; i < currentObj[refKey].y.k.length; i++) {\n      if (currentObj[refKey].y.k[i].hasOwnProperty('s')) {\n        currentObj[refKey].k.push({\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [currentObj[refKey].x.k, currentObj[refKey].y.k[i].s[0], 0],\n          t: currentObj[refKey].y.k[i].t,\n        });\n      }\n    }\n\n    /*for (var i = 0; i < currentObj[refKey].k.length; i++) {\n      if (currentObj[refKey].k[i].hasOwnProperty('s')) {\n        addGroupPositionTransform(\n          currentObj[refKey].k[i].t,\n          currentObj[refKey].k[i].s,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else {\n        if (currentObj[refKey].k[i].hasOwnProperty('e')) {\n          addGroupPositionTransform(\n            currentObj[refKey].k[i].t,\n            currentObj[refKey].k[i].e,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        }\n      }\n    }\n\n    return currentObj;*/\n  }\n\n  if (!currentObj[refKey].y.k.isArray) {\n    for (var i = 0; i < currentObj[refKey].x.k.length; i++) {\n      if (currentObj[refKey].x.k[i].hasOwnProperty('s')) {\n        currentObj[refKey].k.push({\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [currentObj[refKey].x.k[i].s[0], currentObj[refKey].y.k, 0],\n          t: currentObj[refKey].x.k[i].t,\n        });\n      }\n    }\n\n    /*for (var i = 0; i < currentObj[refKey].k.length; i++) {\n      if (currentObj[refKey].k[i].hasOwnProperty('s')) {\n        addGroupPositionTransform(\n          currentObj[refKey].k[i].t,\n          currentObj[refKey].k[i].s,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else {\n        if (currentObj[refKey].k[i].hasOwnProperty('e')) {\n          addGroupPositionTransform(\n            currentObj[refKey].k[i].t,\n            currentObj[refKey].k[i].e,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        }\n      }\n    }\n\n    return currentObj;*/\n  }\n\n  if (currentObj[refKey].x.k.length > currentObj[refKey].y.k.length) {\n    for (var i = 0; i < currentObj[refKey].x.k.length; i++) {\n      currentObj[refKey].k.push({\n        i: [0, 0, 0],\n        o: [0, 0, 0],\n        s: [currentObj[refKey].x.k[i].s[0], 0, 0],\n        t: currentObj[refKey].x.k[i].t,\n      });\n    }\n    for (var i = 0; i < currentObj[refKey].y.k.length; i++) {\n      if (currentObj[refKey].k[0].t > currentObj[refKey].y.k[i].t) {\n        currentObj[refKey].k.splice(i, 0, {\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [0, currentObj[refKey].y.k[i].s[0], 0],\n          t: currentObj[refKey].y.k[i].t,\n        });\n      } else if (currentObj[refKey].k[0].t < currentObj[refKey].y.k[i].t) {\n        currentObj[refKey].k.push({\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [0, currentObj[refKey].y.k[i].s[0], 0],\n          t: currentObj[refKey].y.k[i].t,\n        });\n      } else if (currentObj[refKey].k[0].t == currentObj[refKey].y.k[i].t) {\n        currentObj[refKey].k.s[1] = currentObj[refKey].y.k[i].s[0];\n      }\n    }\n\n    /*for (var i = 0; i < currentObj[refKey].k.length; i++) {\n      if (currentObj[refKey].k[i].hasOwnProperty('s')) {\n        addGroupPositionTransform(\n          currentObj[refKey].k[i].t,\n          currentObj[refKey].k[i].s,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n        );\n      } else {\n        if (currentObj[refKey].k[i].hasOwnProperty('e')) {\n          addGroupPositionTransform(\n            currentObj[refKey].k[i].t,\n            currentObj[refKey].k[i].e,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        }\n      }\n    }\n\n    return currentObj;*/\n  }\n\n  if (currentObj[refKey].x.k.length < currentObj[refKey].y.k.length) {\n    for (var i = 0; i < currentObj[refKey].y.k.length; i++) {\n      currentObj[refKey].k.push({\n        i: [0, 0, 0],\n        o: [0, 0, 0],\n        s: [0, currentObj[refKey].y.k[i].s[0], 0],\n        t: currentObj[refKey].y.k[i].t,\n      });\n    }\n    for (var i = 0; i < currentObj[refKey].x.k.length; i++) {\n      if (currentObj[refKey].k[0].t > currentObj[refKey].x.k[i].t) {\n        currentObj[refKey].k.splice(i, 0, {\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [currentObj[refKey].x.k[i].s[0], 0, 0],\n          t: currentObj[refKey].x.k[i].t,\n        });\n      } else if (currentObj[refKey].k[0].t < currentObj[refKey].x.k[i].t) {\n        currentObj[refKey].k.push({\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [currentObj[refKey].x.k[i].s[0], 0, 0],\n          t: currentObj[refKey].x.k[i].t,\n        });\n      } else if (currentObj[refKey].k[0].t == currentObj[refKey].x.k[i].t) {\n        currentObj[refKey].k.s[0] = currentObj[refKey].x.k[i].s[0];\n      }\n    }\n\n    /*for (var i = 0; i < currentObj[refKey].k.length; i++) {\n      if (currentObj[refKey].k[i].hasOwnProperty('s')) {\n        addGroupPositionTransform(\n          currentObj[refKey].k[i].t,\n          currentObj[refKey].k[i].s,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else {\n        if (currentObj[refKey].k[i].hasOwnProperty('e')) {\n          addGroupPositionTransform(\n            currentObj[refKey].k[i].t,\n            currentObj[refKey].k[i].e,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        }\n      }\n    }\n\n    return currentObj;*/\n  }\n\n  let isEnd = false;\n  for (var i = 0; i < currentObj[refKey].k.length; i++) {\n    if (i == currentObj[refKey].k.length - 1) {\n      isEnd = true;\n    }\n    if (currentObj[refKey].k[i].hasOwnProperty('s')) {\n      addGroupPositionTransform(\n        currentObj[refKey].k[i].t,\n        currentObj[refKey].k[i].s,\n        isLayer,\n        animationId,\n        refKey,\n        addTransformation,\n        objectId,\n        depth,\n        '',\n        '',\n        isEnd\n      );\n    } else {\n      if (currentObj[refKey].k[i].hasOwnProperty('e')) {\n        addGroupPositionTransform(\n          currentObj[refKey].k[i].t,\n          currentObj[refKey].k[i].e,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n          '',\n          '',\n          isEnd\n        );\n      } else {\n        if (currentObj[refKey].k[i - 1].hasOwnProperty('e')) {\n          addGroupPositionTransform(\n            currentObj[refKey].k[i].t,\n            currentObj[refKey].k[i - 1].e,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n            '',\n            '',\n            isEnd\n          );\n        }\n      }\n    }\n  }\n\n  return currentObj;\n}\n\nexport function getPosition(currentObj, parentObj, refKey, isLayer, animationId, addTransformation, objectId, depth) {\n  if (currentObj.hasOwnProperty(refKey)) {\n    if (currentObj[refKey].hasOwnProperty('x') && currentObj[refKey].hasOwnProperty('y')) {\n      currentObj = extrapolatePathPosition(\n        currentObj,\n        parentObj,\n        refKey,\n        isLayer,\n        animationId,\n        addTransformation,\n        objectId,\n        depth,\n      );\n    } else {\n      if (currentObj[refKey].hasOwnProperty('k')) {\n        if (currentObj[refKey].k.length > 1) {\n          if (currentObj[refKey].k[0].hasOwnProperty('s')) {\n            currentObj = extrapolateOffsetKeyframe(\n              currentObj,\n              refKey,\n              isLayer,\n              animationId,\n              addTransformation,\n              objectId,\n              depth,\n            );\n          }\n        }\n      }\n    }\n  }\n  return currentObj;\n}\n\nexport function prepShapeEl(shapeObj, referrer, animationId, addTransformation, depth) {\n  const newShape = document.createElementNS(xmlns, 'ellipse');\n  newShape.setAttribute('cx', shapeObj.p.k[0]);\n  newShape.setAttribute('cy', shapeObj.p.k[1]);\n  newShape.setAttribute('rx', (shapeObj.s.k[0] / 2));\n  newShape.setAttribute('ry', (shapeObj.s.k[1] / 2));\n  newShape.setAttribute('fill', 'transparent');\n  newShape.setAttribute('id', `${animationId}_shape${shapeObj._shape}`);\n  newShape.classList.add('ellipse');\n  referrer.prepend(newShape);\n  shapeObj._isShape = true;\n  return shapeObj;\n}\n\nexport function prepShapeElKeyframe(shapeObj, referrer, animationId, addTransformation, depth) {\n  return shapeObj;\n}\n\nexport function prepShapeSr(shapeObj, referrer, animationId, addTransformation, depth) {\n  const newShape = document.createElementNS(xmlns, 'path');\n  newShape.setAttribute('d', dataString);\n  newShape.setAttribute('fill', 'transparent');\n  newShape.setAttribute('id', `${animationId}_shape${shapeObj._shape}`);\n  newShape.classList.add('star');\n  referrer.prepend(newShape);\n  shapeObj._isShape = true;\n  return shapeObj;\n}\n\nexport function prepShapeSrKeyframe(shapeObj, referrer, animationId, addTransformation, depth) {\n  return shapeObj;\n}\n\nexport function prepShapeRc(shapeObj, referrer, animationId, addTransformation, depth) {\n  const newShape = document.createElementNS(xmlns, 'rect');\n  newShape.setAttribute('fill', 'transparent');\n\n  newShape.setAttribute('width', shapeObj.s.k[0]);\n  newShape.setAttribute('height', shapeObj.s.k[1]);\n  if (shapeObj.p.k.length > 0) {\n    newShape.setAttribute('x', shapeObj.p.k[0] + shapeObj.s.k[0] / 2);\n    newShape.setAttribute('y', shapeObj.p.k[1] + shapeObj.s.k[1] / 2);\n  }\n  newShape.setAttribute('id', `${animationId}_shape${shapeObj._shape}`);\n  newShape.classList.add('rectangle');\n  referrer.prepend(newShape);\n  shapeObj._isShape = true;\n  return shapeObj;\n}\n\nexport function prepShapeRcKeyframe(shapeObj, referrer, animationId, addTransformation, depth) {\n  return shapeObj;\n}\n\nexport function prepDataString(sourceObject, closed) {\n  var dataString = `M${sourceObject.v[0][0]},${sourceObject.v[0][1]}`;\n  for (var i = 1; i < sourceObject.v.length; i++) {\n    dataString = `${dataString} C${\n      sourceObject.v[i - 1][0] + sourceObject.o[i - 1][0]\n    },${sourceObject.v[i - 1][1] + sourceObject.o[i - 1][1]} ${\n      sourceObject.v[i][0] + sourceObject.i[i][0]\n    },${sourceObject.v[i][1] + sourceObject.i[i][1]} ${\n      sourceObject.v[i][0]\n    },${sourceObject.v[i][1]}`;\n  }\n  if (closed) {\n    dataString = `${dataString} C${\n      sourceObject.v[sourceObject.v.length - 1][0] +\n      sourceObject.o[sourceObject.v.length - 1][0]\n    },${\n      sourceObject.v[sourceObject.v.length - 1][1] +\n      sourceObject.o[sourceObject.v.length - 1][1]\n    } ${sourceObject.v[0][0] + sourceObject.i[0][0]},${\n      sourceObject.v[0][1] + sourceObject.i[0][1]\n    } ${sourceObject.v[0][0]},${sourceObject.v[0][1]}`;\n    dataString += ' Z';\n  }\n\n  return dataString;\n}\n\n\nfunction setDataString(animationId, sourceObj, shapeId, pathClosed, frame, hideThis) {\n  let transforms = getEmptyTransform();\n  transforms.isLayer = false;\n  if (! hideThis) {\n    transforms.isTween = true;\n  }\n  transforms.refObj = `${animationId}_shape${shapeId}`;\n  transforms.refObjOther = `${animationId}_shape${shapeId}`;\n  transforms.refObjSet = true;\n  transforms = findExistingTransform(transforms, animationId, frame);\n  if (hideThis) {\n    transforms.hide = true;\n  } else {\n    transforms.dataString = prepDataString(sourceObj, pathClosed);\n  }\n\n  return transforms;\n}\n\nexport function prepShapeSh(shapeObj, referrer, animationId, addTransformation, depth) {\n  if (shapeObj.ks.k.hasOwnProperty('v')) {\n  } else {\n    if (shapeObj.ks.k[0].hasOwnProperty('s')) {\n      shapeObj = extrapolateOffsetKeyframe(shapeObj, 'ks', false, animationId, -1, shapeObj, depth);\n      var dataString = '';\n      let totalK;\n      if (shapeObj.ks.k[shapeObj.ks.k.length - 1].hasOwnProperty('s')) {\n        totalK = shapeObj.ks.k.length;\n      } else {\n        totalK = shapeObj.ks.k.length - 1;\n      }\n      for (let kCount = 0; kCount < totalK; kCount++) {\n        /*\n        let transforms = getEmptyTransform();\n        transforms.isLayer = false;\n        transforms.isTween = true;\n        transforms.refObj = `${animationId}_shape${shapeObj._shape}`;\n        transforms.refObjOther = `${animationId}_shape${shapeObj._shape}`;\n        transforms.refObjSet = true;\n        transforms = findExistingTransform(transforms, animationId, shapeObj.ks.k[kCount].t);\n        var dataString = `M${shapeObj.ks.k[kCount].s[0].v[0][0]},${shapeObj.ks.k[kCount].s[0].v[0][1]}`;\n        for (var i = 1; i < shapeObj.ks.k[kCount].s[0].v.length; i++) {\n          dataString = `${dataString} C${\n            shapeObj.ks.k[kCount].s[0].v[i - 1][0] + shapeObj.ks.k[kCount].s[0].o[i - 1][0]\n          },${shapeObj.ks.k[kCount].s[0].v[i - 1][1] + shapeObj.ks.k[kCount].s[0].o[i - 1][1]} ${\n            shapeObj.ks.k[kCount].s[0].v[i][0] + shapeObj.ks.k[kCount].s[0].i[i][0]\n          },${shapeObj.ks.k[kCount].s[0].v[i][1] + shapeObj.ks.k[kCount].s[0].i[i][1]} ${\n            shapeObj.ks.k[kCount].s[0].v[i][0]\n          },${shapeObj.ks.k[kCount].s[0].v[i][1]}`;\n        }\n        if (shapeObj.ks.k[0].s[0].c) {\n          dataString = `${dataString} C${\n            shapeObj.ks.k[kCount].s[0].v[shapeObj.ks.k[kCount].s[0].v.length - 1][0] +\n            shapeObj.ks.k[kCount].s[0].o[shapeObj.ks.k[kCount].s[0].v.length - 1][0]\n          },${\n            shapeObj.ks.k[kCount].s[0].v[shapeObj.ks.k[kCount].s[0].v.length - 1][1] +\n            shapeObj.ks.k[kCount].s[0].o[shapeObj.ks.k[kCount].s[0].v.length - 1][1]\n          } ${shapeObj.ks.k[kCount].s[0].v[0][0] + shapeObj.ks.k[kCount].s[0].i[0][0]},${\n            shapeObj.ks.k[kCount].s[0].v[0][1] + shapeObj.ks.k[kCount].s[0].i[0][1]\n          } ${shapeObj.ks.k[kCount].s[0].v[0][0]},${shapeObj.ks.k[kCount].s[0].v[0][1]}`;\n          dataString += ' Z';\n        }\n        */\n\n        let transforms = setDataString(animationId, shapeObj.ks.k[kCount].s[0], shapeObj._shape, shapeObj.ks.k[0].s[0].c, shapeObj.ks.k[kCount].t, false);\n        if (kCount == 0) {\n          var newShape = document.createElementNS(xmlns, 'path');\n          newShape.setAttribute('fill', 'transparent');\n          newShape.setAttribute('id', `${animationId}_shape${shapeObj._shape}`);\n          newShape.setAttribute('d', dataString);\n          newShape.classList.add('shape');\n          referrer.prepend(newShape);\n          shapeObj._isShape = true;\n        }\n\n        if (shapeObj.ks.k[kCount].t > animation[animationId]._totalFrames || shapeObj.ks.k[kCount].t < 0) {\n          break;\n        }\n        animation[animationId]._scene[parseInt(shapeObj.ks.k[kCount].t)]._transform.push(transforms);\n        if (kCount == 0) {\n          animation[animationId]._scene[1]._transform.push(transforms);\n        }\n      }\n    }\n    return shapeObj;\n  }\n\n  var dataString = `M${shapeObj.ks.k.v[0][0]},${shapeObj.ks.k.v[0][1]}`;\n  for (var i = 1; i < shapeObj.ks.k.v.length; i++) {\n    dataString = `${dataString} C${shapeObj.ks.k.v[i - 1][0] + shapeObj.ks.k.o[i - 1][0]},${\n      shapeObj.ks.k.v[i - 1][1] + shapeObj.ks.k.o[i - 1][1]\n    } ${shapeObj.ks.k.v[i][0] + shapeObj.ks.k.i[i][0]},${shapeObj.ks.k.v[i][1] + shapeObj.ks.k.i[i][1]} ${\n      shapeObj.ks.k.v[i][0]\n    },${shapeObj.ks.k.v[i][1]}`;\n  }\n  if (shapeObj.ks.k.c) {\n    dataString = `${dataString} C${\n      shapeObj.ks.k.v[shapeObj.ks.k.v.length - 1][0] + shapeObj.ks.k.o[shapeObj.ks.k.v.length - 1][0]\n    },${shapeObj.ks.k.v[shapeObj.ks.k.v.length - 1][1] + shapeObj.ks.k.o[shapeObj.ks.k.v.length - 1][1]} ${\n      shapeObj.ks.k.v[0][0] + shapeObj.ks.k.i[0][0]\n    },${shapeObj.ks.k.v[0][1] + shapeObj.ks.k.i[0][1]} ${shapeObj.ks.k.v[0][0]},${shapeObj.ks.k.v[0][1]}`;\n    dataString += ' Z';\n  }\n  shapeObj._data = dataString;\n  var newShape = document.createElementNS(xmlns, 'path');\n  newShape.setAttribute('fill', 'transparent');\n  newShape.setAttribute('id', `${animationId}_shape${shapeObj._shape}`);\n  newShape.setAttribute('d', dataString);\n  newShape.classList.add('shape');\n  referrer.prepend(newShape);\n  shapeObj._isShape = true;\n  return shapeObj;\n}\n\nexport function prepShapeShKeyframe(shapeObj, referrer, animationId, depth) {\n  return shapeObj;\n}\n\nexport function prepShape(shapeObj, referrer, animationId, isMasked, depth) {\n  if (shapeObj.ty == 'fl') {\n    if (shapeObj.c.k.hasOwnProperty('s')) {\n      shapeObj = getPosition(shapeObj, null, 'c', false, animationId, 3, shapeObj, depth);\n    }\n  }\n  if (shapeObj.ty == 'tr') {\n    if (shapeObj.hasOwnProperty('a')) {\n      if (shapeObj.a.k.hasOwnProperty('s')) {\n        shapeObj = getPosition(shapeObj, null, 'a', false, animationId, 2, shapeObj, depth);\n        if (shapeObj.a.k[0].t > 0) {\n          shapeObj._startI = true;\n        }\n      }\n      if (shapeObj.a.k.length > 1) {\n        shapeObj._anchorX = shapeObj.a.k[0];\n        shapeObj._anchorY = shapeObj.a.k[1];\n      }\n    }\n    if (shapeObj.hasOwnProperty('p')) {\n      if (shapeObj.p.k.hasOwnProperty('s')) {\n        shapeObj = getPosition(shapeObj, null, 'p', false, animationId, 2, shapeObj, depth);\n        if (shapeObj.p.k[0].t > 0) {\n          shapeObj._startI = true;\n        }\n      }\n    }\n  }\n\n  if (shapeObj.ty == 'sh') {\n    if (shapeObj.hasOwnProperty('ks') && shapeObj.ks.k.length > 1) {\n      shapeObj = prepShapeShKeyframe(shapeObj, referrer, animationId, depth);\n    }\n    shapeObj = prepShapeSh(shapeObj, referrer, animationId, depth);\n  }\n\n  if (shapeObj.ty == 'rc') {\n    if (shapeObj.hasOwnProperty('ks') && shapeObj.ks.k.length > 1) {\n      shapeObj = prepShapeRcKeyframe(shapeObj, referrer, animationId, depth);\n    }\n    shapeObj = prepShapeRc(shapeObj, referrer, animationId, depth);\n  }\n\n  if (shapeObj.ty == 'el') {\n    if (shapeObj.hasOwnProperty('ks') && shapeObj.ks.k.length > 1) {\n      shapeObj = prepShapeRcKeyframe(shapeObj, referrer, animationId, depth);\n    }\n    shapeObj = prepShapeEl(shapeObj, referrer, animationId, depth);\n  }\n\n  return shapeObj;\n}\n\nexport function createGradientDef(start, end, opacity, gradient, radial, animationId, depth) {\n  animation[animationId].gradientCount++;\n  const newDefId = `${animationId}_gradient${animation[animationId].gradientCount}`;\n  var newDef;\n  if (radial == 2) {\n    newDef = document.createElementNS(xmlns, 'radialGradient');\n    if (gradient.k.k[0].hasOwnProperty('s')) {\n      if (!Number.isNaN(start.k[0] != NaN)) {\n        newDef.setAttribute('x1', start.k[0]);\n      }\n      if (!Number.isNaN(end.k[0])) {\n        newDef.setAttribute('x2', end.k[0]);\n      }\n      if (!Number.isNaN(start.k[1])) {\n        newDef.setAttribute('y1', start.k[1]);\n      }\n      if (!Number.isNaN(end.k[1])) {\n        newDef.setAttribute('y2', end.k[1]);\n      }\n    }\n  } else {\n    newDef = document.createElementNS(xmlns, 'linearGradient');\n    // if (gradient.k.k[0].hasOwnProperty('s')) {\n      newDef.setAttribute('spreadMethod', 'pad');\n      newDef.setAttribute('gradientUnits', 'userSpaceOnUse');\n      if (!Number.isNaN(start.k[0])) {\n        newDef.setAttribute('x1', start.k[0]);\n      }\n      if (!Number.isNaN(end.k[0])) {\n        newDef.setAttribute('x2', end.k[0]);\n      }\n      if (!Number.isNaN(start.k[1])) {\n        newDef.setAttribute('y1', start.k[1]);\n      }\n      if (!Number.isNaN(end.k[1])) {\n        newDef.setAttribute('y2', end.k[1]);\n      }\n    // }\n  }\n  newDef.setAttribute('id', newDefId);\n  animation[animationId].defs.prepend(newDef);\n  if (gradient.k.k[0].hasOwnProperty('s')) {\n    var firstRun = true;\n    gradient = extrapolateOffsetKeyframe(gradient, 'k', false, animationId, -1, gradient, depth);\n    for (var j = 0; j < gradient.k.k.length - 1; j++) {\n      const offsets = [];\n      const styles = [];\n      const opacities = [];\n      var transforms = getEmptyFillTransform();\n      transforms.offsets = [];\n      transforms.styles = [];\n      if (gradient.k.k[j].hasOwnProperty('s')) {\n        for (var i = 0; i < gradient.p; i++) {\n          if (gradient.k.k[j].s[i * 4 + 0] == 0 || isNaN(gradient.k.k[j].s[i * 4 + 0])) {\n            offsets.push(\"0%\");\n          } else {\n            offsets.push(`${gradient.k.k[j].s[i * 4 + 0] * 100}%`);\n          }\n          styles.push(\n            `stop-color:rgb(${parseInt(gradient.k.k[j].s[i * 4 + 1] * 255)},${parseInt(gradient.k.k[j].s[i * 4 + 2] * 255)},${parseInt(\n              gradient.k.k[j].s[i * 4 + 3] * 255,\n            )});`,\n          );\n          opacities.push('stop-opacity:1;');\n        }\n        if (gradient.k.k[j].s.length > gradient.p * 4) {\n          for (var i = 0; i < gradient.p; i++) {\n            opacities[i] = `stop-opacity:${gradient.k.k[j].s[i * 2 + gradient.p * 4 + 1]};`;\n          }\n        }\n        transforms.fillObj = newDefId;\n        for (var i = 0; i < gradient.p; i++) {\n          transforms.offsets.push(offsets[i]);\n          transforms.styles.push(styles[i] + opacities[i]);\n        }\n        transforms.isGradient = true;\n        animation[animationId]._scene[parseInt(gradient.k.k[j].t)]._transform.push(transforms);\n        if (firstRun) {\n          for (var i = 0; i < gradient.p; i++) {\n            const newStop = document.createElementNS(xmlns, 'stop');\n            newStop.setAttribute('offset', offsets[i]);\n            newStop.setAttribute('style', styles[i] + opacities[i]);\n            newDef.append(newStop);\n          }\n          firstRun = false;\n        }\n      }\n    }\n  } else {\n    const offsets = [];\n    const styles = [];\n    const opacities = [];\n    for (var i = 0; i < gradient.p; i++) {\n      if (gradient.k.k[i * 4 + 0] > 0) {\n        offsets.push(`${gradient.k.k[i * 4 + 0] * 100}%`);\n      } else {\n        offsets.push(\"0%\");\n      }\n      styles.push(\n        `stop-color:rgb(${parseInt(gradient.k.k[i * 4 + 1] * 255)},${parseInt(gradient.k.k[i * 4 + 2] * 255)},${parseInt(\n          gradient.k.k[i * 4 + 3] * 255,\n        )});`,\n      );\n      opacities.push('stop-opacity:1;');\n    }\n    if (gradient.k.k.length > gradient.p * 4) {\n      for (var i = 0; i < gradient.p; i++) {\n        opacities[i] = `stop-opacity:${gradient.k.k[i * 2 + gradient.p * 4 + 1]};`;\n      }\n    }\n    for (var i = 0; i < gradient.p; i++) {\n      const newStop = document.createElementNS(xmlns, 'stop');\n      newStop.setAttribute('offset', offsets[i]);\n      newStop.setAttribute('style', styles[i] + opacities[i]);\n      newDef.append(newStop);\n    }\n  }\n\n  return `url(#${newDefId})`;\n}\n\n// Enum for line cap types.\nconst lcEnum = {\n  1: 'butt',\n  2: 'round',\n  3: 'square',\n};\n\n// Enum for line join options.\nconst ljEnum = {\n  1: 'miter',\n  2: 'round',\n  3: 'bevel',\n};\n\n/**\n * Create all the parameters for stroking a shape.\n * \n * @param {JSON} color An object that holds the parameters for the color definition.\n * @param {JSON} opacity An object that holds the opacity parameter.\n * @param {JSON} width An object that describes the width of the stroke.\n * @param {integer} lineCap Enum key that describes the line cap type.\n * @param {integer} lineJoin Enum key that describes the line join type.\n * @param {integer} miterLimit The miter limit parameter.\n * @returns {JSON} strokeString An object that lists all the parameters needed for stroking.\n */\nexport function getStrokeString(shapeObj, animationId, depth, shapeGroup) {\n  const strokeString = {\n    color: '',\n    opacity: 1,\n    width: 1,\n    lineCap: 'round',\n    lineJoin: 'round',\n    miterLimit: 0,\n  };\n\n  strokeString.color = `rgb(${shapeObj.c.k[0] * 255},${shapeObj.c.k[1] * 255},${shapeObj.c.k[2] * 255})`;\n  strokeString.opacity = shapeObj.o.k / 100;\n  if (shapeObj.w.k.length > 1 && shapeObj.w.k[0].hasOwnProperty('s')) {\n    let totalK;\n    shapeObj = extrapolateOffsetKeyframe(shapeObj, 'w', false, animationId, -1, shapeObj, depth);\n    if (shapeObj.w.k[shapeObj.w.k.length - 1].hasOwnProperty('s')) {\n      totalK = shapeObj.w.k.length;\n    } else {\n      totalK = shapeObj.w.k.length - 1;\n    }\n    for (let sCount = 0; sCount < shapeGroup.length; sCount++) {\n      if (shapeGroup[sCount]._isShape) {\n        for (let kCount = 0; kCount < shapeObj.w.k.length; kCount++) {\n          let transforms = getEmptyTransform();\n          transforms.isLayer = false;\n          transforms.isTween = false;\n          transforms.refObj = `${animationId}_shape${shapeGroup[sCount]._shape}`;\n          transforms.refObjOther = `${animationId}_shape${shapeGroup[sCount]._shape}`;\n          transforms.refObjSet = true;\n\n          transforms = findExistingTransform(transforms, animationId, shapeObj.w.k[kCount].t);\n          transforms.strokeWidth = shapeObj.w.k[kCount].s;\n          if (shapeObj.w.k[kCount].t > animation[animationId]._totalFrames || shapeObj.w.k[kCount].t < 0) {\n            break;\n          }\n          animation[animationId]._scene[parseInt(shapeObj.w.k[kCount].t)]._transform.push(transforms);\n        }\n      }\n    }\n    strokeString.width = shapeObj.w.k[0].s;\n  } else {\n    strokeString.width = shapeObj.w.k;\n  }\n  strokeString.lineCap = lcEnum[shapeObj.lc];\n  strokeString.lineJoin = lcEnum[shapeObj.lj];\n  if (strokeString.lineJoin == 1) {\n    strokeString.miterLimit = strokeString.lineJoin;\n  }\n  return strokeString;\n}\n\n/**\n * Generate a color string that conforms to the format for 'color' property defined by SVG 1.1.\n * \n * @param {float} redVal The weight of red color as a fraction of 1.\n * @param {float} greenVal The weight of green color as a fraction of 1.\n * @param {float} blueVal The weight of blue color as a fraction of 1.\n * @returns {string} color A valid color value for the 'color' property defined by SVG 1.1.\n */\nexport function getColorString(redVal, greenVal, blueVal) {\n  const color = `rgb(${redVal * 255},${greenVal * 255},${blueVal * 255})`;\n  return color;\n}\n\n/**\n * Set the stroke for a group of shapes.\n * \n * @param {JSON} shapesGroup An array of shapes.\n * @param {JSON} strokeToSet An object that has the parameters that describe styling for the stroke.\n * @param {integer} animationId The serial number of the current animation.\n * @param {boolean} isGradient If 'true', then this stroke has a gradient shading.\n */\nexport function setShapeStrokes(shapesGroup, strokeToSet, animationId, isGradient) {\n  for (let i = 0; i < shapesGroup.length; i++) {\n    if (shapesGroup[i]._isShape) {\n      getAnimationComponent(animationId, `${animationId}_shape${shapesGroup[i]._shape}`).setAttribute('stroke', strokeToSet.color);\n      getAnimationComponent(animationId, `${animationId}_shape${shapesGroup[i]._shape}`)\n        .setAttribute('stroke-width', strokeToSet.width);\n      getAnimationComponent(animationId, `${animationId}_shape${shapesGroup[i]._shape}`)\n        .setAttribute('stroke-linecap', strokeToSet.lineCap);\n      getAnimationComponent(animationId, `${animationId}_shape${shapesGroup[i]._shape}`)\n        .setAttribute('stroke-linejoin', strokeToSet.lineJoin);\n      getAnimationComponent(animationId, `${animationId}_shape${shapesGroup[i]._shape}`)\n        .setAttribute('stroke-opacity', strokeToSet.opacity);\n      if (strokeToSet.lineJoin == 1) {\n        getAnimationComponent(animationId, `${animationId}_shape${shapesGroup[i]._shape}`)\n          .setAttribute('stroke-miterlimit', strokeToSet.miterLimit);\n      }\n    }\n  }\n}\n\n/**\n * Set the color for a group of shapes.\n * \n * @param {JSON} shapesGroup An array of shapes.\n * @param {string} colorToSet A valid color value for the 'color' property defined by SVG 1.1.\n * @param {integer} animationId The serial number of the current animation.\n * @param {boolean} isGradient If 'true', then the color defintion is for a gradient.\n * @param {boolean} isMasked If 'true', then the color attribute is for a mask.\n */\nexport function setShapeColors(shapesGroup, colorToSet, animationId, isGradient, isMasked) {\n  for (let i = 0; i < shapesGroup.length; i++) {\n    if (shapesGroup[i]._isShape && typeof colorToSet !== 'undefined') {\n      getAnimationComponent(animationId, `${animationId}_shape${shapesGroup[i]._shape}`).setAttribute('fill', colorToSet);\n      getAnimationComponent(animationId, `${animationId}_shape${shapesGroup[i]._shape}`).setAttribute('fill-opacity', 1);\n    }\n  }\n}\n\n\nfunction getTrim(shapeObj, animationId, depth, shapeGroup) {\n  if (shapeObj.e.k.length > 1 && shapeObj.e.k[0].hasOwnProperty('s')) {\n    for (let i = 0; i < shapeObj.e.k.length - 1; i++) {\n      if (shapeObj.e.k[i].i.x < 1) {\n        shapeObj.e.k[i].i.x = 0;\n      }\n      if (shapeObj.e.k[i].i.y < 1) {\n        shapeObj.e.k[i].i.y = 0;\n      }\n      if (shapeObj.e.k[i].o.x < 1) {\n        shapeObj.e.k[i].o.x = 0;\n      }\n      if (shapeObj.e.k[i].o.y < 1) {\n        shapeObj.e.k[i].o.y = 0;\n      }\n    }\n    shapeObj = extrapolateOffsetKeyframe(shapeObj, 'e', false, animationId, -1, shapeObj, depth);\n  }\n  if (shapeObj.s.k.length > 1 && shapeObj.s.k[0].hasOwnProperty('s')) {\n    for (let i = 0; i < shapeObj.s.k.length - 1; i++) {\n      if (shapeObj.s.k[i].i.x < 1) {\n        shapeObj.s.k[i].i.x = 0;\n      }\n      if (shapeObj.s.k[i].i.y < 1) {\n        shapeObj.s.k[i].i.y = 0;\n      }\n      if (shapeObj.s.k[i].o.x < 1) {\n        shapeObj.s.k[i].o.x = 0;\n      }\n      if (shapeObj.s.k[i].o.y < 1) {\n        shapeObj.s.k[i].o.y = 0;\n      }\n    }\n    shapeObj = extrapolateOffsetKeyframe(shapeObj, 's', false, animationId, -1, shapeObj, depth);\n  }\n\n  return shapeObj;\n}\n\n\n\n\nfunction getSegment(p1, c1, c2, p2, t0, t1) {\n  let u0 = 1.0 - t0;\n  let u1 = 1.0 - t1;\n\n  let qxa = (p1[0] * u0 * u0) + ((c1[0] + p1[0]) * 2 * t0 * u0) + ((c2[0] + p2[0]) * t0 * t0);\n  let qxb = (p1[0] * u1 * u1) + ((c1[0] + p1[0]) * 2 * t1 * u1) + ((c2[0] + p2[0]) * t1 * t1);\n  let qxc = ((c1[0] + p1[0]) * u0 * u0) + ((c2[0] + p2[0]) * 2 * t0 * u0) + (p2[0] * t0 * t0);\n  let qxd = ((c1[0] + p1[0]) * u1 * u1) + ((c2[0] + p2[0]) * 2 * t1 * u1) + (p2[0] * t1 * t1);\n\n  let qya = (p1[1] * u0 * u0) + ((c1[1] + p1[1]) * 2 * t0 * u0) + ((c2[1] + p2[1]) * t0 * t0);\n  let qyb = (p1[1] * u1 * u1) + ((c1[1] + p1[1]) * 2 * t1 * u1) + ((c2[1] + p2[1]) * t1 * t1);\n  let qyc = ((c1[1] + p1[1]) * u0 * u0) + ((c2[1] + p2[1]) * 2 * t0 * u0) + (p2[1] * t0 * t0);\n  let qyd = ((c1[1] + p1[1]) * u1 * u1) + ((c2[1] + p2[1]) * 2 * t1 * u1) + (p2[1] * t1 * t1);\n\n  let segment = [];\n  segment.push( [(qxa * u0) + (qxc * t0), (qya * u0) + (qyc * t0)] ); // p1\n  if (p1[0] == p2[0] && c1[0] == c2[0]) {\n    segment[0][0] = p1[0];\n  }\n  if (p1[1] == p2[1] && c1[1] == c2[1]) {\n    segment[0][1] = p1[1];\n  }\n  segment.push( [(qxa * u1) + (qxc * t1), (qya * u1) + (qyc * t1)] ); // c1\n\n  segment.push( [(qxb * u0) + (qxd * t0), (qyb * u0) + (qyd * t0)] ); // c2\n\n  segment.push( [(qxb * u1) + (qxd * t1), (qyb * u1) + (qyd * t1)] ); // p2\n  if (p1[0] == p2[0] && c1[0] == c2[0]) {\n    segment[3][0] = p1[0];\n  }\n  if (p1[1] == p2[1] && c1[1] == c2[1]) {\n    segment[3][1] = p1[1];\n  }\n  segment[1][0] -= segment[0][0];\n  segment[1][1] -= segment[0][1];\n  segment[2][0] -= segment[3][0];\n  segment[2][1] -= segment[3][1];\n\n  return segment;\n}\n\nfunction getLength(animationId, depth, shapesGroup, shapeIdx, startIdx, endIdx, returnedKeyframeObj, fullBezierLength) {\n  let bezierLength = 0;\n  returnedKeyframeObj = bezierCurve(\n    shapesGroup[shapeIdx].ks.k.v[startIdx],\n    shapesGroup[shapeIdx].ks.k.o[startIdx],\n    shapesGroup[shapeIdx].ks.k.i[endIdx],\n    shapesGroup[shapeIdx].ks.k.v[endIdx],\n    1,\n    50,\n    false,\n    animationId,\n    's',\n    -1,\n    shapesGroup[shapeIdx].ks.k,\n    depth,\n    'length',\n  );\n  for (let k = 0; k < returnedKeyframeObj.length - 1; k++) {\n    bezierLength = bezierLength + arcLength(returnedKeyframeObj[k].s, returnedKeyframeObj[k + 1].s);\n    //debug(() => [\"blut\", bezierLength]);\n  }\n  bezierLength = bezierLength + arcLength(shapesGroup[shapeIdx].ks.k.v[startIdx], returnedKeyframeObj[0].s);\n  //debug(() => [\"blut\", bezierLength]);\n  bezierLength = bezierLength + arcLength(returnedKeyframeObj[returnedKeyframeObj.length - 1].s, shapesGroup[shapeIdx].ks.k.v[endIdx]);\n  fullBezierLength = fullBezierLength + bezierLength;\n  shapesGroup[shapeIdx].ks.k.v[startIdx]._l = bezierLength;\n  return [shapesGroup, returnedKeyframeObj, fullBezierLength];\n}\n\nfunction setTrim(shapesGroup, trimToSet, animationId, depth) {\n  debug(() => [\"entered------------------------------------------------------\"]);\n  for (let i = 0; i < shapesGroup.length; i++) {\n    if (shapesGroup[i].ty == 'gr') {\n      //panda.log(\"entering group\");\n      setTrim(shapesGroup[i].it, trimToSet, animationId, depth);\n    } else {\n      if (shapesGroup[i]._isShape) {\n        let minShapeT = -1;\n        let fullBezierLength = 0;\n        let returnedKeyframeObj = {};\n        if (shapesGroup[i].ty == 'sh' && shapesGroup[i].ks.k.hasOwnProperty('v') && shapesGroup[i].ks.k.v.length > 1) {\n          debug(() => [\"GLLL\", shapesGroup[i].ks]);\n          for (let j = 0; j < shapesGroup[i].ks.k.v.length - 1; j++) {\n            /*\n            let bezierLength = 0;\n            returnedKeyframeObj = bezierCurve(\n              shapesGroup[i].ks.k.v[j],\n              shapesGroup[i].ks.k.o[j],\n              shapesGroup[i].ks.k.i[j + 1],\n              shapesGroup[i].ks.k.v[j + 1],\n              1,\n              50,\n              false,\n              animationId,\n              's',\n              -1,\n              shapesGroup[i].ks.k,\n              depth,\n              'length',\n            );\n            for (let k = 0; k < returnedKeyframeObj.length - 1; k++) {\n              bezierLength = bezierLength + arcLength(returnedKeyframeObj[k].s, returnedKeyframeObj[k + 1].s);\n              debug(() => [\"blut\", bezierLength]);\n            }\n            bezierLength = bezierLength + arcLength(shapesGroup[i].ks.k.v[j], returnedKeyframeObj[0].s);\n            debug(() => [\"blut\", bezierLength]);\n            bezierLength = bezierLength + arcLength(returnedKeyframeObj[returnedKeyframeObj.length - 1].s, shapesGroup[i].ks.k.v[j + 1]);\n            fullBezierLength = fullBezierLength + bezierLength;\n            shapesGroup[i].ks.k.v[j]._l = bezierLength;\n            debug(() => [\"blut\", bezierLength]);\n            */\n            [shapesGroup, returnedKeyframeObj, fullBezierLength] = \n              getLength(animationId, depth, shapesGroup, i, j, j + 1, returnedKeyframeObj, fullBezierLength)\n            //debug(() => [\"GOTL\", returnedKeyframeObj, fullBezierLength]);\n          }\n          if (shapesGroup[i].ks.k.c == true) {\n            [shapesGroup, returnedKeyframeObj, fullBezierLength] = \n              getLength(animationId, depth, shapesGroup, i, shapesGroup[i].ks.k.v.length - 1, 0, returnedKeyframeObj, fullBezierLength)\n          }\n\n          let minT = -1;\n          let maxT = -1;\n          if (trimToSet.s.k.length > 1 && trimToSet.s.k[0].t < minT) {\n            minT = trimToSet.s.k[0].t;\n          }\n          if (minT == -1 && trimToSet.s.k.length > 1) {\n            //debug(() => ['set minT', trimToSet.s.k[0].t]);\n            minT = trimToSet.s.k[0].t;\n          }\n          if (minT == -1 && trimToSet.e.k.length > 1) {\n            debug(() => ['set minT at end', trimToSet.e.k[0].t]);\n            minT = trimToSet.e.k[0].t;\n          }\n          if (trimToSet.s.k.length > 1 && trimToSet.s.k[trimToSet.s.k.length - 1].t > maxT) {\n            maxT = trimToSet.s.k[trimToSet.s.k.length - 1].t;\n          }\n          if (trimToSet.e.k.length > 1 && trimToSet.e.k[trimToSet.e.k.length - 1].t > maxT) {\n            maxT = trimToSet.e.k[trimToSet.e.k.length - 1].t;\n          }\n\n          if (minT == -1) {\n            if (minT == maxT) {\n              continue;\n            } else {\n              minT = 0;\n            }\n          }\n          //panda.log(\"maxmin \", minT, maxT);\n\n          let sIndex = -1;\n          let eIndex = -1;\n\n          let tempK = Object.assign({}, shapesGroup[i].ks.k);\n          debug(() => ['stuff', i, minT, maxT, fullBezierLength, tempK, trimToSet]);\n\n          minShapeT = minT;\n          for (let t = minT; t <= maxT; t++) {\n            \n            let curSL = 0;\n            let curEL = 0;\n            let startShapeIndex = -1;\n            let endShapeIndex = -1;\n            let hideThis = false;\n            let currentS = -1;\n  \n            if (trimToSet.s.k.length > 1 && sIndex < trimToSet.s.k.length - 1 && t >= trimToSet.s.k[0].t) {\n              sIndex++;\n            }\n            if (trimToSet.e.k.length > 1 && eIndex < trimToSet.e.k.length - 2 && t >= trimToSet.e.k[0].t) {\n              eIndex++;\n              //debug(() => ['incr', trimToSet.e.k[eIndex].t, t, eIndex]);\n            }\n            let startSegment = [];\n            let endSegment = [];\n\n            if (sIndex >= 0 && trimToSet.s.k.length > 1 && trimToSet.s.k[sIndex].t == t && trimToSet.s.k[sIndex].hasOwnProperty('s')) {\n              curSL = fullBezierLength - (fullBezierLength * (trimToSet.s.k[sIndex].s[0]) / 100);\n              debug(() => ['start', t, trimToSet, tempK, curSL]);\n              if (trimToSet.s.k[sIndex].s[0] == 0) {\n                debug(() => ['HIDE']);\n                hideThis = true;\n              }\n              currentS = trimToSet.s.k[sIndex].s[0];\n              let startIdx;\n              let initIdx = 1;\n              if (shapesGroup[i].ks.k.c == true) {\n                //initIdx = 0;\n              }\n              for (let j = initIdx; j < tempK.v.length; j++) {\n                if (j == 0) {\n                  startIdx = tempK.v.length - 1;\n                } else {\n                  startIdx = j - 1;\n                }\n                debug(() => ['circling', curSL, tempK.v[startIdx]._l]);\n                if (curSL < tempK.v[startIdx]._l) {\n                  startShapeIndex = j;\n                  startSegment = getSegment(tempK.v[startIdx], tempK.o[startIdx], tempK.i[j], tempK.v[j], ((tempK.v[startIdx]._l - curSL) / tempK.v[startIdx]._l), 0.999999);\n                  debug(() => ['hup', t, j, tempK.v[j]._l, startSegment, (tempK.i.length - startShapeIndex), tempK, startShapeIndex]);\n                  break;\n                } else {\n                  //if (tempK.v[startIdx].hasOwnProperty('_l')) {\n                    curSL = curSL - tempK.v[startIdx]._l;\n                    /*if (j == tempK.v.length - 1) {\n                      startShapeIndex = j;\n                    }*/\n                  //}\n                }\n              }\n            }\n\n            if (eIndex >= 0 && trimToSet.e.k.length > 1 && trimToSet.e.k[eIndex].t == t && trimToSet.e.k[eIndex].hasOwnProperty('s')) {\n              debug(() => ['end', t, trimToSet.e.k[eIndex]]);\n              curEL = fullBezierLength - (fullBezierLength * (trimToSet.e.k[eIndex].s[0] / 100));\n              if (trimToSet.e.k[eIndex].s[0] == 0) {\n                hideThis = true;\n              }\n              debug(() => ['delta', t, trimToSet.e.k[eIndex].t, trimToSet.e.k[eIndex + 1].t, fullBezierLength, curEL, tempK]);\n              currentS = trimToSet.e.k[eIndex].s[0];\n              let endIdx;\n              let initIdx = tempK.v.length - 2;\n              if (shapesGroup[i].ks.k.c == true) {\n                initIdx = tempK.v.length - 1;\n              }\n\n              for (let j = initIdx; j >= 0; j--) {\n                debug(() => ['circling' ]);\n                if (j == tempK.v.length - 1) {\n                  endIdx = 0;\n                } else {\n                  endIdx = j + 1;\n                }\n                if (curEL < tempK.v[j]._l) {\n                  endShapeIndex = j;\n                  endSegment = getSegment(tempK.v[j], tempK.o[j], tempK.i[endIdx], tempK.v[endIdx], 0.000001, ((tempK.v[j]._l - curEL) / tempK.v[j]._l));\n                  debug(() => ['hup', t, j, ((tempK.v[j]._l - curEL) / tempK.v[j]._l), endSegment, (tempK.i.length - endShapeIndex), tempK, endShapeIndex]);\n                  break;\n                } else {\n                  curEL = curEL - tempK.v[j]._l;\n                }\n              }\n            }\n\n            let sourceK = JSON.parse(JSON.stringify(tempK));\n            let startToTrim = sourceK.v.length;\n            if (endShapeIndex >= 0) {\n              startToTrim = startToTrim - (startToTrim - (endShapeIndex));\n              sourceK.o[endShapeIndex] = endSegment[1];\n              sourceK.i.splice(endShapeIndex + 1, ((sourceK.i.length - 1) - endShapeIndex), endSegment[2]);\n              sourceK.o.splice(endShapeIndex + 1, ((sourceK.o.length - 1) - endShapeIndex), tempK.o[endShapeIndex]);\n              sourceK.v.splice(endShapeIndex + 1, ((sourceK.v.length - 1) - endShapeIndex), endSegment[3]);\n              debug(() => ['etempK', t, sourceK]);\n            }\n\n            if (startShapeIndex >= 0) {\n\n              /*sourceK.i.splice(startShapeIndex - 1, startToTrim - startShapeIndex, [0, 0]);\n              sourceK.o.splice(startShapeIndex - 1, startToTrim - startShapeIndex, startSegment[1]);\n              sourceK.v.splice(startShapeIndex - 1, startToTrim - startShapeIndex, startSegment[0]);*/\n              sourceK.i.splice(0, startShapeIndex, tempK.i[startShapeIndex]);\n              sourceK.o.splice(0, startShapeIndex, startSegment[1]);\n              sourceK.v.splice(0, startShapeIndex, startSegment[0]);\n              sourceK.i[1] = startSegment[2];\n              debug(() => ['stempK', t, startShapeIndex, sourceK]);\n            }\n\n            startShapeIndex = -1;\n            endShapeIndex = -1;\n\n            /*\n            let startInc = false;\n            let middleInc = false;\n            if (trimToSet.s.k.length > 1) {\n              startInc = true;\n              sourceK.i.push(tempK.i[startShapeIndex]);\n              sourceK.o.push(startSegment[1]);\n              sourceK.v.push(startSegment[0]);\n            }\n\n            if (endShapeIndex - startShapeIndex > 0 && startInc) {\n              middleInc = true;\n              for (let j = startShapeIndex + 1; j < endShapeIndex; j++) {\n                sourceK.i.push(tempK.i[j]);\n                sourceK.o.push(tempK.o[j]);\n                sourceK.v.push(tempK.v[j]);\n              }\n            }\n\n            if (trimToSet.e.k.length > 1) {\n              if (! startInc && ! middleInc) {\n                for (let j = startShapeIndex; j < endShapeIndex; j++) {\n                  sourceK.i.push(tempK.i[j]);\n                  sourceK.o.push(tempK.o[j]);\n                  sourceK.v.push(tempK.v[j]);\n                }\n              }\n              sourceK.i.push(tempK.i[endShapeIndex]);\n              sourceK.o.push(endSegment[1]);\n              sourceK.v.push(endSegment[0]);\n            }\n            */\n            let transforms;\n            if (sourceK.v.length > 1 && ! hideThis) {\n              //if (!(shapesGroup[i].ks.k.c && t >= maxT)) {\n                if (sIndex < 0) {\n                  sourceK.i.unshift(tempK.i[tempK.i.length - 1]);\n                  sourceK.o.unshift(tempK.o[tempK.o.length - 1]);\n                  sourceK.v.unshift(tempK.v[tempK.v.length - 1]);\n                }\n                if (eIndex < 0) {\n                  sourceK.i.push(tempK.i[0]);\n                  sourceK.o.push(tempK.o[0]);\n                  sourceK.v.push(tempK.v[0]);\n                }\n              //}\n              if (shapesGroup[i].ks.k.c && t >= maxT) {\n                if (currentS == 0) {\n                  transforms = setDataString(animationId, sourceK, shapesGroup[i]._shape, true, t, false);\n                } else {\n                  transforms = setDataString(animationId, sourceK, shapesGroup[i]._shape, false, t, false);\n                }\n              } else {\n                transforms = setDataString(animationId, sourceK, shapesGroup[i]._shape, false, t, false);\n              }\n              debug(() => ['setString', sourceK, t, sIndex, eIndex]);\n              \n              if (t > animation[animationId]._totalFrames || t < 0) {\n                break;\n              }\n              if (t == minT && t >= 0 && trimToSet.s.k.length > 1 && trimToSet.s.k[0].t == t) {\n                debug(() => ['FIRST', sourceK]);\n                for (let n = 0; n < t; n++) {\n                  //animation[animationId]._scene[parseInt(n)]._transform.push(transforms);\n                  updateTransform(transforms, animationId, n);\n                }\n              }\n              animation[animationId]._scene[parseInt(t)]._transform.push(transforms);\n              //updateTransform(transforms, animationId, t);\n            } else {\n              debug(() => ['hideit1', sourceK, t, sIndex, eIndex]);\n              \n              if (shapesGroup[i].ks.k.c && t >= maxT && currentS == 0) {\n                transforms = setDataString(animationId, sourceK, shapesGroup[i]._shape, true, t, true);\n              } else {\n                transforms = setDataString(animationId, sourceK, shapesGroup[i]._shape, false, t, true);\n              }\n              if (t == minT && t >= 0) {\n                debug(() => ['hideit', sourceK, t]);\n                for (let n = 0; n < t; n++) {\n                  //animation[animationId]._scene[parseInt(n)]._transform.push(transforms);\n                  updateTransform(transforms, animationId, n);\n                  debug(() => ['hiding']);\n                }                \n              }\n              //updateTransform(transforms, animationId, t);\n              animation[animationId]._scene[parseInt(t)]._transform.push(transforms);\n            }\n\n          }\n\n        }\n      }\n    }\n  }\n\n\n\n  /*\n  let tempEnd = {length:{}};\n  let tempStart = {length:{}};\n  tempEnd.length = shapeObj.e;\n  tempStart.length = shapeObj.s;\n  tempEnd = extrapolateOffsetKeyframe(tempEnd, 'length', false, animationId, -1, tempEnd, depth);\n  */\n}\n\n/**\n * Iterate through the shapes in a shape group ('gr') object, prepare the required DOM elements, and trigger the creation of shapes, attributes and transformations.\n * \n * @param {string} elementId The 'id' attribute of the DOMElement 'elementObj'.\n * @param {integer} animationId The serial number of this animation.\n * @param {JSON} layerObj The JSON object whose root to be scoured for shape items.\n * @param {JSON} referrer The JSON object that contained the 'layerObj' passed in here.\n * @param {string} refGroup The 'id' of the <g> that corresponds to the calling JSON object (pointed to by the 'referrer').\n * @param {boolean} isMasked If 'true', then this group of shapes are masked.\n * @param {integer} depth The level of iteration of precompositions (1 if this is the root layers and their corresponding shape groups).\n * @returns \n */\nexport function getShapesGr(elementId, animationId, layerObj, referrer, refLabel, refGroup, isMasked, depth, outer) {\n  let currentColor;\n  let currentStroke;\n  layerObj.currentTrim;\n  let stroked = false;\n  layerObj.trimmed = false;\n  if (outer.trimmed) {\n    layerObj.trimmed = true;\n    layerObj.currentTrim = outer.currentTrim;\n  }\n  for (let i = 0; i < layerObj.it.length; i++) {\n    layerObj._isGradient = false;\n    animation[animationId].shapeCount++;\n    if (layerObj.tt > 0) {\n      isMasked = layerObj.td;\n    }\n    if (layerObj.it[i].ty == 'gr') { // Shape group\n      layerObj.it[i]._group = animation[animationId].shapeCount;\n      const newGroup = document.createElementNS(xmlns, 'g');\n      newGroup.setAttribute('id', `${animationId}_group${animation[animationId].shapeCount}`);\n      animation[animationId]._currentShapeGroup = animation[animationId].shapeCount;\n      referrer.prepend(newGroup);\n      layerObj.it[i] = getShapesGr(\n        elementId,\n        animationId,\n        layerObj.it[i],\n        newGroup,\n        `${animationId}_group${animation[animationId].shapeCount}`,\n        refGroup,\n        isMasked,\n        depth,\n        layerObj,\n      );\n    } else {\n      layerObj.it[i]._shape = animation[animationId].shapeCount;\n      let tempK = JSON.parse(JSON.stringify(layerObj.it[i]));\n\n      //debug(() => ['CO', tempK]);\n      layerObj.it[i] = prepShape(layerObj.it[i], referrer, animationId, isMasked);\n      //debug(() => ['FRICO', layerObj.it[i]]);\n      if (layerObj.it[i].ty == 'tr') { // Transformations\n        layerObj.it[i]._trIndex = i;\n        if (layerObj.it[i].p.hasOwnProperty('k')) {\n          if (layerObj.it[i].p.k.length > 1) {\n            if (layerObj.it[i].hasOwnProperty('a')) {\n              getAnimationComponent(animationId, refLabel)\n                .setAttribute(\n                  'transform',\n                  `translate(${layerObj.it[i].p.k[0] - layerObj.it[i].a.k[0]},${\n                    layerObj.it[i].p.k[1] - layerObj.it[i].a.k[1]\n                  })`,\n                );\n            } else {\n              getAnimationComponent(animationId, refLabel)\n                .setAttribute('transform', `translate(${layerObj.it[i].p.k[0]},${layerObj.it[i].p.k[1]})`);\n            }\n          }\n        }\n      }\n      if (layerObj.it[i].ty == 'fl') { // Fill shape\n        if (layerObj.it[i].c.k.length > 1) {\n          currentColor = getColorString(layerObj.it[i].c.k[0], layerObj.it[i].c.k[1], layerObj.it[i].c.k[2]);\n        }\n      }\n      if (layerObj.it[i].ty == 'st') { // Stroke shape\n        if (layerObj.it[i].c.k.length > 1) {\n          currentStroke = getStrokeString(\n            layerObj.it[i],\n            animationId,\n            depth,\n            layerObj.it,\n          );\n          stroked = true;\n        }\n      }\n      if (layerObj.it[i].ty == 'tm') { // Stroke shape\n        //if (layerObj.it[i].c.k.length > 1) {\n          layerObj.currentTrim = getTrim(\n            layerObj.it[i],\n            animationId,\n            depth,\n            layerObj.it,\n          );\n          //layerObj.it[i] = currentTrim;\n          layerObj.trimmed = true;\n        //}\n      }\n      if (layerObj.it[i].ty == 'gf') { // Gradient fill shape\n        layerObj._isGradient = true;\n        currentColor = createGradientDef(\n          layerObj.it[i].s,\n          layerObj.it[i].e,\n          layerObj.it[i].o,\n          layerObj.it[i].g,\n          layerObj.it[i].r,\n          animationId,\n          depth,\n        );\n      }\n    }\n  }\n  setShapeColors(layerObj.it, currentColor, animationId, layerObj._isGradient, isMasked); // Set the color for this group of shapes.\n  if (stroked) {\n    setShapeStrokes(layerObj.it, currentStroke, animationId); // Set the stroke for this group of shapes.\n  }\n  if (layerObj.trimmed) {\n    debug(() => ['CurrentTrim', layerObj.currentTrim]);\n    setTrim(layerObj.it, layerObj.currentTrim, animationId, depth); // Set the trim for this group of shapes.\n  }\n  return layerObj;\n}\n\n/**\n * Iterate through the shapes in a layer object, prepare the required DOM elements, and trigger the creation of shapes, attributes and transformations.\n * \n * @param {string} elementId The 'id' attribute of the DOMElement 'elementObj'.\n * @param {integer} animationId The serial number of this animation.\n * @param {JSON} layerObj The JSON object whose root to be scoured for shape items.\n * @param {JSON} referrer The JSON object that contained the 'layerObj' passed in here.\n * @param {string} refGroup The 'id' of the <g> that corresponds to the calling JSON object (pointed to by the 'referrer').\n * @param {boolean} isMasked If 'true', then this group of shapes are masked.\n * @param {integer} depth The level of iteration of precompositions (1 if this is the root layers and their corresponding shape groups).\n * @returns \n */\nexport function getShapes(elementId, animationId, layerObj, referrer, refLabel, refGroup, isMasked, depth) {\n  let currentColor;\n  let currentStroke;\n  layerObj.currentTrim = {};\n  let stroked = false;\n  layerObj.trimmed = false;\n  for (let i = 0; i < layerObj.shapes.length; i++) {\n    layerObj._isGradient = false;\n    animation[animationId].shapeCount++;\n    if (layerObj.tt > 0) {\n      isMasked = layerObj.td;\n    }\n    if (layerObj.shapes[i].ty == 'gr') { // Shape group\n      layerObj.shapes[i]._group = animation[animationId].shapeCount;\n      const newGroup = document.createElementNS(xmlns, 'g');\n      newGroup.setAttribute('id', `${animationId}_group${animation[animationId].shapeCount}`);\n      newGroup.setAttribute('opacity', 1);\n      animation[animationId]._currentShapeGroup = animation[animationId].shapeCount;\n      referrer.prepend(newGroup);\n      layerObj.shapes[i] = getShapesGr(\n        elementId,\n        animationId,\n        layerObj.shapes[i],\n        newGroup,\n        `${animationId}_group${animation[animationId].shapeCount}`,\n        refGroup,\n        isMasked,\n        depth,\n        layerObj,\n      );\n\n    } else {\n      layerObj.shapes[i]._shape = animation[animationId].shapeCount;\n\n      //debug(() => ['RICO', layerObj.shapes[i]]);\n      layerObj.shapes[i] = prepShape(layerObj.shapes[i], referrer, animationId, isMasked);\n      //debug(() => ['FRICO', layerObj.shapes[i]]);\n      if (layerObj.shapes[i].ty == 'tr') { // Transformation\n        layerObj.shapes[i]._trIndex = i;\n        if (layerObj.shapes[i].p.hasOwnProperty('k')) {\n          if (layerObj.shapes[i].p.k > 1) {\n            getAnimationComponent(animationId, `${animationId}_${depth}_layerGroup${layerObj._layer}`)\n              .setAttribute('transform', `translate(${layerObj.shapes[i].p.k[0]},${layerObj.shapes[i].p.k[1]})`);\n          }\n        }\n      }\n      if (layerObj.shapes[i].ty == 'fl') { // Fill shape\n        if (layerObj.shapes[i].c.k.length > 1) {\n          currentColor = getColorString(\n            layerObj.shapes[i].c.k[0],\n            layerObj.shapes[i].c.k[1],\n            layerObj.shapes[i].c.k[2],\n          );\n        }\n      }\n      if (layerObj.shapes[i].ty == 'st') { // Stroke shape\n        if (layerObj.shapes[i].c.k.length > 1) {\n          currentStroke = getStrokeString(\n            layerObj.shapes[i],\n            animationId,\n            depth,\n            layerObj.shapes,\n          );\n          stroked = true;\n        }\n      }\n      if (layerObj.shapes[i].ty == 'tm') { // Stroke shape\n        //if (layerObj.shapes[i].c.k.length > 1) {\n          layerObj.currentTrim = getTrim(\n            layerObj.shapes[i],\n            animationId,\n            depth,\n            layerObj.shapes,\n          );\n          //layerObj.shapes[i] = currentTrim;\n          layerObj.trimmed = true;\n        //}\n      }\n      if (layerObj.shapes[i].ty == 'gf') { // Gradient fill shape\n        layerObj._isGradient = true;\n        currentColor = createGradientDef(\n          layerObj.shapes[i].s,\n          layerObj.shapes[i].e,\n          layerObj.shapes[i].o,\n          layerObj.shapes[i].g,\n          layerObj.shapes[i].r,\n          animationId,\n          depth,\n        );\n      }\n    }\n  }\n  setShapeColors(layerObj.shapes, currentColor, animationId, layerObj._isGradient, isMasked); // Set the color for this group of shapes.\n  if (stroked) {\n    setShapeStrokes(layerObj.shapes, currentStroke, animationId); // Set the stroke for this group of shapes.\n  }\n  if (layerObj.trimmed) {\n    debug(() => ['CurrentTrim', layerObj.currentTrim]);\n    setTrim(layerObj.shapes, layerObj.currentTrim, animationId, depth); // Set the trim for this group of shapes.\n  }\n  return layerObj;\n}\n\n/**\n * Create forward-linking to children of the layer item passed to this function, and create the child containers within the parent's.\n * \n * @param {integer} animationId The serial number of the current animation.\n * @param {integer} layerId The serial number of the current layer item to be processed.\n * @param {integer} lastMaskId The serial number of the last mask layer that was discovered.\n * @param {JSON} passedObj The JSON object that holds the group of layer items to peruse.\n * @param {string} passedKey The key that describes the array in 'passedObj' that holds a group of layer items.\n * @param {integer} depth An integer that describes the depth of the current layer group (1 for no iterations).\n * @returns \n */\nexport function resolveParents(animationId, layerId, lastMaskId, passedObj, passedKey, depth, level, addArray, passedLevel) {\n  let newGroup;\n  let newTranslateGroup;\n  let newLayer;\n\n  for (let j = 0; j < passedObj[passedKey].length; j++) {\n    if (passedObj[passedKey][j].ind == passedObj[passedKey][layerId].parent) {\n      if (passedObj[passedKey][j].tt > 0) {\n        for (let k = j - 1; k >= 0; k--) {\n          if (passedObj[passedKey][k].td > 0) {\n            passedObj[passedKey][j]._mask = `_${animationId}_${depth}_layerMask${passedObj[passedKey][k].ind}`;\n            passedObj[passedKey][j]._isMasked = true;\n            break;\n          }\n        }\n      }\n      addArray.push({\"item\": layerId, \"level\": passedLevel});\n\n      if (!passedObj[passedKey][j]._addedToDom) {\n        resolveParents(animationId, j, lastMaskId, passedObj, passedKey, depth, level + 1, addArray, passedLevel + 1);\n      }\n      animation[animationId].layerCount++;\n      passedObj[passedKey][layerId]._parent = passedObj[passedKey][j]._layer;\n      passedObj[passedKey][layerId]._parentIdx = j;\n      //if (!passedObj[passedKey][j]._addedToDom) {\n        passedObj[passedKey][layerId].domObj = {}\n        \n        passedObj[passedKey][layerId].domObj.newLayer = document.createElementNS(xmlns, 'g');\n        passedObj[passedKey][layerId].domObj.newLayer.setAttribute('id', `${animationId}_${depth}_layer${passedObj[passedKey][layerId]._layer}`);\n        passedObj[passedKey][layerId].domObj.newLayer.setAttribute('mask', lastMaskId);\n        passedObj[passedKey][layerId].domObj.newLayer.setAttribute('opacity', 1);\n\n        //document\n        //  .getElementById(`${animationId}_${depth}_layerTranslate${passedObj[passedKey][layerId]._parent}`)\n        //  .append(newLayer);\n        //passedObj[passedKey][j].domObj.newTranslateGroup.prepend(newLayer);\n        passedObj[passedKey][layerId].domObj.newTranslateGroup = document.createElementNS(xmlns, 'g');\n        passedObj[passedKey][layerId].domObj.newTranslateGroup.setAttribute(\n          'id',\n          `${animationId}_${depth}_layerTranslate${passedObj[passedKey][layerId]._layer}`,\n        );\n        passedObj[passedKey][layerId].domObj.newTranslateGroup.setAttribute('opacity', 1);\n        passedObj[passedKey][layerId].domObj.newLayer.prepend(newTranslateGroup);\n\n        if (passedObj[passedKey][layerId].w > 0) {\n          passedObj[passedKey][layerId].domObj.newLayer.style.width = passedObj[passedKey][layerId].w;\n        }\n        if (passedObj[passedKey][layerId].h > 0) {\n          passedObj[passedKey][layerId].domObj.newLayer.style.height = passedObj[passedKey][layerId].h;\n        }\n        passedObj[passedKey][layerId].domObj.newGroup = document.createElementNS(xmlns, 'g');\n        passedObj[passedKey][layerId].domObj.newGroup.setAttribute('id', `${animationId}_${depth}_layerGroup${passedObj[passedKey][layerId]._layer}`);\n        passedObj[passedKey][layerId].domObj.newGroup.setAttribute('opacity', 1);\n        passedObj[passedKey][layerId].domObj.newTranslateGroup.prepend(newGroup);\n\n        passedObj[passedKey][layerId]._addedToDom = true;\n        passedObj[passedKey][layerId].domObj.level = level;\n        passedObj[passedKey][layerId].processed = false;\n\n        // Push the child's 'id' into this item's ._child[] and the serial number of the child into ._childId[]\n        passedObj[passedKey][j]._child.push(`_layerGroup${passedObj[passedKey][layerId].parent}`);\n        passedObj[passedKey][j]._childId.push(layerId);\n\n      //}\n\n      return;\n    }\n  }\n}\n\n/**\n * Iterate through the layers of the animation, prepare the scaffolding needed to process the items in each one, and then trigger the respective functions to do the processing.\n * \n * @param {string} elementId The 'id' attribute of the DOMElement 'elementObj'.\n * @param {integer} animationId The serial number of this animation.\n * @param {DOMElement} elementObj The DOMElement describing the first Lottie layer element in the animation.\n * @param {JSON} passedObj The object that has 'layers', shapes group ('gr'), or 'assets'.\n * @param {string} passedKey The name of the array, in 'passedObj', that lists the target layer objects.\n * @param {integer} depth The depth of the current iteration of layer objects.\n * @returns \n */\nexport function getLayers(elementId, animationId, elementObj, passedObj, passedKey, depth) {\n  if (passedObj[passedKey] === undefined || passedObj[passedKey].length < 1) {\n    return;\n  }\n  animation[animationId].depth++;\n  depth = animation[animationId].depth;\n  let newLayer;\n  let newGroup;\n  let newMask;\n  let newTranslateGroup;\n  let posX;\n  let posY;\n  let lastMaskId = '';\n\n  //passedObj.myDepth = depth;\n  //if (depth < 1) {\n    for (var i = 0; i < passedObj[passedKey].length; i++) {\n      if (passedObj[passedKey][i].w > animation[animationId].w) {\n        animation[animationId]._maxWidth = passedObj[passedKey][i].w;\n      }\n      if (passedObj[passedKey][i].h > animation[animationId].h) {\n        animation[animationId]._maxHeight = passedObj[passedKey][i].h;\n      }\n      passedObj.layerCount++;\n      passedObj[passedKey][i]._layer = passedObj[passedKey][i].ind;\n      passedObj[passedKey][i]._child = [];\n      passedObj[passedKey][i]._childId = [];\n      if (passedObj[passedKey][i].parent > 0) {\n      } else {\n        if (passedObj[passedKey][i].td > 0) {\n          passedObj[passedKey][i]._isMask = true;\n          newMask = document.createElementNS(xmlns, 'mask');\n          lastMaskId = `_${animationId}_${depth}_layerMask${passedObj[passedKey][i].ind}`;\n          newMask.setAttribute('id', lastMaskId);\n          newMask.setAttribute('mask-type', 'alpha');\n          newMask.setAttribute('opacity', 1);\n          animation[animationId].defs.prepend(newMask);\n\n          newLayer = document.createElementNS(xmlns, 'g');\n          newLayer.setAttribute('id', `${animationId}_${depth}_layer${passedObj[passedKey][i].ind}`);\n          newLayer.setAttribute('style', 'display: block;');\n          newLayer.setAttribute('opacity', 1);\n          newMask.prepend(newLayer);\n        } else {\n          newLayer = document.createElementNS(xmlns, 'g');\n          newLayer.setAttribute('id', `${animationId}_${depth}_layer${passedObj[passedKey][i].ind}`);\n          newLayer.setAttribute('opacity', 1);\n          elementObj.prepend(newLayer);\n          if (passedObj[passedKey][i].tt > 0) {\n            passedObj[passedKey][i]._mask = lastMaskId;\n            passedObj[passedKey][i]._isMasked = true;\n          }\n        }\n        passedObj[passedKey][i]._addedToDom = true;\n\n        newTranslateGroup = document.createElementNS(xmlns, 'g');\n        newTranslateGroup.setAttribute('id', `${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._layer}`);\n        newTranslateGroup.setAttribute('opacity', 1);\n        newLayer.prepend(newTranslateGroup);\n        if (passedObj[passedKey][i].w > 0) {\n          newLayer.style.width = passedObj[passedKey][i].w;\n        }\n        if (passedObj[passedKey][i].h > 0) {\n          newLayer.style.height = passedObj[passedKey][i].h;\n        }\n        newGroup = document.createElementNS(xmlns, 'g');\n        newGroup.setAttribute('id', `${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`);\n        newGroup.setAttribute('opacity', 1);\n        newTranslateGroup.prepend(newGroup);\n\n        passedObj[passedKey][i].processed = true;\n      }\n    }\n\n    let addArray = [];\n    let currentLevel = 1;\n    for (var i = 0; i < passedObj[passedKey].length; i++) {\n      passedObj.layerCount = passedObj[passedKey][i]._layer;\n      if (passedObj[passedKey][i].parent > 0) {\n        for (let j = 0; j < passedObj.layers.length; j++) {\n          if (passedObj[passedKey][j].ind == passedObj[passedKey][i].parent) {\n            if (passedObj[passedKey][i].tt > 0) {\n              for (let k = i - 1; k >= 0; k--) {\n                if (passedObj[passedKey][k].td > 0) {\n                  passedObj[passedKey][i]._mask = `_${animationId}_${depth}_layerMask${passedObj[passedKey][k].ind}`;\n                  break;\n                }\n              }\n            }\n            passedObj.layerCount++;\n            addArray.push({\"item\": i, \"level\": currentLevel});\n\n            if (!passedObj[passedKey][j]._addedToDom) {\n              resolveParents(animationId, j, lastMaskId, passedObj, passedKey, depth, 1, addArray, currentLevel + 1);\n            }\n            passedObj[passedKey][i]._parent = passedObj[passedKey][j]._layer;\n            passedObj[passedKey][i]._parentIdx = j;\n            //if (passedObj[passedKey][i]._addedToDom != true) {\n              passedObj[passedKey][i].domObj = {};\n              passedObj[passedKey][i].domObj.newLayer = document.createElementNS(xmlns, 'g');\n              passedObj[passedKey][i].domObj.newLayer.setAttribute('id', `${animationId}_${depth}_layer${passedObj[passedKey][i]._layer}`);\n              passedObj[passedKey][i].domObj.newLayer.setAttribute('opacity', 1);\n      \n              //document\n              //  .getElementById(`${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._parent}`)\n              //  .prepend(newLayer);\n              passedObj[passedKey][i].domObj.newTranslateGroup = document.createElementNS(xmlns, 'g');\n              passedObj[passedKey][i].domObj.newTranslateGroup.setAttribute(\n                'id',\n                `${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._layer}`,\n              );\n              passedObj[passedKey][i].domObj.newTranslateGroup.setAttribute('opacity', 1);\n              //newLayer.prepend(newTranslateGroup);\n              if (passedObj[passedKey][i].w > 0) {\n                passedObj[passedKey][i].domObj.newLayer.style.width = passedObj[passedKey][i].w;\n              }\n              if (passedObj[passedKey][i].h > 0) {\n                passedObj[passedKey][i].domObj.newLayer.style.height = passedObj[passedKey][i].h;\n              }\n              passedObj[passedKey][i].domObj.newGroup = document.createElementNS(xmlns, 'g');\n              passedObj[passedKey][i].domObj.newGroup.setAttribute('id', `${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`);\n              passedObj[passedKey][i].domObj.newGroup.setAttribute('opacity', 1);\n              //newTranslateGroup.prepend(newGroup);\n\n              passedObj[passedKey][i].domObj.newLayer.prepend(passedObj[passedKey][i].domObj.newTranslateGroup);\n              passedObj[passedKey][i].domObj.newTranslateGroup.prepend(passedObj[passedKey][i].domObj.newGroup);\n              //document\n              //  .getElementById(`${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._parent}`)\n              //  .prepend(passedObj[passedKey][i].domObj.newLayer);\n\n              passedObj[passedKey][i]._addedToDom = true;\n              passedObj[passedKey][i].domObj.level = 1;\n              passedObj[passedKey][i].processed = false;\n\n              passedObj[passedKey][j]._child.push(`${animationId}_${depth}_layerGroup${passedObj[passedKey][i].parent}`);\n              passedObj[passedKey][j]._childId.push(i);\n\n            //}\n          }\n        }\n      }\n    }\n\n    let itemsThisLevel = 1;\n    let tempLevel = 1;\n    while (itemsThisLevel > 0) {\n      itemsThisLevel = 0;\n      let tempArray = [];\n      for (let j = 0; j < addArray.length; j++) {\n        if (addArray[j].level == tempLevel) {\n          tempArray.push(addArray[j].item);\n          itemsThisLevel++;\n        }\n      }\n      tempLevel++;\n      tempArray.sort(function(a, b){return a-b});\n      \n      /*\n      let tempHalf1 = [];\n      let tempHalf2 = [];\n      for (let i = 0; i < tempArray.length; i++) {\n        if (passedObj[passedKey][tempArray[i]].ind <= passedObj[passedKey][passedObj[passedKey][tempArray[i]]._parentIdx].ind) {\n          tempHalf1.push(tempArray[i]);\n        } else {\n          tempHalf2.push(tempArray[i]);\n        }\n      }\n      tempHalf2.sort(function(a, b){return b-a});\n      tempArray = [];\n      tempArray = tempArray.concat(tempHalf1, tempHalf2);\n      //tempArray.concat(tempHalf2);\n      */\n      \n      if (itemsThisLevel > 0) {\n        tempArray.forEach(i => {\n            if (passedObj[passedKey][passedObj[passedKey][i]._parentIdx].hasOwnProperty('domObj')) {\n              if (passedObj[passedKey][i].ind > passedObj[passedKey][passedObj[passedKey][i]._parentIdx].ind) {\n                passedObj[passedKey][passedObj[passedKey][i]._parentIdx].domObj.newTranslateGroup.prepend(passedObj[passedKey][i].domObj.newLayer);\n              } else {\n                passedObj[passedKey][passedObj[passedKey][i]._parentIdx].domObj.newTranslateGroup.append(passedObj[passedKey][i].domObj.newLayer);\n              }\n            } else {\n              if (passedObj[passedKey][i].ind >= passedObj[passedKey][i]._parent) {\n                getAnimationComponent(animationId, `${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._parent}`)\n                  .prepend(passedObj[passedKey][i].domObj.newLayer);\n              } else {\n                getAnimationComponent(animationId, `${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._parent}`)\n                  .append(passedObj[passedKey][i].domObj.newLayer);\n              }\n            }\n          }\n        );\n      }\n    }\n\n    for (var i = 0; i < passedObj[passedKey].length; i++) {\n      if (passedObj[passedKey][i].hasOwnProperty('domObj')) {\n        delete passedObj[passedKey][i].domObj;\n      }\n    }\n\n  //}\n\n\n  for (var i = 0; i < passedObj.layers.length; i++) {\n    passedObj[passedKey][i]._inPoint = -1;\n    passedObj[passedKey][i]._outPoint = -1;\n    if (passedObj[passedKey][i].hasOwnProperty('ip') && passedObj[passedKey][i].ip >= 0) {\n      passedObj[passedKey][i]._inPoint = passedObj[passedKey][i].ip;\n    }\n    if (passedObj[passedKey][i].hasOwnProperty('op') && passedObj[passedKey][i].op > 0) {\n      passedObj[passedKey][i]._outPoint = passedObj[passedKey][i].op;\n      if (passedObj[passedKey][i]._outPoint > passedObj._totalFrames) {\n        passedObj[passedKey][i]._outPoint = passedObj._totalFrames;\n      }\n    } else {\n      passedObj[passedKey][i]._outPoint = passedObj._totalFrames;\n    }\n    stageSequence(\n      animationId,\n      `${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`,\n      passedObj[passedKey][i]._inPoint,\n      passedObj[passedKey][i]._outPoint,\n    );\n\n    passedObj.layerCount = passedObj[passedKey][i]._layer;\n    newLayer = getAnimationComponent(animationId, `${animationId}_${depth}_layer${passedObj[passedKey][i]._layer}`);\n    newGroup = getAnimationComponent(animationId, `${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`);\n    if (passedObj[passedKey][i].tt > 0) {\n      getAnimationComponent(animationId, `${animationId}_${depth}_layer${passedObj[passedKey][i]._layer}`)\n        .setAttribute('mask', `url(#${passedObj[passedKey][i]._mask})`);\n      getAnimationComponent(animationId, `${animationId}_${depth}_layer${passedObj[passedKey][i]._layer}`)\n        .setAttribute('style', 'display: block;');\n    }\n    passedObj._currentLayer = { _layer: '', _inPoint: '', _outPoint: '' };\n    //passedObj._currentLayer = passedObj[passedKey][i]._layer;\n    passedObj._currentLayer._layer = passedObj[passedKey][i]._layer;\n    passedObj._currentLayer._inPoint = passedObj[passedKey][i]._inPoint;\n    passedObj._currentLayer._outPoint = passedObj[passedKey][i]._outPoint;\n    if (passedObj[passedKey][i].hasOwnProperty('refId')) {\n      let tempRef = -1;\n      for (let m = 0; m < animation[animationId].assets.length; m++) {\n        if (typeof animation[animationId].assets[m] != 'undefined' && animation[animationId].assets[m].id == passedObj[passedKey][i].refId) {\n          tempRef = m;\n          break;\n        }\n      }\n      if (tempRef >= 0) {\n        var tempDepth = depth;\n        animation[animationId].assets[tempRef] = getLayers(\n          elementId,\n          animationId,\n          newGroup,\n          animation[animationId].assets[tempRef],\n          'layers',\n          depth,\n        );\n        //animation[animationId].depth--;\n        depth = tempDepth;\n      }\n    }\n\n    if (passedObj[passedKey][i].hasOwnProperty('shapes')) {\n      passedObj._currentLayerGroup = { _layer: 0, _inPoint: '', _outPoint: '' };\n      //passedObj._currentLayerGroup = passedObj[passedKey][i]._layer;\n      passedObj._currentLayerGroup._layer = passedObj[passedKey][i]._layer;\n      passedObj._currentLayerGroup._inPoint = passedObj[passedKey][i]._inPoint;\n      passedObj._currentLayerGroup._outPoint = passedObj[passedKey][i]._outPoint;\n      passedObj[passedKey][i] = getShapes(\n        elementId,\n        animationId,\n        passedObj[passedKey][i],\n        newGroup,\n        `${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`,\n        false,\n        passedObj[passedKey][i].td,\n        depth,\n      );\n      if (passedObj[passedKey][i].hasOwnProperty('shapes')) {\n        passedObj._boundingX = newGroup.getBoundingClientRect().width / 2;\n        passedObj._boundingY = newGroup.getBoundingClientRect().height / 2;\n      }\n    } else if (passedObj[passedKey][i]._inPoint > 0) {\n      // console.log(\"layer: \" + i);\n      // newLayer.style.display = 'none';\n    }\n\n    if (passedObj[passedKey][i].hasOwnProperty('ks')) {\n      if (passedObj[passedKey][i].ks.hasOwnProperty('a')) {\n        if (passedObj[passedKey][i].ks.a.hasOwnProperty('k')) {\n          if (passedObj[passedKey][i].ks.a.k.length > 1) {\n            passedObj[passedKey][i]._anchorX = passedObj[passedKey][i].ks.a.k[0];\n            passedObj[passedKey][i]._anchorY = passedObj[passedKey][i].ks.a.k[1];\n          }\n        }\n      }\n\n      if (passedObj[passedKey][i].ks.hasOwnProperty('p')) {\n        passedObj[passedKey][i].ks = getPosition(\n          passedObj[passedKey][i].ks,\n          null,\n          'p',\n          true,\n          animationId,\n          1,\n          passedObj[passedKey][i],\n          depth,\n        );\n        if (passedObj[passedKey][i].ks.p.hasOwnProperty('k')) {\n          if (passedObj[passedKey][i].ks.p.k.length > 1) {\n            if (passedObj[passedKey][i].ks.p.k[0].hasOwnProperty('s')) {\n            } else {\n              /*if (passedObj[passedKey][i]._anchorX != 0) {\n                posX = passedObj[passedKey][i].ks.p.k[0] - passedObj[passedKey][i]._anchorX;\n              } else {\n                posX = passedObj[passedKey][i].ks.p.k[0]; // passedObj._boundingX;\n              }\n              if (passedObj[passedKey][i]._anchorY != 0) {\n                posY = passedObj[passedKey][i].ks.p.k[1] - passedObj[passedKey][i]._anchorY;\n              } else {\n                posY = passedObj[passedKey][i].ks.p.k[1]; // passedObj._boundingY;\n              }\n              /*if (passedObj[passedKey][i].td > 0) {\n                document\n                  .getElementById(`${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`)\n                  .setAttribute('transform', `translate(${posX},${posY})`);\n                  //.setAttribute('transform', `matrix(1,0,0,1,${posX},${posY})`);\n              } else {\n                document\n                  .getElementById(`${animationId}_${depth}_layer${passedObj[passedKey][i]._layer}`)\n                  .setAttribute('transform', `translate(${posX},${posY})`);\n                  //.setAttribute('transform', `matrix(1,0,0,1,${posX},${posY})`);\n              }\n              passedObj[passedKey][i]._posX = posX;\n              passedObj[passedKey][i]._posY = posY;*/\n              for (var z = 0; z <= animation[animationId]._totalFrames; z++) {\n                addGroupPositionTransform(z, passedObj[passedKey][i].ks.p.k, true, animationId, 'p', 1, passedObj[passedKey][i], depth, true);\n              }\n            }\n          }\n        }\n      }\n\n      if (passedObj[passedKey][i].ks.hasOwnProperty('r')) {\n        if (passedObj[passedKey][i].ks.r.k.length > 1) {\n          if (passedObj[passedKey][i].ks.r.k[0].hasOwnProperty('s')) {\n            passedObj[passedKey][i].ks = getPosition(\n              passedObj[passedKey][i].ks,\n              null,\n              'r',\n              true,\n              animationId,\n              1,\n              passedObj[passedKey][i],\n              depth,\n            );\n          } else {\n            for (var z = 0; z <= animation[animationId]._totalFrames; z++) {\n              addGroupPositionTransform(z, passedObj[passedKey][i].ks.r.k, true, animationId, 'r', 1, passedObj[passedKey][i], depth, true);\n            } \n          }\n        }\n      }\n      if (passedObj[passedKey][i].ks.hasOwnProperty('s')) {\n        if (passedObj[passedKey][i].ks.s.k.length > 1) {\n          if (passedObj[passedKey][i].ks.s.k[0].hasOwnProperty('s')) {\n            passedObj[passedKey][i].ks = getPosition(\n              passedObj[passedKey][i].ks,\n              null,\n              's',\n              true,\n              animationId,\n              1,\n              passedObj[passedKey][i],\n              depth,\n            );\n          } else {\n            for (var z = 0; z <= animation[animationId]._totalFrames; z++) {\n                addGroupPositionTransform(z, passedObj[passedKey][i].ks.s.k, true, animationId, 's', 1, passedObj[passedKey][i], depth, true);\n            }\n          }\n        }\n      }\n      if (passedObj[passedKey][i].ks.hasOwnProperty('o')) {\n        if (passedObj[passedKey][i].ks.o.k.length > 1) {\n          if (passedObj[passedKey][i].ks.o.k[0].hasOwnProperty('s')) {\n            passedObj[passedKey][i].ks = getPosition(\n              passedObj[passedKey][i].ks,\n              null,\n              'o',\n              true,\n              animationId,\n              1,\n              passedObj[passedKey][i],\n              depth,\n            );\n          } else {\n            for (var z = 0; z <= animation[animationId]._totalFrames; z++) {\n                addGroupPositionTransform(z, passedObj[passedKey][i].ks.o.k, true, animationId, 'o', 1, passedObj[passedKey][i], depth, true);\n            } \n          }\n        }\n      }\n    }\n  }\n  return passedObj;\n}\n\n/**\n * Scale layer objects relative to the animation window size - needed because some layers have much bigger defined window dimensions.\n * \n * @param {string} elementId The 'id' attribute of the DOMElement 'elementObj'.\n * @param {integer} animationId The serial number of this animation.\n * @param {DOMElement} elementObj The DOMElement describing the first Lottie layer element in the animation.\n * @param {JSON} passedObj The object that has 'layers', shapes group ('gr'), or 'assets'.\n * @param {string} passedKey The name of the array, in 'passedObj', that lists the target layer objects.\n * @param {integer} depth The depth of the current iteration of layer objects.\n */\nexport function scaleLayers(elementId, animationId, elementObj, passedObj, passedKey, depth) {\n  var currentObj;\n  //alert(animation[animationId].currScale);\n  for (var i = 0; i < passedObj[passedKey].length; i++) {\n    if (passedObj[passedKey][i].parent > 0) {\n    } else {\n      if (passedObj[passedKey][i].td > 0) {\n      } else {\n        if (passedObj[passedKey][i].hasOwnProperty(\"parent\")) {\n        } else {\n          //alert(animationId + \"_\" + depth + \"_layer\" + passedObj[passedKey][i]._layer);\n          currentObj = getAnimationComponent(animationId, animationId + \"_\" + depth + \"_layer\" + passedObj[passedKey][i]._layer);\n          //currentObj.setAttributeNS(null, 'viewBox', `0 0 ${animation[animationId]._maxWidth} ${animation[animationId]._maxHeight}`);\n          currentObj.setAttribute(\"transform\", \"scale(\" + animation[animationId]._currScale + \")\");\n        }\n      }\n    }\n  }\n}\n\n/**\n * Initializes all the parameters for animation[animationId], which will contain the scene graph for this Lottie animation, before and after calling getLayers().\n * \n * @param {*} elementId The 'id' attribute of the DOMElement 'elementObj'.\n * @param {*} animationId The serial number of this animation.\n * @param {*} elementObj The DOMElement in which the animation should be rendered.\n * @param {*} autoplay If 'true', then start playing the animation upon being loaded.\n * @param {*} loop If 'true', then the animation keeps looping.\n * @param {*} customName A custom name given to this Lottie animation - for future use.\n */\nexport function buildGraph(elementId, animationId, elementObj, autoplay, loop, customName) {\n  animation[animationId]._loaded = false;\n  animation[animationId]._renderObj = elementObj;\n  try {\n    animation[animationId].depth = 0;\n    animation[animationId].shapeCount = 0;\n    animation[animationId].layerCount = 0;\n    animation[animationId]._removed = false;\n    animation[animationId]._totalFrames = parseInt(animation[animationId].op - animation[animationId].ip);\n    animation[animationId]._framesPerSec = animation[animationId]._totalFrames / animation[animationId].fr;\n    animation[animationId]._frameTime = (1 / animation[animationId].fr) * 1000;\n    animation[animationId]._currentFrame = -1;\n    animation[animationId]._lastTime = Date.now();\n    animation[animationId]._autoplay = autoplay;\n    animation[animationId]._loop = loop;\n    animation[animationId]._customName = customName;\n    animation[animationId]._toBePaused = false;\n    animation[animationId]._pauseAt = 0;\n    /*if (autoplay) {\n      animation[animationId]._paused = false;\n    } else {\n      animation[animationId]._paused = true;\n    }*/\n    animation[animationId]._maxWidth = 0;\n    animation[animationId]._maxHeight = 0;\n    animation[animationId]._skewW = 0;\n    animation[animationId]._skewH = 0;\n    animation[animationId]._currScale = 1;\n    animation[animationId]._lastFrame = 0;\n    animation[animationId]._loopCount = 0;\n    //animation[animationId]._nextInterval = animation[animationId]._frameTime;\n    //animation[animationId]._timeout = 0;\n\n    if (smallestFrameTime > animation[animationId]._frameTime) {\n      smallestFrameTime = animation[animationId]._frameTime;\n    }\n\n    //for debugging\n    animation[animationId]._debugTimeElapsed = 0;\n    animation[animationId]._debugContainer = '';\n    //////\n\n    //elementObj.style.width = animation[animationId].w;\n    //elementObj.style.height = animation[animationId].h;\n    //elementObj.setAttribute('width', animation[animationId].w);\n    //elementObj.setAttribute('height', animation[animationId].h);\n\n    const newSVG = document.createElementNS(xmlns, 'svg');\n    newSVG.setAttribute('xmlns', xmlns);\n    // newSVG.setAttributeNS(null, 'width', animation[animationId].w);\n    // newSVG.setAttributeNS(null, 'height', animation[animationId].h);\n    newSVG.setAttributeNS(null, 'viewBox', `0 0 ${animation[animationId].w} ${animation[animationId].h}`);\n    newSVG.setAttributeNS(null, 'preserveAspectRatio', 'xMidYMid meet');\n    newSVG.style.contain = 'strict';\n    newSVG.style.width = '100%';\n    newSVG.style.height = '100%';\n    newSVG.setAttributeNS(null, 'id', `_svg${animationId}`);\n    elementObj.prepend(newSVG);\n\n    animation[animationId].defs = document.createElementNS(xmlns, 'defs');\n    animation[animationId].defs.setAttributeNS(null, 'id', `_defs${animationId}`);\n    animation[animationId].gradientCount = 0;\n    animation[animationId].maskCount = 0;\n    newSVG.prepend(animation[animationId].defs);\n\n    const newLayer = document.createElementNS(xmlns, 'g');\n    newLayer.setAttributeNS(null, 'id', `_lanim${animationId}`);\n    newSVG.append(newLayer);\n\n    const newCompute = document.createElementNS(xmlns, 'g');\n    newCompute.setAttributeNS(null, 'id', `_compute${animationId}`);\n    newCompute.style.display = 'none';\n    newLayer.prepend(newCompute);\n\n    animation[animationId]._scene = new Array(animation[animationId]._totalFrames + 10)\n      .fill(null)\n      .map(() => ({ _transform: [] }));\n    animation[animationId]._instated = {};\n    animation[animationId]._refObj = [];\n    animation[animationId]._objSize = {};\n\n    const clipPath = document.createElementNS(xmlns, 'clipPath');\n    clipPath.setAttributeNS(null, 'id', `_clip${animationId}`);\n    animation[animationId].defs.prepend(clipPath);\n    const clipPathRect = document.createElementNS(xmlns, 'rect');\n    clipPathRect.setAttribute('x', 0);\n    clipPathRect.setAttribute('y', 0);\n    clipPathRect.setAttribute('width', animation[animationId].w);\n    clipPathRect.setAttribute('height', animation[animationId].h);\n    clipPath.append(clipPathRect);\n\n    animation[animationId] = getLayers(elementId, animationId, newLayer, animation[animationId], 'layers', 0);\n\n    if (animation[animationId]._maxWidth > 0 || animation[animationId]._maxHeight > 0) {\n      var scaleW = animation[animationId].w / animation[animationId]._maxWidth;\n      var scaleH = animation[animationId].h / animation[animationId]._maxHeight;\n      //animation[animationId]._skewW = animation[animationId]\n\n      //clipPathRect.setAttribute('x', 0);\n      //clipPathRect.setAttribute('y', 0);\n      //clipPathRect.setAttribute('width', animation[animationId]._maxWidth);\n      //clipPathRect.setAttribute('height', animation[animationId]._maxHeight);\n    \n      if (scaleW > scaleH) {\n        animation[animationId]._currScale = scaleW;\n      } else {\n        animation[animationId]._currScale = scaleH;\n      }\n\n      //newSVG.setAttributeNS(null, 'viewBox', `0 0 ${animation[animationId]._maxWidth} ${animation[animationId]._maxHeight}`);\n\n      //newLayer.setAttribute(\"transform\", \"scale(\" + animation[animationId]._currScale + \")\");\n\n      //scaleLayers(elementId, animationId, newLayer, animation[animationId], 'layers', 1);\n    }\n\n    newLayer.setAttributeNS(null, 'clip-path', `url(#_clip${animationId})`);\n    animation[animationId]._buildDone = true;\n    animationLoading -= 1;\n    animation[animationId]._loaded = true;\n    animation[animationId]._renderObj.dispatchEvent(new CustomEvent(\"DOMLoaded\", {bubbles: true, detail:{\"animation\": animationId} }));\n    animation[animationId]._renderObj.onmouseenter = function() {\n      animation[animationId]._renderObj.dispatchEvent(new CustomEvent(\"hovered\", {bubbles: true, detail:{\"animation\": animationId} }));\n    }\n    \n    if (! _useWebWorker) {\n      if (!animation[animationId]._autoplay) {\n        //goToAndStop(1, '', animation[animationId]._elementId);\n        animation[animationId]._currentFrame = -1;\n        animation[animationId]._toBePaused = true;\n      } else {\n        //loadFrame(animationId, 1);\n      }\n    } else {\n      fireWorker(animationId);\n    }\n  } catch (e) {\n\t\t//console.error(`Failed to load animation.${e}`);\n\t\t//elementObj.style.height = 0;\n\t\t//elementObj.style.width = 0;\n    animation[animationId]._renderObj.dispatchEvent(new CustomEvent(\"onLoadError\", {bubbles: true, detail:{\"error\": e, \"animation\": animationId} }));\n    animation[animationId]._renderObj.dispatchEvent(new CustomEvent(\"loadError\", {bubbles: true, detail:{\"error\": e, \"animation\": animationId} }));\n\t\tanimationCount = animationCount - 1;\n\t\telementObj.innerHTML = e;\n\t\tanimation.splice(animationId, 1);\n\t}\n}\n\n/**\n * Load a Lottie JSON file from a URL and then pass to buildGraph().\n * \n * @param {string} src A URL that points to a Lottie JSON file.\n * @param {DOMElement} domElement The DOMElement object in which the Lottie animation will be animated.\n * @param {string} elementId The 'id' of the DOMElement pointed to by 'domElement'.\n * @param {boolean} _autoplay If 'true', then start playing the animation upon being loaded.\n * @param {boolean} _loop If 'true', then the animation keeps looping.\n * @param {boolean} _debugAnimation If 'true', then display debug information.\n * @param {DOMElement} _debugContainer The DOMElement in which debug information is to be displayed.\n */\nexport function getJson(\n  src,\n  domElement,\n  elementId,\n  _autoplay,\n  _loop,\n  _debugAnimation,\n  _debugContainer,\n  animationId\n) {\n  const http = new XMLHttpRequest();\n  http.withCredentials = false;\n  http.open('GET', src, true);\n  //http.setRequestHeader('Access-Control-Allow-Origin', '*');\n  http.onreadystatechange = function () {\n    if (http.readyState == 4 && http.status == 200) {\n      let received = http.responseText;\n      if (received.search(/(^(\"|'))|((\"|')$)/g) > -1) {\n        received = received.replace(/(^(\"|'))|((\"|')$)/g, \"\");\n        received = received.replace(/\\\\\"/g, '\"');\n      }\n      //animationCount += 1;\n      //const currentAnimation = animationCount;\n      const currentAnimation = animationId;\n      animation[currentAnimation] = JSON.parse(received);\n      animation[currentAnimation]._elementId = elementId;\n\n      if (_debugAnimation && typeof _debugContainer == 'object') {\n        animation[currentAnimation]._debugAnimation = _debugAnimation;\n        animation[currentAnimation]._debugContainer = _debugContainer;\n        animation[currentAnimation]._curFPS = 0;\n        animation[currentAnimation]._timeElapsed = 0;\n        animation[currentAnimation]._debugObj = document.createElement('div');\n        animation[currentAnimation]._debugObj.setAttribute('id', `__dbg__${currentAnimation}`);\n        animation[currentAnimation]._debugObj.style.display = 'block';\n        _debugContainer.prepend(animation[currentAnimation]._debugObj);\n      }\n\n      buildGraph(elementId, currentAnimation, domElement, _autoplay, _loop);\n    }\n  };\n  http.send();\n}\n\n/// ////////// CONTROL\n\n// var animationManager = (function () {\nconst jlottie = {};\n\n/**\n * Destroys and unloads the animation indicated by 'name'.\n * \n * @param {string} name The 'id' value of the container of this Lottie animation.\n */\nexport function destroy(name) {\n  if (animationCount < 0) {\n    return;\n  }\n  if (name === undefined) {\n    return;\n    /*const elements = [];\n    for (var i = 0; i <= animationCount; i++) {\n      elements.push(animation[i]._elementId);\n    }\n    animation = [];\n    for (var i = 0; i <= elements; i++) {\n      document.getElementById(elements[i]).innerHTML = '';\n      animationCount -= 1;\n    }*/\n  } else {\n    name.toString();\n    name = name.replace(/#/g, '');\n    if (name.length > 0) {\n      for (var i = 0; i <= animationCount; i++) {\n        if (animation[i]._elementId == name || animation[i]._customName == name) {\n          pause(name);\n          animationCount -= 1;\n          animation.splice(i, 1);\n          getAnimationComponent(i, name).innerHTML = '';\n          break;\n        }\n      }\n    }\n  }\n}\n\n/**\n * Plays the animation indicated by 'name'.\n * \n * @param {string} name The 'id' value of the container of this Lottie animation.\n */\nexport function play(name) {\n  if (animationCount < 0) {\n    return;\n  }\n  if (name === undefined) {\n    for (var i = 0; i <= animationCount; i++) {\n      animation[i]._paused = false;\n    }\n  } else {\n    name.toString();\n    name = name.replace(/#/g, '');\n    for (var i = 0; i <= animationCount; i++) {\n      if (animation[i]._elementId == name || animation[i]._customName == name) {\n        animation[i]._paused = false;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Pauses the animation indicated by 'name'.\n * \n * @param {string} name The 'id' value of the container of this Lottie animation.\n */\n export function pause(name) {\n  if (name === undefined) {\n    for (var i = 0; i <= animationCount; i++) {\n      animation[i]._paused = true;\n    }\n  } else {\n    name.toString();\n    name = name.replace(/#/g, '');\n    for (var i = 0; i <= animationCount; i++) {\n      if (animation[i]._elementId == name || animation[i]._customName == name) {\n        animation[i]._paused = true;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Stops the animation indicated by 'name'.\n * \n * @param {string} name The 'id' value of the container of this Lottie animation.\n */\nexport function stop(name) {\n  goToAndStop(0, false, name);\n}\n\n/**\n * Stops the animation, goes to the specified frame and freezes there.\n * \n * @param {integer} _frame The frame number.\n * @param {boolean} isFrame Indicates whether '_frame' represents time in number of frames (true) or milliseconds (false) - this is currently not implemented.\n * @param {string} name The 'id' value of the container of this Lottie animation.\n * \n */\nexport function goToAndStop(_frame, isFrame, name) {\n  if (typeof isFrame === 'string') {\n    name = isFrame;\n  }\n  if (animationCount < 0) {\n    return;\n  }\n  if (name === undefined) {\n    for (var i = 0; i <= animationCount; i++) {\n      animation[i]._toBePaused = true;\n      animation[i]._pauseAt = _frame;\n      animation[i]._currentFrame = _frame - 1;\n      //loadFrame(i, _frame);\n    }\n  } else {\n    name.toString();\n    name = name.replace(/#/g, '');\n    for (var i = 0; i <= animationCount; i++) {\n      if (animation[i]._elementId == name || animation[i]._customName == name) {\n        animation[i]._toBePaused = true;\n        animation[i]._pauseAt = _frame;\n        animation[i]._currentFrame = _frame - 1;\n        debug(() => [\"gts\", animation[i]._currentFrame, isFrame, name]);\n        //console.log(`${name} == ${_frame}`);\n        //loadFrame(i, _frame);\n        break;\n      }\n    }\n  }\n}\n\n/** \n  * Lottie animation loader for jlottie.\n  *\n  * @param {JSON} obj Includes parameters that dictate how a Lottie is loaded.\n  * @param {DOMElement} obj.container A DOMElement object that will be used as the container for the Lottie animation.\n  * @param {boolean} obj.autoplay Instructs jlottie to immediately play the Lottie after it is loaded.\n  * @param {boolean} obj.loop Instructs jlottie to keep looping this animation.\n  * @param {boolean} obj.debugAnimation Instructs jlottie to display debug information (currently limited to just FPS data).\n  * @param {DOMElement} obj.debugContainer A DOMElement in which the debug data will be displayed.\n  *\n  */\nexport function loadAnimation(obj) {\n  if (obj.container === undefined && obj.path === undefined && obj.animationData === undefined) {\n    return;\n  }\n  let autoplay = true;\n  let loop = true;\n  let debugContainer;\n\n  if (!(obj.autoplay === undefined)) {\n    if (obj.autoplay === true || obj.autoplay === false) {\n      autoplay = obj.autoplay;\n    }\n  }\n\n  if (!(obj.loop === undefined)) {\n    if (obj.loop === true || obj.loop === false) {\n      loop = obj.loop;\n    }\n  }\n\n  if (!(obj.debug === undefined)) {\n    if (obj.debug === true) {\n      if (typeof obj.debugContainer != 'undefined') {\n        debugContainer = obj.debugContainer;\n      }\n    }\n  }\n\n  if (!(obj.debugAnimation === undefined)) {\n    if (obj.debugAnimation === true) {\n      debugAnimation = true;\n    }\n  }\n\n  if (! _useWebWorker) {\n    if (!(obj.useWebWorker === undefined)) {\n      if (obj.useWebWorker === true) {\n        _useWebWorker = true;\n      }\n    }\n  }\n\n  animationCount += 1;\n  let currentAnimation = animationCount;\n  animation[currentAnimation] = {};\n  animation[currentAnimation]._loaded = false;\n  if (!(obj.animationData === undefined) && obj.animationData.length > 0) {\n    //currentAnimation = animationCount;\n    animation[currentAnimation] = JSON.parse(obj.animationData);\n    animation[currentAnimation]._elementId = obj.container.id;\n    animation[currentAnimation]._debugContainer = obj.debugContainer;\n    animation[currentAnimation]._debugAnimation = obj.debug;\n    buildGraph(obj.container.id, currentAnimation, obj.container, autoplay, loop);\n  } else if (!(obj.path === undefined) && obj.path) {\n    getJson(\n      obj.path, \n      obj.container,\n      obj.container.id,\n      autoplay,\n      loop,\n      obj.debug,\n      obj.debugContainer,\n      currentAnimation\n    );\n  }\n  if (!playStarted) {\n    playStarted = true;\n    if (! _useWebWorker) {\n      timeoutObj = setTimeout(window.requestAnimationFrame(lottiemate), 0);\n    }\n  }\n\n  animation[currentAnimation]._elementId = obj.container.id;\n  animation[currentAnimation].destroy = function() {destroy(animation[currentAnimation]._elementId);}\n  animation[currentAnimation].play = function() {play(animation[currentAnimation]._elementId);}\n  animation[currentAnimation].pause = function() {pause(animation[currentAnimation]._elementId);}\n  animation[currentAnimation].stop = function() {stop(animation[currentAnimation]._elementId);}\n  animation[currentAnimation].goToAndStop = function(frame) {goToAndStop(frame, animation[currentAnimation]._elementId);}\n  return animation[currentAnimation];\n}\n"],"names":["xmlns","animation","timeoutObj","playStarted","smallestFrameTime","debugAnimation","_useWebWorker","getAnimationComponent","animationId","id","_renderObj","querySelector","CSS","escape","debug","loggerFn","loggingArgs","Array","isArray","console","log","arcLength","p1","p2","Math","sqrt","pow","bezierCurve","c1","c2","fromT","toT","isLayer","refKey","addTransformation","objectId","depth","customFlag","isEnd","newNodes","hasOwnProperty","length","x","y","timeTick","oneMinusT","frames","currentFrame","i","push","_comp","t","_frame","parseInt","s","m","n","o","v","k","addGroupPositionTransform","lottiemate","currentDate","Date","now","animationCount","_loaded","_lastTime","_frameTime","_removed","_paused","_debugAnimation","_timeElapsed","_currentFrame","_totalFrames","_loopCount","dispatchEvent","CustomEvent","bubbles","detail","_loop","j","_scene","_transform","fillSet","isGradient","stops","fillObj","querySelectorAll","setAttribute","offsets","styles","refObjSet","currentObj","refObj","currentObjOther","refObjOther","isTween","dataString","combined","fill","strokeWidth","opacitySet","opacity","hide","stageEvent","stageObj","style","display","show","postRender","debugDate","dispString","_curFPS","fr","_debugObj","innerHTML","goToAndStop","_elementId","_toBePaused","_pauseAt","renderDone","clearTimeout","setTimeout","requestAnimationFrame","window","URL","webkitURL","lottiemateBlob","Blob","type","workers","timeouts","fireWorker","animData","JSON","stringify","Worker","createObjectURL","postMessage","onmessage","e","data","previousDate","deltaTime","getEmptyTransform","transforms","getEmptyFillTransform","getEmptyStageTransform","findExistingTransform","frame","forFill","getIndex","undefined","updateTransform","existing","stageSequence","inPoint","outPoint","lastState","position","preTranslate","isStart","posX","_currentLayerGroup","_inPoint","_outPoint","_currentLayer","Number","isNaN","td","_layer","_currentShapeGroup","anchorX","_anchorX","anchorY","_anchorY","_instated","_refObj","_objSize","getBoundingClientRect","width","height","sizeObjFromTransform","posY","halfWidth","halfHeight","paddingX","paddingY","currentScaleX","currentScaleY","scaleFactorX","scaleFactorY","scaleFactorZ","scale","deltaX","deltaY","scaled","paddingAnchorX","translateX","paddingAnchorY","translateY","matrix","rotateAngle","rotate","cosVal","cos","sinVal","sin","r","posZ","isTranslate","p","translate","opacityFactor","isSet","extrapolateOffsetKeyframe","offsetKeyframeObj","objLength","oldLength","emptyPos","returnedKeyframeObj","splice","extrapolatePathPosition","parentObj","getPosition","prepShapeEl","shapeObj","referrer","newShape","document","createElementNS","_shape","classList","add","prepend","_isShape","prepShapeRc","prepShapeRcKeyframe","prepDataString","sourceObject","closed","setDataString","sourceObj","shapeId","pathClosed","hideThis","prepShapeSh","ks","totalK","kCount","c","_data","prepShapeShKeyframe","prepShape","isMasked","ty","a","_startI","createGradientDef","start","end","gradient","radial","gradientCount","newDef","newDefId","NaN","defs","firstRun","opacities","newStop","append","lcEnum","getStrokeString","shapeGroup","strokeString","color","lineCap","lineJoin","miterLimit","w","sCount","lc","lj","getColorString","redVal","greenVal","blueVal","setShapeStrokes","shapesGroup","strokeToSet","setShapeColors","colorToSet","getTrim","getSegment","t0","t1","u0","u1","qxa","qxb","qxc","qxd","qya","qyb","qyc","qyd","segment","getLength","shapeIdx","startIdx","endIdx","fullBezierLength","bezierLength","_l","setTrim","trimToSet","it","minT","maxT","sIndex","eIndex","tempK","Object","assign","curSL","curEL","startShapeIndex","endShapeIndex","currentS","startSegment","endSegment","initIdx","sourceK","parse","startToTrim","unshift","getShapesGr","elementId","layerObj","refLabel","refGroup","outer","currentColor","currentStroke","currentTrim","stroked","trimmed","_isGradient","shapeCount","tt","_group","newGroup","_trIndex","g","getShapes","shapes","resolveParents","layerId","lastMaskId","passedObj","passedKey","level","addArray","passedLevel","ind","parent","_mask","_isMasked","_addedToDom","layerCount","_parent","_parentIdx","domObj","newLayer","newTranslateGroup","h","processed","_child","_childId","getLayers","elementObj","newMask","_maxWidth","_maxHeight","_isMask","layers","currentLevel","itemsThisLevel","tempLevel","tempArray","item","sort","b","forEach","ip","op","tempRef","assets","refId","tempDepth","_boundingX","_boundingY","z","buildGraph","autoplay","loop","customName","_framesPerSec","_autoplay","_customName","_skewW","_skewH","_currScale","_lastFrame","_debugTimeElapsed","_debugContainer","newSVG","setAttributeNS","contain","maskCount","newCompute","map","clipPath","clipPathRect","scaleW","scaleH","_buildDone","onmouseenter","getJson","src","domElement","http","XMLHttpRequest","withCredentials","open","onreadystatechange","readyState","status","received","responseText","search","replace","currentAnimation","_typeof","createElement","send","destroy","name","toString","pause","play","stop","isFrame","valueKeyframeObj","obj","container","path","animationData","debugContainer","useWebWorker","ref","nextObj"],"mappings":"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"}